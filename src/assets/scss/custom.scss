@import '../css/source.css';

/*
FALLBACK VALUE GUIDE: when to use inherit vs initial

inherit ensures that children respect the parent's styling.
initial ensures that properties are reset to their default values 
  .ideal for resetting styles to avoid unintended inherited styles


| Property Type                                | Fallback |
|----------------------------------------------|----------|
| Color, font size/ family, line height        | inherit  |
| Fixed component backgrounds                  | initial  |
| Reset borders/shadows/z-index                | initial  |
| Opacity, visibility                          | inherit  |
| Flexible layout alignment (Flex / Grid)      | inherit  |
| Positioning layout alignment (Absolute)      | initial  |
| Font family and weight (nested text)         | inherit  |
| Background color (for reset purposes)        | initial  |
| Border styling (reset)                       | initial  |
| Font style / weight / variant / wrap / align | initial  |
*/

/* 
  SHADOW SELECTION GUIDE: when to use a shadow
  There are three main shadow types in the system
  1: --connect__effects-shadow
  2: --connect__inner-shadow
  3: --connect__shadow-null
  4: --connect__shadow-lvl-focus
  4: --connect__shadow-lvl-active

  There are 9 shadow elevations ranging from minus 2 to 6
  minus elevations have --1/--2 and positive elevations have -1/-2/-3 etc
  Shadow types and shadow elevations work together. 
  A shadow elevation does not require a shadow type

|---------------------------------------------------------------------------|
| Component                                  | Shadow Type                  |
|---------------------------------------------------------------------------|
| Interactive components:                    | --connect__effects-shadow    |
|   elements that takes visual status line   |                              |
|   when correct / incorrect/ shown          |                              |     
|---------------------------------------------------------------------------|
| Inner Shadow components:                   | --connect__inner-shadow      |
|   elements that takes inner shadows        |                              |
|   these components can take a              |                              |
|   solid bg for state but no line           |                              |
|---------------------------------------------------------------------------|
| Components with no definer line:            | --connect__shadow-null       |
|   elements that takes no definer line       |                              |
|---------------------------------------------------------------------------|
| Focus Shadow components:                   | --connect__shadow-lvl-focus  |
|   elements that takes focus shadows        |                              |
|---------------------------------------------------------------------------|
| Active Shadow components:                  | --connect__shadow-lvl-active |
|   elements that takes active shadows       |                              |
|---------------------------------------------------------------------------|
*/

/* 
.connect__button Component

Buttons take variables in the following format
  1: theme variable for external theming
  2: variant variables for button tweaks e.g speech to text
  3: state variables, represents a visual state
  3.1 Secondary Buttons: state variables
      Variant = --connect__inner-status-color
      State --connect__inner-status-color-state

/*
| Property            |  Variant/State                | Fallback / Default                                       |
|---------------------|-------------------------------|----------------------------------------------------------|
| Font size           | --variant__btn-fs             | --connect__body-sm                                       |
| Line height         | --variant__btn-lh             | --connect__body-sm-lheight                               |
| Font weight         | --variant__btn-fw             | --connect__fw-regular                                    |
| Text transform      | --variant__btn-text-transform | --connect__text-capitalize                               |
| Background color    | --state__btn-bg               | --connect__primary-mid                                   |
| Border color        | --variant__btn-border-c       | --connect__surface-null                                  |
| Gap                 | --variant__btn-gap            | --connect__spacer-sm                                     |
| Padding X           | --variant__btn-padding-x      | var(--connect__spacer-sm) - var(--connect__btn-border-w) |
| Padding Y           | --variant__btn-padding-y      | var(--connect__spacer-sm) - var(--connect__btn-border-w) |
| Flex align          | --variant__btn-align          | center                                                   |
| Flex justify        | --variant__btn-justify        | space-between                                            |
| Border radius       | --variant__btn-border-radius  | --connect__radius-sm                                 |
| Height              | --variant__btn-h              | auto                                                     |
| Icon Fill           | --state-based-icon-fill        | --connect__icon-fill                                      |
*/

.connect__button,
.connect__button-group {
  --connect__btn-border-w: var(
    --theme__btn-border-w,
    var(--variant__btn-border-w, var(--connect__spacer-zero))
  );

  --connect__btn-padding-y: var(
    --theme__btn-padding-y,
    var(--variant__btn-padding-y, calc(var(--connect__spacer-sm) - var(--connect__btn-border-w)))
  );
  --connect__btn-padding-y: var(--variant__btn-padding-y, var(--connect__spacer-sm));

  --connect__btn-padding-x: var(
    --theme__btn-padding-x,
    var(--variant__btn-padding-x, calc(var(--connect__spacer-md) - var(--connect__btn-border-w)))
  );
  --connect__btn-padding-x: var(--variant__btn-padding-x, var(--connect__spacer-md));

  --icon__fill-color: var(--state-based-icon-fill, var(--connect__icon-fill-color));

  background-color: var(--variant__btn-bg, var(--state-based-bg, var(--connect__white)));
  border: var(--connect__spacer-zero);
  border-radius: var(--variant__btn-border-radius, var(--connect__radius-sm));
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);

  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: grid;
  font-family: var(--connect__font-sans);
  font-size: var(--variant__btn-fs, var(--connect__body-sm));
  font-weight: var(--variant__btn-fw, var(--connect__fw-regular, initial));
  gap: var(--variant__btn-gap, var(--connect__spacer-sm));
  grid-auto-columns: max-content;
  height: var(--connect__btn-h, auto);
  justify-content: var(--variant__btn-justify, space-between);
  line-height: var(--variant__btn-lh, var(--connect__body-sm-lheight));
  padding: var(--connect__btn-padding-y) var(--connect__btn-padding-x);
  place-items: var(--variant__btn-align, center) center;
  text-transform: var(--connect__text-capitalize);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow, fill, stroke;
  transition-timing-function: var(--connect__ease-out);
  width: var(--connect__btn-w, auto);

  &:not(:disabled) {
    &:hover {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-4);
    }

    &:active {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
    }

    &:focus-visible:not(:active) {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
    }
  }

  &:disabled {
    --variant__btn-bg: var(--connect__passive-100);

    --connect__state-based-pointer: var(--connect__disabled-cursor);
    --active-color: var(--connect__passive-500);
  }

  * {
    grid-row: 1;

    &:not(svg):not(span) {
      grid-column: 1 / span 2;
    }
  }

  &-contained {
    &:disabled {
      --variant__icon-fill: var(--active-color);
      --variant__btn-bg: var(--connect__passive-100);
    }
  }

  &-outlined {
    &:disabled {
      --variant__btn-bg: var(--connect__surface-white);
      --variant__icon-fill: var(--connect__disabled-light);
      --connect__inner-status-color-state: var(--connect__passive-200);
    }
  }

  &-text {
    --variant__btn-fw: var(--connect__fw-semi-bold);
    box-shadow: var(--connect__shadow-null);
  }

  &-plain {
    --variant__btn-bg: var(--connect__white);
    --active-color: var(--connect__surface-dark);
    --connect__icon-fill-color: var(--active-color);
  }

  &-primary {
    --variant__btn-bg: var(--connect__color-primary-500);
    --active-color: var(--connect__surface-white);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-primary-500);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-primary-500);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-primary-500);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-secondary {
    --variant__btn-bg: var(--connect__color-secondary-400);
    --active-color: var(--connect__surface-white);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-secondary-400);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-secondary-400);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-secondary-400);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-assistive {
    --variant__btn-bg: var(--connect__color-assistive-300);
    --active-color: var(--connect__color-neutral-100);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-assistive-300);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-assistive-300);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-assistive-300);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-caution {
    --variant__btn-bg: var(--connect__color-caution-500);
    --active-color: var(--connect__color-neutral-100);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-caution-500);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-caution-500);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-caution-500);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-negative {
    --variant__btn-bg: var(--connect__color-negative-400);
    --active-color: var(--connect__color-neutral-100);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-negative-400);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-negative-400);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-negative-400);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-constructive {
    --variant__btn-bg: var(--connect__color-constructive-400);
    --active-color: var(--connect__color-neutral-100);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-constructive-400);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-constructive-400);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-constructive-400);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-positive {
    --variant__btn-bg: var(--connect__color-positive-400);
    --active-color: var(--connect__color-neutral-100);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-positive-400);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-positive-400);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-positive-400);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-focus {
    --variant__btn-bg: var(--connect__color-focus-500);
    --active-color: var(--connect__color-neutral-100);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-focus-500);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-focus-500);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-focus-500);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-neutral {
    --variant__btn-bg: var(--connect__color-neutral-300);
    --active-color: var(--connect__color-neutral-100);
    --connect__icon-fill-color: var(--active-color);

    &.connect__button-outlined {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-neutral-300);
      --connect__icon-fill-color: var(--active-color);
      --connect__inner-status-color: var(--connect__color-neutral-300);
    }

    &.connect__button-text {
      --variant__btn-bg: var(--connect__transparent);
      --active-color: var(--connect__color-neutral-300);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  &-white {
    --connect__icon-fill-color: var(--active-color);
    --connect__inner-status-color: var(--connect__surface-white);

    &.connect__button-outlined {
      --connect__inner-status-color: var(--connect__surface-dark);
    }

    &.connect__button-text {
      --active-color: var(--connect__surface-dark);
      --connect__icon-fill-color: var(--active-color);
    }
  }

  // Size variants
  &-small {
    --connect__btn-padding-y: var(--connect__spacer-xs);
    --connect__btn-padding-x: var(--connect__spacer-sm);
  }

  // Elevation variants
  &-no-elevation {
    box-shadow: var(--connect__shadow-null);

    &:hover,
    &:active {
      --connect__effects-shadow: var(--connect__shadow-null);
    }
  }

  &-rounded {
    --variant__btn-border-radius: var(--connect__radius-xxl);
  }

  // Loading state
  &-loading > svg {
    animation: connect-loading 0.85s var(--connect__linear) infinite;
  }

  // Feedback states
  &.connect__feedback-correct,
  &.connect__feedback-incorrect {
    &:hover,
    &:active {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
    }
  }

  &-menu {
    --variant__btn-padding-x: var(--connect__spacer-sm);
  }

  &-menu:not(.connect__button-plain) {
    --variant__btn-bg: var(--connect__surface-null);
    --connect__inner-status-color: var(--connect__surface-null);
    box-shadow: var(--connect__shadow-null);

    &:not(:disabled) {
      &:hover {
        --variant__btn-bg: var(--connect__surface-white);
        --connect__inner-status-color: var(--connect__surface-white);
        box-shadow: var(--connect__shadow-lvl-2);
      }

      &:active {
        box-shadow: var(--connect__shadow-null);
      }
    }

    &:disabled {
      --icon__fill-opacity: var(--connect__state-opacity);
      --variant__icon-fill-color: var(--connect__disabled-mid);
      --connect__state-based-pointer: var(--connect__disabled-cursor);
    }
  }

  // &-media {
  //   box-shadow: var(--connect__shadow-null);

  //   &.connect__media-active:not(:disabled) {
  //     --state-based-bg: var(--connect__error-mid);
  //   }
  // }
}

/*
button-group
*/

.connect__button-group {
  &.connect__button-group-horizontal {
    --connect__stack-direction: var(--connect__flow-row);

    button:first-of-type {
      border-radius: var(--connect__border-radius) 0 0 var(--connect__border-radius);
    }
    button:last-of-type {
      border-radius: 0 var(--connect__border-radius) var(--connect__border-radius) 0;
    }
  }
  &.connect__button-group-vertical {
    --connect__stack-direction: var(--connect__flow-column);

    button:first-of-type {
      border-radius: var(--connect__border-radius) var(--connect__border-radius) 0 0;
    }
    button:last-of-type {
      border-radius: 0 0 var(--connect__border-radius) var(--connect__border-radius);
    }
  }

  &.connect__button-contained {
    &.connect__disabled {
      --active-color: var(--connect__passive-500);
      --variant__icon-fill: var(--active-color);
      --variant__btn-bg: var(--connect__passive-100);
    }
  }

  &.connect__button-outlined {
    &.connect__disabled {
      --active-color: var(--connect__passive-500);
      --variant__icon-fill: var(--active-color);
      --variant__btn-bg: var(--connect__surface-white);
      --connect__inner-status-color: var(--connect__passive-200);
    }
  }

  button {
    background-color: var(--connect__transparent);
    border-radius: unset;
    box-shadow: unset;

    &:only-of-type {
      border-radius: var(--connect__border-radius);
    }

    &:not(:disabled):hover {
      box-shadow: var(--connect__shadow-null), var(--connect__shadow-lvl-4);
    }
  }
}

/*
| Property            | Variant/State                  | Fallback / Default                                         |
|---------------------|--------------------------------|------------------------------------------------------------|
| Font size           | --variant__input-fs            | --connect__body-sm                                         |
| Line height         | --variant__input-lh            | --connect__body-sm-lheight                                 |
| Background color    | --state__btn-bg                | --connect__surface-white                                   |
| Border color        | --variant__input-border-c      | --connect__surface-null                                    |
| Padding X           | --variant__input-padding-x     | var(--connect__spacer-md) - var(--connect__input-border-w) |
| Padding Y           | --variant__input-padding-y     | var(--connect__spacer-sm) - var(--connect__input-border-w) |
| Border radius       | --variant__input-border-radius | --connect__radius-sm                                   |
| Width               | --variant__input-w             | fit-content                                                 |
*/

.connect__input {
  --connect__input-padding-y: var(--variant__input-padding-y, var(--connect__spacer-sm));
  --connect__input-padding-x: var(--variant__input-padding-x, var(--connect__spacer-md));

  background-color: var(--state-based-bg, var(--connect__surface-white));
  border: 0;
  border-radius: var(--connect__radius-sm);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
  caret-color: var(--connect__primary-mid);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, text);
  font-family: var(--connect__font-sans);
  font-size: var(--variant__input-fs, var(--connect__body-sm));
  line-height: var(--variant__input-lh, var(--connect__body-sm-lheight));
  padding: var(--connect__input-padding-y) var(--connect__input-padding-x);
  position: var(--connect__relative);
  resize: var(--resize, none);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__input-width, var(--connect__full-w));

  &:not(:disabled):not(.connect__selected) {
    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--4);
    }
  }

  &:focus-visible:not(.connect__selected) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  &::placeholder {
    color: var(--connect__surface-mid);
    font-style: var(--connect__style-italic);
  }

  &-resize {
    --resize: vertical;

    &:disabled {
      resize: none;
    }
  }

  &.connect__selected {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);

    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);
    }
  }

  &:has(+ .connect__clear-button) {
    padding-right: calc(var(--connect__spacer-md) * 3);
  }
}

/* 
.connect__clear-button
*/

.connect__clear-button {
  --connect__icon-fill-color: var(--connect__white);

  align-items: center;
  background-color: var(--connect__clear-button-bg, var(--connect__transparent));
  border: var(--connect__spacer-zero) solid var(--connect__surface-null);
  border-radius: var(--connect__half-radius);
  cursor: pointer;
  display: var(--connect__display-flex, flex);
  height: var(--connect__clear-button-size, --connect__unset);
  justify-content: center;
  margin-right: var(--connect__spacer-sm);
  margin-top: var(--connect__spacer-sm);
  opacity: var(--connect__clear-button-opacity, var(--connect__opacity-zero));
  position: var(--connect__absolute);
  right: 0;
  transition: opacity var(--connect__transition-rapid) var(--connect__ease-out);
  width: var(--connect__clear-button-size, --connect__unset);

  &.connect__clear-button-visible {
    --connect__clear-button-bg: var(--connect__gray-c35);
    --connect__clear-button-size: calc(var(--connect__spacer-lg) * 1.25);
    --connect__clear-button-opacity: var(--connect__opacity-one);
    transition: opacity var(--connect__transition-rapid) var(--connect__ease-out);
  }
}

/* 
.connect__select Component

/*
| Property             Variant/State                    | Fallback / Default                                         |
|---------------------|---------------------------------|------------------------------------------------------------|
| Font size           | --variant__select-fs            | --connect__body-sm                                         |
| Line height         | --variant__select-lh            | --connect__body-sm-lheight                                 |
| Background color    | --state__btn-bg                 | --connect__surface-white                                   |
| Border color        | --variant__select-border-c      | --connect__surface-null                                    |
| Padding X           | --variant__select-padding-x     | var(--connect__spacer-md) - var(--connect__select-border-w)|
| Padding Y           | --variant__select-padding-y     | var(--connect__spacer-sm) - var(--connect__select-border-w)|
| Border radius       | --variant__select-border-radius | --connect__radius-sm                                   |
| Width               | --variant__select-w             | fit-content                                                 |
| Resize              | Resize                          | none                                                       |
*/

.connect__select {
  appearance: none;
  background-color: var(--variant__select-bg, var(--state-based-bg, var(--connect__surface-white)));
  background-image: var(--state__connect-dropdown-icon, var(--connect__dropdown-icon-closed));
  background-position: calc(var(--connect__full-w) - var(--connect__spacer-sm));
  background-repeat: no-repeat;
  background-size: var(--connect__icon-md);
  border: var(--connect__spacer-zero) solid var(--connect__surface-null);
  border-radius: var(--connect__radius-sm);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  font-size: var(--connect__body-sm);
  font-weight: var(--connect__fw-regular);
  line-height: var(--connect__body-sm-lheight);
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  padding-right: calc(var(--connect__spacer-sm) + var(--connect__icon-md));
  position: var(--connect__relative);
  width: var(--connect__full-w);

  &:not(:disabled) {
    &:hover,
    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--4);
    }
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  &:active:not(:disabled) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);
  }

  &::-ms-expand {
    display: var(--connect__display-none);
  }
}

/* 
.connect__accordion Component

Variables related to theme/overrides:
  --connect__effects-inner-edge: Inner edge effect size grade banded value used to margin top.
  --connect__details-padding-t/r/b/l: Padding for the details section.
  --connect__details-closed-radius: Border radius when details are closed.
  --connect__details-open-radius: Border radius when details are open.
  --connect__icon-rotate: Rotation for the accordion icon.
  --connect__summary-bg: Background color of the summary.
  --connect__summary-icon-active-ring: Active ring color for the summary icon.
  --connect__summary-padding-y/x: Padding for the summary.
  --connect__align-items: Alignment of summary items.
  --connect__justify-content: Justification of summary items.
*/

.connect__accordion {
  display: var(--connect__display-flex);
  flex-flow: var(--connect__flow-column) var(--connect__flex-wrap);
  gap: var(--connect__effects-inner-edge);
}

.connect__details {
  // border radius for details based on open closed
  --connect__details-closed-radius: var(--connect__radius-sm);
  --connect__details-open-radius: var(--connect__radius-sm) var(--connect__radius-sm) 0 0;

  // Icon for accordion. Changes when open. in the [open]
  --connect__icon-rotate: rotate(0deg);

  padding: var(--variant__details-padding-t, 0) var(--variant__details-padding-r, 0)
    var(--variant__details-padding-b, 0) var(--variant__details-padding-l, 0);
  position: var(--connect__relative);

  > *:not(summary) {
    padding: var(--connect__spacer-sm) var(--connect__spacer-sm) var(--connect__spacer-zero)
      var(--connect__spacer-sm);
  }

  &[open] {
    --connect__icon-rotate: rotate(180deg);
    --variant__details-padding-b: var(--connect__spacer-sm);
  }
}

.connect__summary {
  align-items: var(--variant__align-items, center);
  border-radius: var(--connect__details-open-radius, var(--connect__details-closed-radius));
  cursor: var(--connect__state-based-pointer, pointer);
  display: var(--connect__display-flex);
  justify-content: var(--variant__justify-content, space-between);

  padding: var(--variant__summary-padding-y, var(--connect__spacer-sm))
    var(--variant__summary-padding-x, var(--connect__spacer-sm));

  &::after {
    background-image: var(--connect__dropdown-icon-closed);
    background-position: center center;
    background-repeat: no-repeat;
    background-size: var(--connect__icon-sm) var(--connect__icon-sm);
    border: var(--connect__effects-inner-edge) solid
      var(--variant__summary-icon-active-ring, var(--connect__primary-mid));
    border-radius: var(--connect__half-radius);
    content: '';
    flex-shrink: 0;
    height: var(--connect__icon-md);
    margin-left: var(--connect__spacer-md);
    transform: var(--connect__icon-rotate);
    width: var(--connect__icon-md);
  }

  &::before {
    background: var(--connect__surface-white);
    border-radius: var(--connect__radius-sm);
    box-shadow: var(--connect__shadow-lvl-2);
    content: '';
    height: var(--connect__full-h);
    left: 0;
    position: var(--connect__absolute);
    top: 0;
    transition-duration: var(--connect__transition-medium);
    transition-property: visibility, opacity, transform, max-height;
    transition-timing-function: var(--connect__ease-out);
    width: var(--connect__full-w);
    z-index: -1;
  }

  &:hover,
  &:active {
    &::before {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-4);
    }
  }

  &:active:not(:disabled) {
    --connect__inner-status-color-state: var(--connect__primary-mid);
  }

  &:focus-visible:not(:active) {
    &::before {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
    }
  }
}

.connect__accordion--divider {
  summary {
    & + * {
      --active-color: var(--connect__primary-mid);
      position: var(--connect__relative);

      &::before {
        background: var(--active-color);
        content: '';
        height: var(--connect__effects-inner-edge);
        left: var(--connect__spacer-md);
        position: var(--connect__absolute);
        top: 0;
        width: calc(var(--connect__full-w) - var(--connect__spacer-xl));
      }
    }
  }
}

/* 
.connect__grid Component

| Property         | Default Value        | Description                              |
|------------------|----------------------|------------------------------------------|
| Gap              | --connect__spacer-xl | Space between grid items                 |
| Columns          | 12                   | Number of grid columns                   |
| Align Content    | start                | Vertical alignment of grid content       |
| Align Items      | start                | Vertical alignment of grid items         |
| Justify Content  | start                | Horizontal alignment of grid content     |
| Justify Items    | start                | Horizontal alignment of grid items       |
| Width            | --connect__full-w    | Grid container width                     |
| Gutter Padding Y | calc(spacer-xl * 2)  | Vertical padding when gutter enabled     |
| Gutter Padding X | --gutter-width       | Horizontal padding when gutter enabled   |

Breakpoint Values:

| Property    | -xs          | -sm          | -md          | -lg          | -xl           |
|-------------|--------------|--------------|--------------|--------------|---------------|
| Start Column| -xs-start-col| -sm-start-col| -md-start-col| -lg-start-col| -xl-start-col |
| Span Column | -xs-span-col | -sm-span-col | -md-span-col | -lg-span-col | -xl-span-col  |
| Row Start   | -xs-row-start| -sm-row-start| -md-row-start| -lg-row-start| -xl-row-start |
| Row Span    | -xs-row-span | -sm-row-span | -md-row-span | -lg-row-span | -xl-row-span  |

*/

.connect__grid {
  // Initial variable declarations
  --connect__grid-padding-x: initial;
  --connect__grid-padding-y: initial;
  --connect__grid-padding-top: initial;
  --connect__grid-padding-bottom: initial;
  --connect__grid-padding-left: initial;
  --connect__grid-padding-right: initial;
  --connect__grid-align-content: initial;
  --connect__grid-align-items: initial;
  --connect__grid-justify-content: initial;
  --connect__grid-gap: initial;
  --connect__grid-column-gap: initial;
  --connect__grid-row-gap: initial;
  --connect__grid-template-columns: initial;
  --connect__grid-template-rows: initial;

  // Base styles
  align-content: var(--connect__grid-align-content);
  align-items: var(--connect__grid-align-items);
  display: var(--connect__display-grid);
  gap: var(--connect__grid-row-gap, var(--connect__grid-gap, var(--connect__spacer-xl)))
    var(--connect__grid-column-gap, var(--connect__grid-gap, var(--connect__spacer-xl)));
  grid-auto-rows: auto;
  grid-template-columns: var(--connect__grid-template-columns, repeat(12, 1fr));
  grid-template-rows: var(--connect__grid-template-rows, max-content);
  justify-content: var(--connect__grid-justify-content);
  padding: var(--connect__grid-padding-top, var(--connect__grid-padding-y, 0))
    var(--connect__grid-padding-right, var(--connect__grid-padding-x, 0))
    var(--connect__grid-padding-bottom, var(--connect__grid-padding-y, 0))
    var(--connect__grid-padding-left, var(--connect__grid-padding-x, 0));
  position: var(--connect__relative);
  width: var(--connect__full-w);

  // Extra small breakpoint
  &.connect__grid-xs {
    align-content: var(--connect__grid-xs-align-content, var(--connect__grid-align-content));
    align-items: var(--connect__grid-xs-align-items, var(--connect__grid-align-items));
    gap: var(
        --connect__grid-xs-row-gap,
        var(--connect__grid-xs-gap, var(--connect__grid-row-gap, var(--connect__grid-gap)))
      )
      var(
        --connect__grid-xs-column-gap,
        var(--connect__grid-xs-gap, var(--connect__grid-column-gap, var(--connect__grid-gap)))
      );
    justify-content: var(--connect__grid-xs-justify-content, var(--connect__grid-justify-content));
    padding: var(
        --connect__grid-xs-padding-top,
        var(
          --connect__grid-xs-padding-y,
          var(--connect__grid-padding-top, var(--connect__grid-padding-y, 0))
        )
      )
      var(
        --connect__grid-xs-padding-right,
        var(
          --connect__grid-xs-padding-x,
          var(--connect__grid-padding-right, var(--connect__grid-padding-x, 0))
        )
      )
      var(
        --connect__grid-xs-padding-bottom,
        var(
          --connect__grid-xs-padding-y,
          var(--connect__grid-padding-bottom, var(--connect__grid-padding-y, 0))
        )
      )
      var(
        --connect__grid-xs-padding-left,
        var(
          --connect__grid-xs-padding-x,
          var(--connect__grid-padding-left, var(--connect__grid-padding-x, 0))
        )
      );
  }

  // Small breakpoint
  @media (min-width: 30rem) {
    &.connect__grid-sm {
      align-content: var(--connect__grid-sm-align-content, var(--connect__grid-align-content));
      align-items: var(--connect__grid-sm-align-items, var(--connect__grid-align-items));
      gap: var(
          --connect__grid-sm-row-gap,
          var(--connect__grid-sm-gap, var(--connect__grid-row-gap, var(--connect__grid-gap)))
        )
        var(
          --connect__grid-sm-column-gap,
          var(--connect__grid-sm-gap, var(--connect__grid-column-gap, var(--connect__grid-gap)))
        );
      justify-content: var(
        --connect__grid-sm-justify-content,
        var(--connect__grid-justify-content)
      );
      padding: var(
          --connect__grid-sm-padding-top,
          var(
            --connect__grid-sm-padding-y,
            var(--connect__grid-padding-top, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-sm-padding-right,
          var(
            --connect__grid-sm-padding-x,
            var(--connect__grid-padding-right, var(--connect__grid-padding-x, 0))
          )
        )
        var(
          --connect__grid-sm-padding-bottom,
          var(
            --connect__grid-sm-padding-y,
            var(--connect__grid-padding-bottom, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-sm-padding-left,
          var(
            --connect__grid-sm-padding-x,
            var(--connect__grid-padding-left, var(--connect__grid-padding-x, 0))
          )
        );
    }
  }

  // Medium breakpoint
  @media (min-width: 40.625rem) {
    &.connect__grid-md {
      align-content: var(--connect__grid-md-align-content, var(--connect__grid-align-content));
      align-items: var(--connect__grid-md-align-items, var(--connect__grid-align-items));
      gap: var(
          --connect__grid-md-row-gap,
          var(--connect__grid-md-gap, var(--connect__grid-row-gap, var(--connect__grid-gap)))
        )
        var(
          --connect__grid-md-column-gap,
          var(--connect__grid-md-gap, var(--connect__grid-column-gap, var(--connect__grid-gap)))
        );
      justify-content: var(
        --connect__grid-md-justify-content,
        var(--connect__grid-justify-content)
      );
      padding: var(
          --connect__grid-md-padding-top,
          var(
            --connect__grid-md-padding-y,
            var(--connect__grid-padding-top, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-md-padding-right,
          var(
            --connect__grid-md-padding-x,
            var(--connect__grid-padding-right, var(--connect__grid-padding-x, 0))
          )
        )
        var(
          --connect__grid-md-padding-bottom,
          var(
            --connect__grid-md-padding-y,
            var(--connect__grid-padding-bottom, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-md-padding-left,
          var(
            --connect__grid-md-padding-x,
            var(--connect__grid-padding-left, var(--connect__grid-padding-x, 0))
          )
        );
    }
  }

  // Large breakpoint
  @media (min-width: 55rem) {
    &.connect__grid-lg {
      align-content: var(--connect__grid-lg-align-content, var(--connect__grid-align-content));
      align-items: var(--connect__grid-lg-align-items, var(--connect__grid-align-items));
      gap: var(
          --connect__grid-lg-row-gap,
          var(--connect__grid-lg-gap, var(--connect__grid-row-gap, var(--connect__grid-gap)))
        )
        var(
          --connect__grid-lg-column-gap,
          var(--connect__grid-lg-gap, var(--connect__grid-column-gap, var(--connect__grid-gap)))
        );
      justify-content: var(
        --connect__grid-lg-justify-content,
        var(--connect__grid-justify-content)
      );
      padding: var(
          --connect__grid-lg-padding-top,
          var(
            --connect__grid-lg-padding-y,
            var(--connect__grid-padding-top, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-lg-padding-right,
          var(
            --connect__grid-lg-padding-x,
            var(--connect__grid-padding-right, var(--connect__grid-padding-x, 0))
          )
        )
        var(
          --connect__grid-lg-padding-bottom,
          var(
            --connect__grid-lg-padding-y,
            var(--connect__grid-padding-bottom, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-lg-padding-left,
          var(
            --connect__grid-lg-padding-x,
            var(--connect__grid-padding-left, var(--connect__grid-padding-x, 0))
          )
        );
    }
  }

  // Extra large breakpoint
  @media (min-width: 80rem) {
    &.connect__grid-xl {
      align-content: var(--connect__grid-xl-align-content, var(--connect__grid-align-content));
      align-items: var(--connect__grid-xl-align-items, var(--connect__grid-align-items));
      gap: var(
          --connect__grid-xl-row-gap,
          var(--connect__grid-xl-gap, var(--connect__grid-row-gap, var(--connect__grid-gap)))
        )
        var(
          --connect__grid-xl-column-gap,
          var(--connect__grid-xl-gap, var(--connect__grid-column-gap, var(--connect__grid-gap)))
        );
      justify-content: var(
        --connect__grid-xl-justify-content,
        var(--connect__grid-justify-content)
      );
      padding: var(
          --connect__grid-xl-padding-top,
          var(
            --connect__grid-xl-padding-y,
            var(--connect__grid-padding-top, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-xl-padding-right,
          var(
            --connect__grid-xl-padding-x,
            var(--connect__grid-padding-right, var(--connect__grid-padding-x, 0))
          )
        )
        var(
          --connect__grid-xl-padding-bottom,
          var(
            --connect__grid-xl-padding-y,
            var(--connect__grid-padding-bottom, var(--connect__grid-padding-y, 0))
          )
        )
        var(
          --connect__grid-xl-padding-left,
          var(
            --connect__grid-xl-padding-x,
            var(--connect__grid-padding-left, var(--connect__grid-padding-x, 0))
          )
        );
    }
  }

  // Gutter modifier
  &.connect__grid-gutter {
    padding: calc(var(--connect__spacer-xl) * 2) var(--gutter-width);
  }

  // Subgrid modifier
  &.connect__subgrid {
    display: var(--connect__display-grid);
    grid-column: 1 / -1;
    grid-template-columns: subgrid;
  }
}

/*
.connect__grid-item Component

| Property    | -xs          | -sm          | -md          | -lg          | -xl           |
|-------------|--------------|--------------|--------------|--------------|---------------|
| Start Column| -xs-start-col| -sm-start-col| -md-start-col| -lg-start-col| -xl-start-col |
| Span Column | -xs-span-col | -sm-span-col | -md-span-col | -lg-span-col | -xl-span-col  |
| Row Span    | -xs-row-span | -sm-row-span | -md-row-span | -lg-row-span | -xl-row-span  |

*/

.connect__grid-item {
  grid-column: var(--connect__grid-item-xs-start-col, 1) / span
    var(--connect__grid-item-xs-span-col, 12);
  grid-row: span var(--connect__grid-item-row-span, 1);

  &.connect__grid-item-xs {
    grid-column: var(--connect__grid-item-xs-start-col) / span var(--connect__grid-item-xs-span-col);
    grid-row: span var(--connect__grid-item-xs-row-span, var(--connect__grid-item-row-span));
  }

  @media (min-width: 30rem) {
    &.connect__grid-item-sm {
      grid-column: var(--connect__grid-item-sm-start-col) / span
        var(--connect__grid-item-sm-span-col);
      grid-row: span var(--connect__grid-item-sm-row-span, var(--connect__grid-item-row-span));
    }
  }

  @media (min-width: 40.625rem) {
    &.connect__grid-item-md {
      grid-column: var(--connect__grid-item-md-start-col) / span
        var(--connect__grid-item-md-span-col);
      grid-row: span var(--connect__grid-item-md-row-span, var(--connect__grid-item-row-span));
    }
  }

  @media (min-width: 55rem) {
    &.connect__grid-item-lg {
      grid-column: var(--connect__grid-item-lg-start-col) / span
        var(--connect__grid-item-lg-span-col);
      grid-row: span var(--connect__grid-item-lg-row-span, var(--connect__grid-item-row-span));
    }
  }

  @media (min-width: 80rem) {
    &.connect__grid-item-xl {
      grid-column: var(--connect__grid-item-xl-start-col) / span
        var(--connect__grid-item-xl-span-col);
      grid-row: span var(--connect__grid-item-xl-row-span, var(--connect__grid-item-row-span));
    }
  }
}

/*
.connect__stack Component

The connect stack component is built to set a default set of styles. Rather than variants and themes
these styles are then open to breakpoint changes

| Property        | xl                  | lg                  | md                  | sm                  | xs                  |
|-----------------|---------------------|---------------------|---------------------|---------------------|---------------------|
| align items     | --xl-alignItems     | --lg-alignItems     | --md-alignItems     | --sm-alignItems     | --xs-alignItems     |
| flex flow         | --xl-direction      | --lg-direction      | --md-direction      | --sm-direction      | --xs-direction      |
| flex wrap        | --xl-flexWrap        | --lg-flexWrap        | --md-flexWrap        | --sm-flexWrap        | --xs-flexWrap        |
| justify content | --xl-justifyContent | --lg-justifyContent | --md-justifyContent | --sm-justifyContent | --xs-justifyContent |
| Padding X       | --xl-paddingX       | --lg-paddingX       | --md-paddingX       | --sm-paddingX       | --xs-paddingX       |
| Padding Y       | --xl-paddingY       | --lg-paddingY       | --md-paddingY       | --sm-paddingY       | --xs-paddingY       |
| Spacing         | --xl-spacing        | --lg-spacing        | --md-spacing        | --sm-spacing        | --xs-spacing        |



Style lint has been turned off for this file, as we are using the flex long form property
*/

/* stylelint-disable declaration-block-no-redundant-longhand-properties */

.connect__stack {
  --connect__stack-direction: column;
  --connect__stack-spacing: initial;
  --connect__stack-align-items: stretch;
  --connect__stack-align-self: stretch;
  --connect__stack-justify-content: start;
  --connect__stack-flex-wrap: nowrap;
  --connect__stack-padding-x: 0;
  --connect__stack-padding-y: 0;
  --connect__stack-flex: 0 1 auto;
  align-items: var(--connect__stack-align-items);
  align-self: var(--connect__stack-align-self);
  display: var(--connect__display-flex);
  flex: var(--connect__stack-flex);
  flex-direction: var(--connect__stack-direction);
  flex-wrap: var(--connect__stack-flex-wrap);
  gap: var(--connect__stack-spacing, 0);
  justify-content: var(--connect__stack-justify-content);
  padding: var(--connect__stack-padding-y) var(--connect__stack-padding-x);

  @media (min-width: 30rem) {
    &.connect__stack-sm {
      align-items: var(--connect__stack-sm-align-items, var(--connect__stack-align-items));
      align-self: var(--connect__stack-sm-align-self, var(--connect__stack-align-self));
      flex: var(--connect__stack-sm-flex, var(--connect__stack-flex));
      flex-direction: var(--connect__stack-sm-direction, var(--connect__stack-direction));
      flex-wrap: var(--connect__stack-sm-flex-wrap, var(--connect__stack-flex-wrap));
      gap: var(--connect__stack-sm-spacing, var(--connect__stack-spacing));
      justify-content: var(
        --connect__stack-sm-justify-content,
        var(--connect__stack-justify-content)
      );
      padding: var(--connect__stack-sm-padding-y, var(--connect__stack-padding-y))
        var(--connect__stack-sm-padding-x, var(--connect__stack-padding-x));
    }
  }

  @media (min-width: 40.625rem) {
    &.connect__stack-md {
      align-items: var(--connect__stack-md-align-items, var(--connect__stack-align-items));
      align-self: var(--connect__stack-md-align-self, var(--connect__stack-align-self));
      flex: var(--connect__stack-md-flex, var(--connect__stack-flex));
      flex-direction: var(--connect__stack-md-direction, var(--connect__stack-direction));
      flex-wrap: var(--connect__stack-md-flex-wrap, var(--connect__stack-flex-wrap));
      gap: var(--connect__stack-md-spacing, var(--connect__stack-spacing));
      justify-content: var(
        --connect__stack-md-justify-content,
        var(--connect__stack-justify-content)
      );
      padding: var(--connect__stack-md-padding-y, var(--connect__stack-padding-y))
        var(--connect__stack-md-padding-x, var(--connect__stack-padding-x));
    }
  }

  @media (min-width: 55rem) {
    &.connect__stack-lg {
      align-items: var(--connect__stack-lg-align-items, var(--connect__stack-align-items));
      align-self: var(--connect__stack-lg-align-self, var(--connect__stack-align-self));
      flex: var(--connect__stack-lg-flex, var(--connect__stack-flex));
      flex-direction: var(--connect__stack-lg-direction, var(--connect__stack-direction));
      flex-wrap: var(--connect__stack-lg-flex-wrap, var(--connect__stack-flex-wrap));
      gap: var(--connect__stack-lg-spacing, var(--connect__stack-spacing));
      justify-content: var(
        --connect__stack-lg-justify-content,
        var(--connect__stack-justify-content)
      );
      padding: var(--connect__stack-lg-padding-y, var(--connect__stack-padding-y))
        var(--connect__stack-lg-padding-x, var(--connect__stack-padding-x));
    }
  }

  @media (min-width: 80rem) {
    &.connect__stack-xl {
      align-items: var(--connect__stack-xl-align-items, var(--connect__stack-align-items));
      align-self: var(--connect__stack-xl-align-self, var(--connect__stack-align-self));
      flex: var(--connect__stack-xl-flex, var(--connect__stack-flex));
      flex-direction: var(--connect__stack-xl-direction, var(--connect__stack-direction));
      flex-wrap: var(--connect__stack-xl-flex-wrap, var(--connect__stack-flex-wrap));
      gap: var(--connect__stack-xl-spacing, var(--connect__stack-spacing));
      justify-content: var(
        --connect__stack-xl-justify-content,
        var(--connect__stack-justify-content)
      );
      padding: var(--connect__stack-xl-padding-y, var(--connect__stack-padding-y))
        var(--connect__stack-xl-padding-x, var(--connect__stack-padding-x));
    }
  }
}

.connect__chip {
  &:focus-visible:not(:active) {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
  }
}

/*
.connect__pill Component
THIS WILL BE PROP BASED WHEN DESIGN UPDATES RADIUS

| Property          Variant/State        | Fallback / Default       
|------------------|---------------------|-------------------------------|
| Font size        |                     | --connect__body-sm            |
| Font weight      |                     | --connect__fw-bold            |
| Line height      |                     | --connect__body-sm-lheight    |
| Background color | --variant__pill-bg  | --connect__cc-purple          | 
| Color            |                     | --connect__surface-white      |
| Padding Y        |                     | --connect__spacer-xs          |
| Padding L        |                     | --connect__spacer-md          |
| Padding R        |                     | --connect__spacer-lg          |


| Border Radius TL |                     | --connect__heading-lg-lheight |
| Border Radius TR |                     | --connect__heading-lg-lheight |
| Border Radius BR |                     | --connect__spacer-zero        |
| Border Radius BL |                     | --connect__spacer-zero        |
*/

.connect__pill {
  align-items: center;
  background-color: var(--variant__pill-bg, var(--connect__cc-purple));
  border-radius: var(--connect__spacer-zero) var(--connect__heading-lg-lheight)
    var(--connect__heading-lg-lheight) var(--connect__spacer-zero);
  color: var(--connect__surface-white);
  display: inline-flex;
  font-size: var(--connect__body-sm);
  font-weight: var(--connect__fw-bold);
  justify-content: center;
  line-height: var(--connect__body-sm-lheight);
  padding: var(--connect__spacer-xs) var(--connect__spacer-lg) var(--connect__spacer-xs)
    var(--connect__spacer-md);
}

/*
.connect__icon-wrapper Component

  | Property         | Fallback / Default           | States                      | Variants           | Future changes   |
  |------------------|------------------------------|-----------------------------|--------------------|------------------|
  | background-image | state-icon                   | Correct / Incorrect / Shown |                    |                  |
  | height           | connect__icon-md             |                             | connect__icon-size | Liable to change |
  | translateX       | connect__feedback-translateX |                             |                    | Liable to change |
  | translateY       | connect__feedback-translateX |                             |                    |                  |
  | width            | connect__icon-md             |                             | connect__icon-size |                  |        
*/

// this should be stack. must investigate engineering side
.connect__icon-wrapper {
  display: inline-flex;
  flex-flow: var(--connect__flow-column) var(--connect__flex-wrap);
  position: var(--connect__relative);
  width: var(--connect__full-w);

  &::after {
    background-image: var(--state-icon);
    background-repeat: repeat;
    background-size: contain;
    content: '';
    height: var(--connect__icon-size, var(--connect__icon-md));
    position: var(--connect__absolute);
    right: 0;
    top: 0;
    transform: translate(var(--connect__feedback-translateX), var(--connect__feedback-translateY));
    width: var(--connect__icon-size, var(--connect__icon-md));
  }

  &.connect__input-clear {
    align-items: var(--connect__input-clear-align-items, flex-start);
    flex-direction: var(--connect__input-clear-flex-direction, row);
    justify-content: var(--connect__input-clear-justify-content, flex-end);
  }
}

/*
.connect__icon Component

| Property| Fallback / Default           | Sizes              |
|---------|------------------------------|--------------------|
| Fill    | --connect__icon-fill-color    |
| Stroke  | --connect__icon-stroke-color |
| Color   | --connect__icon-fill-color    |
| Opacity | --connect__icon-opacity      |             
| Sizes   |--connect__icon-size          | xs sm md lg xl xxl |
*/

.connect__icon {
  color: var(--connect__icon-fill);
  height: var(--connect__icon-size);
  opacity: var(--connect__icon-opacity, 1);
  width: var(--connect__icon-size);

  svg {
    fill: var(--connect__icon-fill-color, var(--connect__surface-dark));
    stroke: var(--connect__icon-stroke-color);
  }
}

.connect__icon-xs {
  --connect__icon-size: var(--connect__icon-xs);
}

.connect__icon-sm {
  --connect__icon-size: var(--connect__icon-sm);
}

.connect__icon-md {
  --connect__icon-size: var(--connect__icon-md);
}

.connect__icon-lg {
  --connect__icon-size: var(--connect__icon-lg);
}

.connect__icon-xl {
  --connect__icon-size: var(--connect__icon-xl);
}

.connect__icon-xxl {
  --connect__icon-size: var(--connect__icon-xxl);
}

/*
.connect__choice Component

Padding on MCQ labels is the total border + spacer

| Property            | Variant/State                  | Fallback / Default             |
|---------------------|--------------------------------|--------------------------------|
| Font size           | --variant__label-fs            | --connect__body-sm             |
| Line height         | --variant__label-lh            | --connect__body-sm-lheight     |
| Font weight         | --variant__label-fw            | --connect__fw-regular          |
| Radius              | --variant__label-border-radius | --connect__radius-sm       |
| Background color    | --variant__label-bg            | --connect__surface-white       |
| Color               | --variant__label-color         | --connect__surface-dark        |
| Gap                 | --variant__label-gap           | --connect__spacer-md           |
| Cursor              | --connect__state-based-pointer | pointer                        |


|---------------------|------------------------------|-------------------------------|
|---------------------|-------INPUT VARIABLES--------|-------------------------------|
|---------------------|------------------------------|-------------------------------|
| Property            |Variant/State                 | Fallback / Default            |
|---------------------|------------------------------|-------------------------------|
| Radius              | --variant__mcq-border-radius | --connect__radius-xs       |
| Dimensions          | --variant__input-dimensions  | --connect__caption-lheight    |

*/

.connect__choice-label {
  --connect__label-padding-y: calc(var(--connect__total-border) + var(--connect__spacer-xs));
  --connect__label-padding-x: calc(var(--connect__total-border) + var(--connect__spacer-sm));

  --connect__input-dimensions: var(--connect__caption-lheight);
  --connect__input-border-w: var(--connect__mcq-border-w);

  align-items: center;
  background-color: var(--variant__label-bg, var(--connect__surface-white));
  border-radius: var(--variant__label-border-radius, var(--connect__radius-sm));
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  font-family: var(--connect__font-sans);
  font-size: var(--connect__body-sm);
  font-weight: var(--connect__fw-regular, initial);
  gap: var(--connect__spacer-md);
  justify-content: flex-start;
  line-height: var(--connect__body-sm-lheight);
  padding: var(--connect__label-padding-y) var(--connect__label-padding-x);
  position: var(--connect__relative);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__full-w, fit-content);

  &::before {
    border: var(--connect__input-border-w) solid
      var(--checkbox-checked-state-based-border-c, var(--connect__primary-mid));
    border-radius: var(--variant__mcq-radius, var(--connect__radius-xs));
    content: '';
    flex-shrink: 0;
    height: var(--connect__input-dimensions);
    padding: var(--connect__spacer-xs);
    width: var(--connect__input-dimensions);
  }

  &:hover {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-4);
  }

  &:active {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
  }

  &.connect__label-checked {
    &::before {
      background-color: var(--checkbox-state-based-bg, var(--connect__primary-mid));
      background-image: var(--checked-state-icon, var(--connect__surface-null));
      background-size: contain;
      box-shadow: var(--connect__shadow-reset) var(--connect__input-border-w)
        var(--checkbox-state-based-inner-shadow, var(--connect__surface-white)) inset;
    }

    &.connect__disabled {
      --checkbox-state-based-bg: var(--connect__disabled-light);
    }

    &.connect__feedback-correct {
      --checkbox-state-based-bg: var(--connect__correct-mid);
      --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
      --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
      --checked-state-icon: var(--checked-correct);
    }

    &.connect__feedback-incorrect {
      --checkbox-state-based-bg: var(--checked-incorrect-bg);
      --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
      --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
      --checked-state-icon: var(--checked-incorrect);
    }

    &.connect__input-shown {
      --checkbox-state-based-bg: var(--connect__surface-dark);
      --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
      --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
      --checked-state-icon: var(--checked-correct);
    }
  }

  &.connect__disabled {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
  }
}

.connect__input-no-shadow {
  box-shadow: var(--connect__shadow-null);

  &:hover {
    box-shadow: var(--connect__shadow-null);
  }
}

/*
.connect__mcq-card Component

Padding on MCQ labels is the total border
Positioning int he pseudos is the total border / 2

  &::after
    background-color of area around the input
    border-radius of this click area

|-----------|-----------------------|-------------------------|
|-----------|-------MCQ Card--------|-------------------------|
|-----------|-------|---------------|-------------------------|
| Property  | Theme | Variant/State | Fallback / Default      |
|-----------|-------|---------------|-------------------------|
| Padding-y |       |               | --connect__total-border |
| Padding-x |       |               | --connect__total-border |
| Margin    |       |               | --connect__spacer-xs    |
*/

.connect__mcq-card {
  --connect__label-padding-y: var(--connect__total-border);
  --connect__label-padding-x: var(--connect__total-border);
  --connect__mcq-input-margin: var(--connect__spacer-xs);

  align-items: flex-start;
  display: var(--connect__display-grid);
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;

  &::before {
    grid-column: 1;
    grid-row: 1;
    left: calc(var(--connect__label-padding-x) / 2);
    position: var(--connect__absolute);
    top: calc(var(--connect__label-padding-y) / 2);
    z-index: var(--connect__z-1);
  }

  &::after {
    background-color: var(--connect__surface-white);
    border-radius: var(--connect__radius-xs) var(--connect__spacer-zero);
    content: '';
    height: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
    left: var(--connect__inner-divider-width);
    position: var(--connect__absolute);
    top: var(--connect__inner-divider-width);
    width: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
  }

  .connect__figure {
    grid-column: 1 / -1;
    grid-row: 1 / -1;

    img {
      border-radius: var(--connect__radius-xs);
    }
  }
}

.connect__choice {
  inset: 0;
  opacity: var(--connect__opacity-zero);
  position: var(--connect__absolute);
}

.connect__choice[type='radio'] {
  + label {
    --variant__mcq-radius: var(--connect__half-radius);
  }
}

/*

 .connect__progress Component

 The progress component is made up of three main styling zones

  i: connect__progress (aesthetic container)
  ii: ::-webkit-progress-bar (Bg color of remainder of bar)
  iii: ::-webkit-progress-value (inner bar, radius, color), dynamic part of progress bar

 | Property         | Theme                 | Variant/State           | Fallback / Default      | Props                 |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 | Background color | theme__progress-bg    | variant__progress-bg    | connect__surface-white  | theme__progress-bg    |
 | Border radius    | theme__progress-br    | variant__progress-br    |  1rem                   |                       |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 |-----------------------------------------::-webkit-progress-bar-------------------------------------------------------|
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 | Background color | theme__progress-bg    | variant__progress-bg    | connect__surface-white  | theme__progress-bg    |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 |-----------------------------------------::-webkit-progress-value---|-------------------------|-----------------------|
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 | Background color | theme__progress-color | variant__progress-color | --connect__cc-purple    | theme__progress-color |
 | Border radius    | theme__inner-br       | variant__inner-br       |  2.5rem                 |                       |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|

*/

.connect__progress {
  background: var(--variant__progress-bg, var(--connect__surface-white));
  border: none;
  border-radius: var(--connect__radius-sm);
  box-shadow: var(--connect__shadow-lvl-0);
  overflow: var(--connect__overflow-hidden);
  width: var(--connect__full-w);

  &::-webkit-progress-bar {
    background: var(--variant__progress-bg, var(--connect__surface-white));
  }

  &::-webkit-progress-value {
    background: var(--variant__progress-color, var(--connect__cc-purple));
    border-radius: 2.5rem;
    transition:
      inline-size var(--connect__transition-medium) var(--connect__in-out-quad),
      width var(--connect__transition-medium) var(--connect__in-out-quad);
  }

  &::-moz-progress-bar {
    background: var(--variant__progress-color, var(--connect__cc-purple));
    border-radius: var(--connect__radius-sm);
  }
}

/*
.connect__timer Component

| Property    | Props                   |
|-------------|-------------------------|
| Font size   | --connect__timer-fs     |
| Line height |--connect__timer-lh      |
| Font weight | --connect__fw-bold      |
| Font Style  | normal                  |
| Color       | --connect__surface-dark |
*/

.connect__timer {
  color: var(--connect__surface-dark);
  font-family: var(--connect__font-sans);
  font-size: var(--connect__heading-lg);
  font-style: var(--connect__fw-style);
  font-variant-numeric: tabular-nums;
  font-weight: var(--connect__fw-bold);
  line-height: var(--connect__heading-lg-lheight);
}

/* table Component */
.connect__table-wrapper {
  --connect__table-bg: var(--connect__white);
  --connect__thead-bg: var(--connect__surface-pale);
  --connect__table-border-c: rgb(220, 220, 220);
  --connect__tr-hover-bg: var(--connect__gray-c5);
  --connect__table-border-w: 0.0625rem;
  --connect__table-color: var(--connect__surface-dark);
  --connect__container-type: inline-size;
  --connect__container-name: table-container;

  overflow-x: auto;
  padding: var(--connect__spacer-sm);

  &:has(.connect__table-sticky-header) {
    overflow: unset;
  }

  &:not(:has(.connect__table-scrolling)) {
    container-name: var(--connect__container-name);
    container-type: var(--connect__container-type);
  }
}

.connect__table {
  background-color: var(--connect__table-bg);
  border-collapse: collapse;
  border-radius: var(--connect__radius-sm);
  border-spacing: 0;
  box-shadow: var(--connect__shadow-lvl-0);
  color: var(--connect__table-color);
  overflow: var(--connect__overflow-hidden);
  width: var(--connect__full-w);

  thead {
    border-radius: var(--connect__radius-sm) var(--connect__radius-sm) 0 0;

    th:first-of-type {
      border-top-left-radius: var(--connect__radius-sm);
    }
    th:last-of-type {
      border-top-right-radius: var(--connect__radius-sm);
    }
  }

  &.connect__table-scrolling {
    overflow-x: auto;
  }

  &.connect__table-sticky-header {
    thead {
      position: sticky;
      top: -0.0625rem;
      z-index: 1;
    }
  }

  &.connect__table-no-thead {
    thead {
      display: var(--connect__display-none);
    }

    tr:first-of-type td {
      border-top: unset;
    }
  }

  caption {
    font-size: var(--connect__body-md);
    font-weight: var(--connect__fw-bold);
    margin-bottom: var(--connect__spacer-sm);
    margin-top: var(--connect__spacer-sm);
    text-align: left;
  }

  th,
  td {
    border: var(--connect__table-border-w) solid var(--connect__table-border-c);

    &:first-of-type {
      border-left: unset;
    }
    &:last-of-type {
      border-right: unset;
    }
  }

  th {
    background-color: var(--connect__thead-bg);
    border-top: unset;
    overflow: var(--connect__overflow-hidden);
    padding: var(--connect__spacer-sm);
    text-align: left;
    &:is([scope='row']) {
      background-color: var(--connect__tr-hover-bg);
      border-bottom: var(--connect__table-border-w) solid var(--connect__table-border-c);
      border-right: var(--connect__table-border-w) solid var(--connect__table-border-c);
      &:first-of-type {
        border-top: var(--connect__table-border-w) solid var(--connect__table-border-c);
      }
    }
  }

  td {
    border-bottom: unset;
    padding: var(--connect__spacer-sm);
  }

  tr:hover {
    background-color: var(--connect__tr-hover-bg);
  }
}

@container table-container (max-width: 26rem) {
  .connect__table {
    // display: block;
    tr,
    th,
    td {
      display: block;
      width: var(--connect__full-w);
    }

    tr {
      border-bottom: var(--connect__table-border-w) solid var(--connect__table-border-c);
      padding: var(--connect__spacer-sm) 0;
    }

    tr:nth-of-type(odd) {
      background-color: var(--connect__thead-bg);
    }

    // th:is([scope='row']) {
    //   background-color: unset;
    //   border: unset !important;
    // }

    td,
    th {
      background-color: unset;
      border: unset !important;
      position: var(--connect__relative);
      text-align: left;
    }

    thead tr:first-of-type {
      display: var(--connect__display-none);
    }

    td::before {
      content: attr(data-heading) ': ';
      font-weight: var(--connect__fw-bold);
    }
  }
}

/* 
.connect__aside Component

| Property         |Default                   |
|------------------|--------------------------|
| Background color | --connect__surface-white |
| Padding X        | --connect__spacer-xs     |
| Padding Y        | --connect__spacer-md     |
| Width            | 3.625rem                 |
| Height           |  100vh                   |
*/

.connect__aside {
  align-items: center;
  background-color: var(--connect__surface-white);
  display: var(--connect__display-flex);
  flex-flow: var(--connect__flow-column) var(--connect__flex-wrap);
  height: 100vh;
  justify-content: space-between;
  margin: 0;
  padding: var(--connect__spacer-md) var(--connect__spacer-xs);
  width: 3.625rem;

  &:has(> .connect__list:only-child) {
    justify-content: end;
  }

  .connect__selected {
    &:not(:disabled) {
      --variant__btn-bg: var(--connect__brand-pale-magenta);
      --connect__inner-status-color: var(--connect__brand-pale-magenta);
      --variant__icon-fill-color: var(--connect__brand-deep-magenta);

      &:active {
        --connect__inner-status-color: var(--connect__surface-white);
      }
    }

    &:disabled {
      --variant__btn-bg: var(--connect__disabled-pale);
      --variant__icon-fill-color: var(--connect__disabled-mid);
      --connect__state-based-pointer: var(--connect__disabled-cursor);
    }
  }

  .connect__list {
    align-items: center;
    display: var(--connect__display-flex);
    flex-flow: var(--connect__flow-column) var(--connect__flex-wrap);
    gap: var(--connect__spacer-xs);
    width: var(--connect__full-w);
  }

  .connect__stack {
    --connect__stack-spacing: var(--connect__spacer-xs);
  }

  hr {
    --variant__divider-margin-x: var(--connect__spacer-sm);
  }
}

/*
.connect__divider Component

Divider can be vertical or horizontal
[aria-orientation='vertical']

| Property         | Variant                      | Fallback / Default             |
|------------------|------------------------------|--------------------------------|
| Background color |  --variant__divider-bg       | --connect__surface-pale        |
| Height           |  --variant__divider-h        | --connect__effects-inner-edge  |
| Width            |  --variant__divider-w        | --connect__full-w              |
| Radius           |  --variant__divider-br       | --connect__radius-sm       |         
| Margin x         |  --variant__divider-margin-x | --connect__spacer-zero         |      
| Margin y         |  --variant__divider-margin-y | --connect__spacer-zero         |       
*/

.connect__divider {
  /* Define horizontal margin variables */
  --connect__divider-margin-x: var(--variant__divider-margin-x, var(--connect__spacer-zero));
  --connect__divider-margin-y: var(--variant__divider-margin-y, var(--connect__spacer-zero));

  --connect__divider-bg: var(--variant__divider-bg, var(--connect__surface-pale));
  --connect__divider-br: var(--variant__divider-br, var(--connect__radius-sm));
  --connect__divider-h: var(--variant__divider-h, var(--connect__effects-inner-edge));
  --connect__divider-w: var(--variant__divider-w, var(--connect__full-w));

  background-color: var(--connect__divider-bg);
  border: 0;
  border-radius: var(--connect__divider-br);
  height: var(--connect__divider-h);
  margin: var(--connect__divider-margin-y) var(--connect__divider-margin-x);
  padding-bottom: var(--connect__spacer-xs);
  position: var(--connect__relative);
  width: calc(var(--connect__divider-w) - (var(--connect__divider-margin-x) * 2));

  &[aria-orientation='vertical'] {
    --variant__divider-margin-x: var(--connect__spacer-zero);
    --variant__divider-h: var(--connect__full-h);
    --variant__divider-w: var(--connect__effects-inner-edge);
  }
}

/*
.connect__list Component

| Property    | Variants            | Fallback / Default         |
|-------------|---------------------|----------------------------|
| Font size   |  --variant__list-fs | --connect__body-sm         |
| Line Height |  --variant__list-lh | --connect__body-sm-lheight |
| Marker Type |                     | --variant__list-style-type |  
*/

.connect__list {
  list-style-type: var(--variant__list-style-type, none);
  padding-inline: inherit;
}

.connect__list-item {
  font-size: var(--connect__body-sm);
  line-height: var(--connect__body-sm-lheight);

  &::marker {
    color: var(--variant__marker-color, inherit);
    font-size: var(--connect__body-sm);
    line-height: var(--connect__body-sm-lheight);
  }
}

.connect__list-none {
  --variant__marker-color: var(--connect__surface-null);
}

.connect__list-circle {
  --variant__list-style-type: circle;
}

.connect__list-decimal {
  --variant__list-style-type: decimal;
}

.connect__list-disc {
  --variant__list-style-type: disc;
}

.connect__list-roman {
  --variant__list-style-type: lower-roman;
}

.connect__list-square {
  --variant__list-style-type: square;
}

.connect__list-alpha {
  --variant__list-style-type: lower-alpha;
}

.connect__counters {
  counter-reset: orderedlist;

  &::marker {
    content: counters(list-item, '.') ':';
    font-weight: var(--connect__fw-bold);
  }
}

/*
.connect__paper Component

| Property   | Fallback / Default     |
|------------|------------------------|
| BG         | Prop based             |
| Radius     | Prop based             |
| Outline    | Prop based             |
| Elevation  | Prop based             |
*/

.connect__paper {
  background-color: var(--connect__paper-bg, var(--connect__white));
}

.connect__paper-outlined {
  padding: var(--connect__effects-inner-edge);
}

.connect__figure {
  height: var(--connect__full-h);
  margin-top: var(--connect__spacer-zero);
}

.connect__dialog {
  --connect__dialog-bg: var(--connect__white);
  --connect__horizontal-margin: auto;
  --connect__vertical-margin: auto;

  background-color: var(--connect__dialog-bg);
  border: 0;
  padding: 0;
}

/* 
These styles apply to elements with classes that include '-correct'.

| Property Type         | Variable                                | Description                                              |
|-----------------------|-----------------------------------------|----------------------------------------------------------|
| Text color            | --active-color                          | Change to --connect__disabled-mid                        |
| Icon Fills            | --connect__icon-fill-color               | Change to --connect__disabled-light                      |
| Bg Colors             | --checkbox-state-based-bg               | Change to --connect__surface-white                       |
| Checkbox border color | --checkbox-checked-state-based-border-c | The border around the checkbox, it's blue before a state |
| Shadow                | --checkbox-state-based-inner-shadow     | Change to --state-based-bg                               |
| Cursors               | --connect__state-based-pointer          | Change to --connect__disabled-cursor                     |
| Dropdown Icon         | --state__connect-dropdown-icon          | Change to --state__variant-connect-dropdown-icon         |
*/

.connect__disabled {
  --active-color: var(--connect__disabled-mid);
  --connect__icon-fill-color: var(--connect__disabled-light);
  --checkbox-state-based-bg: var(--connect__surface-white);
  --checkbox-checked-state-based-border-c: var(--connect__disabled-light);
  --checkbox-state-based-inner-shadow: var(--state-based-bg);
  --connect__state-based-pointer: var(--connect__disabled-cursor);
  --state__connect-dropdown-icon: var(--state__variant-connect-dropdown-icon);
  --state-based-bg: var(--connect__disabled-pale);
}

/* 
These styles apply to elements with classes that include '-correct'.

| Property      | Variable                      | Description                       |
|---------------|-------------------------------|-----------------------------------|
| Inner Status  | --connect__inner-status-color | Change to --connect__correct-mid  |
| BG Color      | --state-based-bg              | Change bg to --color-correct-pale |
| Icon Input    | --state-icon                  | Change to correct icon            |
*/

.connect__feedback-correct {
  --connect__inner-status-color: var(--connect__correct-mid);
  --state-based-bg: var(--connect__correct-pale);
  --state-icon: var(--icon-correct);
}

/* 
These styles apply to elements with classes that include '-incorrect'.

| Property     | Variable                      | Description                        |
|--------------|-------------------------------|------------------------------------|
| Inner Status | --connect__inner-status-color | Change to --connect__incorrect-mid |
| BG Color     | --state-based-bg              | Change bg to --color-incorrect-bg  |
| Icon Input   | --state-icon                  | Change to incorrect icon           |
*/

.connect__feedback-incorrect {
  --connect__inner-status-color: var(--connect__incorrect-mid);
  --state-based-bg: var(--color-incorrect-bg);
  --state-icon: var(--icon-incorrect);
}

/* 
These styles apply to elements with classes that include '-shown'.

| Property     | Variable                      | Description                       |
|--------------|-------------------------------|-----------------------------------|
| Inner Status | --connect__inner-status-color | Change to --connect__surface-mid  |
| BG Color     | --state-based-bg              | Change bg to white                |
| Icon Input   | --state-icon                  | Change to shown icon              |
*/

.connect__feedback-shown {
  --connect__inner-status-color: var(--connect__surface-mid);
  --state-based-bg: var(--connect__surface-white);
  --state-icon: var(--icon-shown);
}

/* 
These styles apply to elements with classes that include '-correct', '-incorrect', or '-shown'.
Cover Text / Cursors / Iconography

| Property Type | Variable                        | Description                    |
|---------------|---------------------------------|--------------------------------|
| Color         | --active-color                  | Change to disabled text mid    |
| Cursor        | --connect__state-based-pointer  | Change to disabled cursor      |
| Iconography   | --state__connect-dropdown-icon  | Change to state dropdown icon  |
*/

.connect__feedback-correct,
.connect__feedback-incorrect,
.connect__feedback-shown {
  --active-color: var(--connect__disabled-mid);
  --connect__state-based-pointer: var(--connect__disabled-cursor);
  --state__connect-dropdown-icon: var(--state__variant-connect-dropdown-icon);
}

.connect__alert {
  .connect__button-menu {
    --connect__btn-padding-y: var(--connect__spacer-xs);
    --connect__btn-padding-x: var(--connect__spacer-xs);

    &:hover {
      box-shadow: var(--connect__shadow-null);
    }
  }
}

.connect__hint {
  --connect__hint-spacing: calc(-1 * var(--connect__spacer-sm));
  --connect__hint-y-offset: calc(var(--connect__hint-spacing) - var(--connect__hint-size));
  --connect__hint-x-offset: var(--connect__spacer-sm);
  --connect__hint-max-w: calc(var(--connect__dropdown-max-w) - var(--connect__hint-x-offset));

  background-color: var(--connect__surface-white);
  border-radius: var(--connect__radius-xs);
  display: var(--variant__hint-display, var(--connect__display-block));
  left: 0;
  max-width: var(--connect__hint-max-w);
  padding: 0 var(--connect__effects-inner-edge);
  position: var(--connect__absolute);
  top: 0;
  transform: translateY(var(--connect__hint-y-offset)) translateX(var(--connect__hint-x-offset));
  z-index: 2;
}

/*
dropdown
*/

.connect__dropdown-wrapper {
  position: var(--connect__relative);

  &:has(.connect__dropdown) {
    display: var(--connect__display-flex);
  }

  .connect__clear-button {
    margin-top: var(--connect__spacer-xs);
    right: calc(var(--connect__spacer-md) * -3);
  }
}

.connect__dropdown {
  appearance: none;
  background-color: var(
    --variant__dropdown-bg,
    var(--state-based-bg, var(--connect__surface-white))
  );
  background-image: var(
    --state__connect-dropdown-icon,
    var(--variant__dropdown-icon, var(--connect__dropdown-icon-closed))
  );
  background-position: calc(var(--connect__full-w) - var(--connect__spacer-sm));
  background-repeat: no-repeat;
  background-size: var(--connect__icon-md);
  border: var(--connect__spacer-zero) solid var(--connect__surface-null);
  border-radius: var(--connect__radius-sm);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--1);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: var(--connect__display-flex);
  font-size: var(--connect__body-sm);
  font-weight: var(--connect__fw-regular);
  line-height: var(--connect__body-sm-lheight);
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  padding-right: calc(var(--connect__spacer-sm) + var(--connect__icon-md));
  position: var(--connect__relative);
  text-overflow: var(--connect__text-ellipsis);
  width: var(--connect__full-w);

  &:where(:not(.connect__disabled)) {
    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
    }

    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);
    }
  }

  &:where(:focus-visible:not(:active)) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  &.connect__fixed-dimensions {
    max-width: var(--connect__dropdown-max-w);
    min-width: var(--connect__dropdown-min-w);
  }

  .connect__feedback-stamp {
    background-image: var(--state-icon);
    background-repeat: repeat;
    background-size: contain;
    display: var(--variant__feedback-display, var(--connect__display-none));
    height: var(--connect__icon-size, var(--connect__icon-md));
    position: var(--connect__absolute);
    right: 0;
    top: 0;
    transform: translate(var(--connect__feedback-translateX), var(--connect__feedback-translateY));
    width: var(--connect__icon-size, var(--connect__icon-md));
  }

  &:where([class*='connect__feedback']) {
    --variant__feedback-display: var(--connect__display-block);
    --variant__hint-display: var(--connect__display-none);
  }

  &.connect__disabled {
    --variant__hint-display: var(--connect__display-none);
  }
}

.connect__dropdown-open {
  --variant-menu-display: var(--connect__display-block);
  --variant__dropdown-icon: var(--connect__dropdown-icon-open);
}

.connect__selected-text {
  color: var(--active-color, var(--connect__surface-dark));
  display: var(--connect__display-block);
  font-family: var(--connect__font-sans);
  font-size: var(--connect__body-sm);
  line-height: var(--connect__body-sm-lheight);
  max-width: var(--connect__dropdown-max-w);
  min-width: var(--connect__dropdown-min-w);
  overflow: var(--connect__overflow-hidden);
  padding: 0 var(--connect__spacer-xs);
  text-overflow: var(--connect__text-ellipsis);
  white-space: var(--connect__white-space-nowrap);
  z-index: 2;
}

.connect__dropdown-menu {
  border-radius: var(--connect__radius-sm);
  box-shadow: var(--connect__shadow-lvl-4);
  display: var(--variant-menu-display, var(--connect__display-none));
  left: var(--connect__spacer-zero);
  max-width: var(--connect__dropdown-max-w);
  min-width: var(--connect__full-w);
  overflow: var(--connect__overflow-hidden);
  position: var(--connect__absolute);
  top: calc(100% + var(--connect__spacer-xs));
  width: var(--connect__full-w);
}

.connect__dropdown-list-menu {
  display: var(--connect__display-flex);
  flex-flow: var(--connect__flow-row) var(--connect__flex-wrap);
  font-family: var(--connect__font-sans);
  gap: var(--connect__spacer-xs);
  max-height: var(--connect__dropdown-max-h);
  overflow: var(--connect__overflow-auto);
  padding: var(--connect__spacer-xs);
  width: var(--connect__full-w);
}

.connect__dropdown-item {
  background-color: var(--connect__surface-white);
  border-radius: var(--connect__radius-xs);
  box-shadow: var(--connect__shadow-null);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  flex: 1 0 100%;
  font-family: var(--connect__font-sans);
  font-size: var(--connect__body-sm);
  line-height: var(--connect__body-sm-lheight);
  overflow: var(--connect__overflow-hidden);
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  text-overflow: var(--connect__text-ellipsis);
  white-space: var(--connect__white-space-nowrap);

  &:where(:not(.connect__disabled)) {
    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-0);
    }

    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-2);
    }

    &:focus-visible {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
    }
  }

  &.connect__selected {
    --connect__inner-status-color: var(--connect__primary-mid);
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);

    &:focus-visible {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
    }
  }
}

/* connect__toolbar */

.connect__toolbar {
  background-color: var(--connect__surface-pale);
  border-radius: var(--connect__radius-sm) var(--connect__radius-sm) 0 0;
  box-shadow: var(--connect__shadow-lvl-0);

  + .connect__input-textarea {
    border-radius: 0 0 var(--connect__radius-sm) var(--connect__radius-sm);
  }
}

/* Connect Avatars */

.connect__avatar {
  align-items: center;
  border-radius: var(--connect__avatar-radius);
  box-shadow: var(--connect__shadow-lvl-1);
  display: var(--connect__display-flex);
  height: var(--connect__icon-size);
  justify-content: center;
  overflow: var(--connect__overflow-hidden);
  width: var(--connect__icon-size);
}

.connect__avatar-text {
  background-color: var(--connect__avatar-bg);
  padding: 0 var(--connect__spacer-xs);
}

.connect__avatar-circle {
  --connect__avatar-radius: var(--connect__half-radius);
}

.connect__avatar-square {
  --connect__avatar-radius: var(--connect__rounded-reset);
}

.connect__avatar-rounded {
  --connect__avatar-radius: var(--connect__radius-sm);
}

.connect__avatar-img {
  height: var(--connect__icon-size);
  object-fit: cover;
  width: var(--connect__icon-size);
}

/* 
  Negative spacing for avatar groups
  This will remove the margin all direct children except the first child 

  :where keeps the specificity of the selector low
  the rule expects a --connect__spacer-size

  --connect__spacer-size is then set to the spacer value for that class

  e.g 
  connect__stack-negative-xs will have a --connect__spacer-size of var(--connect__spacer-xs)
*/

.connect__stack-negative-sm > *:not(:first-child),
.connect__stack-negative-md > *:not(:first-child),
.connect__stack-negative-lg > *:not(:first-child),
.connect__stack-negative-xl > *:not(:first-child) {
  margin-right: calc(-1 * var(--connect__spacer-size));
}

.connect__stack-negative-xs {
  --connect__spacer-size: var(--connect__spacer-xs);
}

.connect__stack-negative-sm {
  --connect__spacer-size: var(--connect__spacer-sm);
}

.connect__stack-negative-md {
  --connect__spacer-size: var(--connect__spacer-md);
}

.connect__stack-negative-lg {
  --connect__spacer-size: var(--connect__spacer-lg);
}

.connect__stack-negative-xl {
  --connect__spacer-size: var(--connect__spacer-xl);
}

.connect__badge-container {
  display: var(--connect__display-flex);
  position: var(--connect__relative);
}

/* 
  Badge component
*/

.connect__badge {
  align-items: center;
  background-color: var(--connect__badge-bg);
  border-radius: var(--connect__radius-xs);
  display: var(--variant-badge-display, var(--connect__display-flex));
  flex-flow: var(--connect__flow-row) var(--connect__flex-wrap);
  justify-content: center;
  position: var(--connect__absolute);
  transition: transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  z-index: 1;

  .connect__typography {
    white-space: var(--connect__white-space-nowrap);
  }
}

.connect__badge-text {
  min-height: var(--connect__credits-lheight);
  min-width: var(--connect__credits-lheight);
  padding: 0 var(--connect__spacer-xs);
}

.connect__badge-dot {
  border-radius: var(--connect__half-radius);
  min-height: var(--connect__spacer-sm);
  min-width: var(--connect__spacer-sm);
}

/* Invisible variant */
.connect__badge-invisible {
  --variant-badge-display: var(--connect__display-none);
}

// tooltip
.connect__tooltip-wrapper {
  display: inline-flex;
  position: relative;
}

.connect__tooltip {
  align-items: center;
  animation: fade-in var(--connect__transition-rapid) var(--connect__linear) forwards;
  border-radius: var(--connect__radius-sm);
  display: var(--connect__display-flex);
  justify-content: center;
  margin: var(--connect__spacer-sm);
  opacity: var(--connect__opacity-zero);
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  position: var(--connect__absolute);
  white-space: nowrap;
}

/*
utilities 
*/

/* Positioning */

@mixin position-transform($x, $y, $originX, $originY) {
  transform: scale(1) translate($x, $y);
  transform-origin: $originX $originY;
}

.connect__position {
  position: absolute;
  // Badge positions
  &-top {
    &-right {
      right: 0;
      top: 0;
      @include position-transform(50%, -50%, 100%, 0%);
    }

    &-left {
      left: 0;
      top: 0;
      @include position-transform(-50%, -50%, 0%, 0%);
    }

    &-center {
      left: 50%;
      top: 0;
      @include position-transform(-50%, -50%, 50%, 0%);
    }
  }

  &-bottom {
    &-right {
      bottom: 0;
      right: 0;
      @include position-transform(50%, 50%, 100%, 100%);
    }

    &-left {
      bottom: 0;
      left: 0;
      @include position-transform(-50%, 50%, 0%, 100%);
    }

    &-center {
      bottom: 0;
      left: 50%;
      @include position-transform(-50%, 50%, 50%, 100%);
    }
  }

  &-center {
    &-right {
      right: 0;
      top: 50%;
      @include position-transform(50%, -50%, 100%, 50%);
    }

    &-left {
      left: 0;
      top: 50%;
      @include position-transform(-50%, -50%, 0%, 50%);
    }

    &-center {
      left: 50%;
      top: 50%;
      @include position-transform(-50%, -50%, 50%, 50%);
    }
  }

  // Tooltip positions
  &-top {
    &-end {
      right: 0;
      top: 0;
      @include position-transform(50%, -50%, 100%, 0%);
    }

    &-start {
      left: 0;
      top: 0;
      @include position-transform(-50%, -50%, 0%, 0%);
    }

    &-center {
      left: 50%;
      top: 0;
      @include position-transform(-50%, -50%, 50%, 0%);
    }
  }

  &-bottom {
    &-end {
      bottom: 0;
      right: 0;
      @include position-transform(50%, 50%, 100%, 100%);
    }

    &-start {
      bottom: 0;
      left: 0;
      @include position-transform(-50%, 50%, 0%, 100%);
    }

    &-center {
      bottom: 0;
      left: 50%;
      @include position-transform(-50%, 50%, 50%, 100%);
    }
  }

  &-left {
    &-end {
      left: 0;
      top: 50%;
      @include position-transform(-50%, -50%, 0%, 50%);
    }

    &-start {
      left: 0;
      top: 50%;
      @include position-transform(-50%, -50%, 0%, 50%);
    }

    &-center {
      left: 0;
      top: 50%;
      @include position-transform(-50%, -50%, 0%, 50%);
    }
  }

  &-right {
    &-end {
      right: 0;
      top: 50%;
      @include position-transform(50%, -50%, 100%, 50%);
    }

    &-start {
      right: 0;
      top: 50%;
      @include position-transform(50%, -50%, 100%, 50%);
    }

    &-center {
      right: 0;
      top: 50%;
      @include position-transform(50%, -50%, 100%, 50%);
    }
  }
}

.connect__typography {
  font-weight: var(--connect__fw, var(--connect__fw-regular));
  hyphens: auto;
}

.connect__position-relative-wrapper {
  position: var(--connect__relative);
}

.connect__visually-hidden {
  left: -9999px;
  position: var(--connect__absolute);
}

.connect__full-width {
  width: var(--connect__full-w);
}

.connect__rounded-corners {
  border-radius: var(--variant__rounded-radius, var(--connect__radius-sm));
}

.connect__rounded-reset {
  --variant__rounded-radius: var(--connect__spacer-zero);
}

.connect__rounded-top-left {
  border-top-left-radius: var(--variant__rounded-radius, var(--connect__radius-sm));
}

.connect__rounded-top-right {
  border-top-right-radius: var(--variant__rounded-radius, var(--connect__radius-sm));
}

.connect__rounded-bottom-left {
  border-bottom-left-radius: var(--variant__rounded-radius, var(--connect__radius-sm));
}

.connect__rounded-bottom-right {
  border-bottom-right-radius: var(--variant__rounded-radius, var(--connect__radius-sm));
}

.connect__rounded-top {
  border-radius: var(--variant__rounded-radius, var(--connect__radius-sm))
    var(--variant__rounded-radius, var(--connect__radius-sm)) 0 0;
}

.connect__rounded-bottom {
  border-radius: 0 0 var(--variant__rounded-radius, var(--connect__radius-sm))
    var(--variant__rounded-radius, var(--connect__radius-sm));
}

.connect__elevation--2 {
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl--2);
}

.connect__elevation-0 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-0);
}

.connect__elevation-2 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-2);
}

.connect__elevation-4 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-4);
}

.connect__elevation-6 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-6);
}

/* 
To be fleshed out / moved
*/

.connect__contain {
  height: auto;
  max-height: var(--connect__full-h);
  max-width: var(--connect__full-w);
  object-fit: contain;
  object-position: center center;
  width: auto;
}

@keyframes connect-loading {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes fade-in {
  from {
    opacity: var(--connect__opacity-zero);
  }
  to {
    opacity: var(--connect__opacity-one);
  }
}

@keyframes shake {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(5deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* 
  Reading Tile Bespoke Styles
*/

.connect__grapheme {
  --color-duration: 200ms;
  --enlarge-duration: 300ms;
  --scaled-duration: 500ms;
  --reduce-duration: 300ms;
  transform-origin: 50% 50%;

  .connect__typography {
    transition: color var(--color-duration) ease;
  }

  &-animate {
    animation: grapheme-animate
      calc(var(--enlarge-duration) + var(--scaled-duration) + var(--reduce-duration))
      cubic-bezier(0.4, 0, 0.2, 1) forwards;

    .connect__typography {
      color: var(--connect__primary-mid);
    }
  }
}

/* motion here is 300ms, 800ms 1100ms
  First part is the 300ms enlarge,
  second part 300ms + 500ms scale
  final finish then 300ms reduce

*/
@keyframes grapheme-animate {
  0% {
    transform: scale(1);
  }
  27.27% {
    transform: scale(1.05);
  }
  72.73% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}
