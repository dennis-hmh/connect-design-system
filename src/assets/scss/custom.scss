@import '../css/source.css';

/*! Variables and gradeband values */

.connect__g23,
.connect__g45 {
  --color-incorrect-bg: rgba(215, 231, 241, 1);
  --color-incorrect: rgba(115, 130, 143, 1);

  --icon-correct: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 34 34'%3E%3Cg filter='url(%23a)'%3E%3Cpath fill='%23fff' fill-rule='evenodd' d='M19.2515 4.0775c2.6871-2.77 7.0956-2.77 9.7827 0 2.6211 2.70189 2.6211 7.0336 0 9.7355-1.9741 2.0351-4.8142 6.1599-8.4473 12.6626-2.5022 4.4786-8.805 4.754-11.65872.4539-1.18722-1.789-2.30552-3.0139-3.30288-3.8062-2.9657-2.3558-3.47665-6.6589-1.23494-9.6577 2.12578-2.8437 6.02664-3.58247 9.00584-1.7574 2.0605-3.16019 4.0067-5.72508 5.8553-7.6307Zm-2.7953 10.2643c2.0864-3.2409 3.969-5.72943 5.6664-7.47915 1.1158-1.1502 2.9248-1.1502 4.0406 0 1.1157 1.15019 1.1157 3.01503 0 4.16525-2.3627 2.4355-5.4132 6.9549-9.0682 13.4967-1.0505 1.8802-3.6456 1.9838-4.834.1931-1.3495-2.0336-2.73668-3.6056-4.14769-4.7264-1.24989-.9929-1.48233-2.8423-.51917-4.1307.88212-1.1801 2.46116-1.4803 3.68086-.7598.112.0662.2211.141.3262.2246.9225.7328 1.8147 1.5816 2.6782 2.5453.7491-1.2619 1.4745-2.438 2.1768-3.5289Z' clip-rule='evenodd'/%3E%3C/g%3E%3Cpath fill='%2300AD00' d='M22.1226 6.86265c1.1158-1.1502 2.9248-1.1502 4.0406 0 1.1157 1.15019 1.1157 3.01503 0 4.16525-2.3627 2.4355-5.4132 6.9549-9.0682 13.4967-1.0505 1.8802-3.6456 1.9838-4.834.1931-1.3495-2.0336-2.73669-3.6056-4.1477-4.7264-1.24989-.9929-1.48233-2.8423-.51917-4.1307.96317-1.2885 2.75717-1.5281 4.00707-.5352.9225.7328 1.8147 1.5816 2.6782 2.5453 2.975-5.011 5.5745-8.66941 7.8432-11.00805Z'/%3E%3Cdefs%3E%3Cfilter id='a' width='33.9996' height='34.0002' x='.00035095' y='0' color-interpolation-filters='sRGB' filterUnits='userSpaceOnUse'%3E%3CfeFlood flood-opacity='0' result='BackgroundImageFix'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='1.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0'/%3E%3CfeBlend in2='BackgroundImageFix' result='effect1_dropShadow_2025_6409'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0'/%3E%3CfeBlend in2='effect1_dropShadow_2025_6409' result='effect2_dropShadow_2025_6409'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='2'/%3E%3CfeGaussianBlur stdDeviation='.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0'/%3E%3CfeBlend in2='effect2_dropShadow_2025_6409' result='effect3_dropShadow_2025_6409'/%3E%3CfeBlend in='SourceGraphic' in2='effect3_dropShadow_2025_6409' result='shape'/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E");
  --icon-incorrect: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 34 34'%3E%3Cg filter='url(%23a)'%3E%3Cpath fill='%23fff' fill-rule='evenodd' d='M25.351 17.5742c.2804.4195.5013.7221.6647.9206 2.409 2.9267 1.8927 7.2059-1.0685 9.5084-2.8569 2.2214-7.001 1.8301-9.3702-.9294l-1.0298 1.0009c-2.6412 2.567-6.87739 2.567-9.51852 0-2.70491-2.6289-2.70491-6.9398 0-9.5688l3.39374-3.2985c-.57183-1.0822-1.17174-2.2339-1.80019-3.4555-1.74585-3.39369-.28061-7.44175 3.05538-9.06292 3.17259-1.54176 7.07899-.42264 8.87669 2.6709l.8985-.87327L22.2407 7.355l-4.7378 4.6049c-.607-1.1351-1.2539-2.36637-1.9399-3.69261-.1308-.25283-.263-.50911-.3966-.76883-.6886-1.33853-2.3633-1.88107-3.7404-1.21181-1.3772.66926-1.93543 2.29689-1.2468 3.63542 1.1677 2.27003 2.2306 4.28583 3.1927 6.05283l-5.55533 5.3994c-1.08876 1.0582-1.08876 2.7738 0 3.832 1.08875 1.0582 2.85393 1.0582 3.94273 0l4.4245-4.3003c.8932 1.4696 1.648 2.5901 2.2713 3.3705.0399.05.0793.0986.1182.1458.9618 1.1685 2.7163 1.358 3.9186.4231 1.2023-.9348 1.3972-2.64.4354-3.8086-.6267-.7613-1.5192-2.1335-2.6627-4.097l5.9188-5.7527c1.0888-1.0582 1.0888-2.7739 0-3.8321-1.0887-1.05819-2.8539-1.05819-3.9427 0l-2.7879-2.86839c2.6412-2.567 6.8774-2.567 9.5185 0 2.7049 2.62898 2.7049 6.93989 0 9.56889l-3.6203 3.5187Z' clip-rule='evenodd'/%3E%3C/g%3E%3Cpath fill='%2373828F' d='M20.2646 16.9398c1.1435 1.9635 2.036 3.3357 2.6627 4.097.9618 1.1686.7669 2.8738-.4354 3.8087-1.2023.9348-2.9568.7454-3.9186-.4232-.6454-.7841-1.4391-1.9526-2.3895-3.5163l-4.4245 4.3004c-1.0888 1.0581-2.85398 1.0581-3.94273 0-1.08876-1.0582-1.08876-2.7739 0-3.8321l5.55533-5.3994c-.9621-1.767-2.025-3.7828-3.1927-6.05282-.68863-1.33853-.1304-2.96616 1.2468-3.63542 1.3771-.66926 3.0518-.12672 3.7404 1.21181.8344 1.6221 1.6138 3.10993 2.3365 4.46143l4.7378-4.60489c1.0888-1.05819 2.854-1.05819 3.9427 0 1.0888 1.0582 1.0888 2.77389 0 3.83209l-5.9188 5.7527Z'/%3E%3Cdefs%3E%3Cfilter id='a' width='34' height='33.9987' x='0' y='.00128174' color-interpolation-filters='sRGB' filterUnits='userSpaceOnUse'%3E%3CfeFlood flood-opacity='0' result='BackgroundImageFix'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='1.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0'/%3E%3CfeBlend in2='BackgroundImageFix' result='effect1_dropShadow_2025_6408'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0'/%3E%3CfeBlend in2='effect1_dropShadow_2025_6408' result='effect2_dropShadow_2025_6408'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='2'/%3E%3CfeGaussianBlur stdDeviation='.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0'/%3E%3CfeBlend in2='effect2_dropShadow_2025_6408' result='effect3_dropShadow_2025_6408'/%3E%3CfeBlend in='SourceGraphic' in2='effect3_dropShadow_2025_6408' result='shape'/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E");
  --icon-shown: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 34 34'%3E%3Cg filter='url(%23a)'%3E%3Cpath fill='%23fff' fill-rule='evenodd' d='M19.2515 4.0775c2.6871-2.77 7.0956-2.77 9.7827 0 2.6211 2.70189 2.6211 7.0336 0 9.7355-1.9741 2.0351-4.8142 6.1599-8.4473 12.6626-2.5022 4.4786-8.805 4.754-11.65872.4539-1.18722-1.789-2.30552-3.0139-3.30288-3.8062-2.9657-2.3558-3.47665-6.6589-1.23494-9.6577 2.12578-2.8437 6.02664-3.58247 9.00584-1.7574 2.0605-3.16019 4.0067-5.72508 5.8553-7.6307Zm-2.7953 10.2643c2.0864-3.2409 3.969-5.72943 5.6664-7.47915 1.1158-1.1502 2.9248-1.1502 4.0406 0 1.1157 1.15019 1.1157 3.01503 0 4.16525-2.3627 2.4355-5.4132 6.9549-9.0682 13.4967-1.0505 1.8802-3.6456 1.9838-4.834.1931-1.3495-2.0336-2.73668-3.6056-4.14769-4.7264-1.24989-.9929-1.48233-2.8423-.51917-4.1307.88212-1.1801 2.46116-1.4803 3.68086-.7598.112.0662.2211.141.3262.2246.9225.7328 1.8147 1.5816 2.6782 2.5453.7491-1.2619 1.4745-2.438 2.1768-3.5289Z' clip-rule='evenodd'/%3E%3C/g%3E%3Cpath fill='%232D2D2D' d='M22.1226 6.86265c1.1158-1.1502 2.9248-1.1502 4.0406 0 1.1157 1.15019 1.1157 3.01503 0 4.16525-2.3627 2.4355-5.4132 6.9549-9.0682 13.4967-1.0505 1.8802-3.6456 1.9838-4.834.1931-1.3495-2.0336-2.73669-3.6056-4.1477-4.7264-1.24989-.9929-1.48233-2.8423-.51917-4.1307.96317-1.2885 2.75717-1.5281 4.00707-.5352.9225.7328 1.8147 1.5816 2.6782 2.5453 2.975-5.011 5.5745-8.66941 7.8432-11.00805Z'/%3E%3Cdefs%3E%3Cfilter id='a' width='33.9996' height='34.0002' x='.00035095' y='0' color-interpolation-filters='sRGB' filterUnits='userSpaceOnUse'%3E%3CfeFlood flood-opacity='0' result='BackgroundImageFix'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='1.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0'/%3E%3CfeBlend in2='BackgroundImageFix' result='effect1_dropShadow_2035_13467'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='1'/%3E%3CfeGaussianBlur stdDeviation='.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.14 0'/%3E%3CfeBlend in2='effect1_dropShadow_2035_13467' result='effect2_dropShadow_2035_13467'/%3E%3CfeColorMatrix in='SourceAlpha' result='hardAlpha' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0'/%3E%3CfeOffset dy='2'/%3E%3CfeGaussianBlur stdDeviation='.5'/%3E%3CfeComposite in2='hardAlpha' operator='out'/%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0'/%3E%3CfeBlend in2='effect2_dropShadow_2035_13467' result='effect3_dropShadow_2035_13467'/%3E%3CfeBlend in='SourceGraphic' in2='effect3_dropShadow_2035_13467' result='shape'/%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E");

  --checked-incorrect-bg: var(--color-incorrect);

  --checked-correct: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath fill='%23fff' d='M15.8284 2 18 4.19383C15.7166 6.50054 12.7845 10.4477 9.23543 16.012L7.96739 18 6.6675 16.0331C5.30261 13.9678 3.74716 12.535 2 11.7022l1.31048-2.8059c1.68248.80193 3.19637 2.0004 4.54119 3.5823C10.982 7.70473 13.6335 4.21734 15.8284 2Z'/%3E%3C/svg%3E");
  --checked-incorrect: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath fill='%23fff' d='m14.0007 14.4844-2.187 1.7496c-.6199-.775-1.4294-2.0423-2.43608-3.8125l-4.39723 4.3972L3 14.8383l4.9728-4.97278c-.85583-1.60164-1.81767-3.47131-2.88853-5.61301L7.58929 3c.89682 1.79363 1.71585 3.39244 2.45521 4.79385l4.6884-4.68847 1.9804 1.98039-5.2791 5.27913c1.11 1.9948 1.969 3.3726 2.5665 4.1195Z'/%3E%3C/svg%3E");
}

.connect__g23 {
  --connect__effects-inner-edge: 0.375rem;
  --connect__inner-status: 0.625rem;
}

.connect__g45 {
  --connect__effects-inner-edge: 0.1875rem;
  --connect__inner-status: 0.375rem;
  --connect__inner-radius: 0.5625rem;
  --connect__inner-divider-width: 0.5rem;
}

.connect__g68 {
  --connect__effects-inner-edge: 0.125rem;
  --connect__inner-status: 0.25rem;
  --connect__inner-radius: 0.5rem;
  --connect__inner-divider-width: 0.375rem;
}

.connect__g912 {
  --connect__effects-inner-edge: 0.125rem;
  --connect__inner-status: 0.25rem;
  --connect__inner-radius: 0.375rem;
  --connect__inner-divider-width: 0.375rem;
  --color-incorrect-status: var(--connect__incorrect-mid);
}

.connect__g68,
.connect__g912 {
  --connect__incorrect-dark: var(--connect__red-c55);
  --connect__incorrect-mid: var(--connect__red-s45);
  --connect__incorrect-light: var(--connect__red-s25);
  --connect__incorrect-pale: var(--connect__red-s15);
  --checked-incorrect-bg: var(--connect__incorrect-mid);
  --color-incorrect-bg: var(--connect__incorrect-pale);
}

/* 
.connect__button Component

Variables related to theme/overrides:
  --connect__button-fs: Font size of the button text.
  --connect__button-lh: Line height of the button text.
  --connect__button-font-w: Font weight of the button text.
  --connect__button-text-transform: Text transformation.
  --connect__button-border-w: Border width of the button.
  --connect__button-border-c: Border color of the button.
  --connect__button-radius: Border radius of the button.
  --connect__button-gap: Gap between elements inside the button.
  --connect__button-padding-y: Vertical padding of the button.
  --connect__button-padding-x: Horizontal padding of the button.
  --connect__button-justify-content: Justification of content inside the button.
  --connect__button-flow: Flex flow direction of the button content.
  --connect__button-margin: Margin around the button.
  --connect__button-w: Width of the button.
  --connect__button-h: Height of the button.

Variables related to states (e.g., correct/incorrect):
  --inner-shadow: Inner shadow of the button.
  --inner-shadow-color: color of the inner shadow.
  --connect__shadow-level-1 to --connect__shadow-level-4: Different levels of box shadows.
  --connect__button-color: Text color of the button.
  --connect__button-bg: Background color of the button.
  --connect__state-based-pointer: Cursor style when the button is disabled.
  --connect__icon-fill-color: Fill color for icons inside the button.
  --connect__button-inner-divider: Inner divider size.
  --connect__button-inner-divider-color: Inner divider color.
  --connect__inner-status: Inner status size.
  --connect__inner-status-color: Inner status color.
  --connect__inner-status-color-state: State-based inner status color.
  --state-based-bg: State-based background color.
  --active-color: Active state color.

States:
  &:not(:disabled):not(.connect__button-toolbar):not([class*='-correct']):not([class*='-incorrect']):not([class*='-shown'])
    - Default state for buttons that are not disabled, not in the toolbar, and not in specific states like correct, incorrect, or shown.
    - &:hover: Hover state.
    - &:active: Active state.

  &:focus-visible:not(:active)
    - Focus state when the button is visible and not active.

  &-primary
    - Primary button state.
    - &:disabled: Disabled state for primary buttons.

  &-secondary
    - Secondary button state.
    - &[class*='connect_']:disabled: Disabled state for secondary buttons with specific classes.
    - &[class*='-correct']:disabled: Disabled state for secondary buttons in the correct state.
    - &[class*='-incorrect']:disabled: Disabled state for secondary buttons in the incorrect state.
    - &.connect__button-incorrect: Incorrect state for secondary buttons.
    - &.connect__button-correct: Correct state for secondary buttons.

  &-incorrect
    - Incorrect button state.
    - &:disabled: Disabled state for incorrect buttons.

  &-toggle
    - Toggle button state.
    - &:not(:disabled): Default state for toggle buttons that are not disabled.
    - &.connect__toggle-on:not(:disabled): Active state for toggle buttons that are not disabled.

  &-icon
    - Icon button state.
    - &:not([class*='-primary']):not([class*='-secondary']): Default state for icon buttons that are not primary or secondary.
    - svg: Styles for SVG icons inside the button.

  &-media
    - Media button state.
    - &.media-active:not(:disabled): Active state for media buttons that are not disabled.

  &:disabled
    - Disabled state for the button.
    - svg: Styles for SVG icons inside the disabled button.

  &:has(svg)
    - State for buttons that contain SVG icons.
    - align-items: Centre alignment for content inside the button.
*/

@property --gradient-angle {
  inherits: false;
  initial-value: 0deg;
  syntax: '<angle>';
}

@property --gradient-angle-offset {
  inherits: false;
  initial-value: 0deg;
  syntax: '<angle>';
}

@property --gradient-percent {
  inherits: false;
  initial-value: 5%;
  syntax: '<percentage>';
}

@property --gradient-shine {
  inherits: false;
  initial-value: transparent;
  syntax: '<color>';
}

.connect__button {
  // typography
  --connect__button-fs: var(--theme__button-fs, var(--connect__body-sm));
  --connect__button-lh: var(--theme__button-lh, var(--connect__body-sm-lheight));
  --connect__button-font-w: var(--theme__button-fw, 400);
  --connect__button-text-transform: var(--theme__button-transform, capitalize);

  // borders / radius
  --connect__button-border-w: var(--theme__button-border-w, 0rem);
  --connect__button-border-c: var(--connect__neutrals-white, transparent);
  --connect__button-radius: var(--theme__border-radius, var(--border-radius));

  // shadows
  --inner-shadow: 0 0 0 var(--connect__effects-inner-edge) var(--inner-shadow-color, transparent)
    inset;
  --inner-shadow-color: var(--connect__neutrals-white);

  --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-7);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-8);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-9);

  // palette
  --connect__button-color: var(--active-color, var(--connect__neutrals-dark));
  --connect__button-bg: var(--state-based-bg, var(--connect__selected-mid));

  // spacings
  --connect__button-gap: var(--connect__spacer-sm);
  --connect__button-padding-y: calc(var(--connect__spacer-sm) - var(--connect__button-border-w));
  --connect__button-padding-x: calc(var(--connect__spacer-md) - var(--connect__button-border-w));
  --connect__button-align: var(--theme__button-align, center);
  --connect__button-justify-content: var(--btn-justify, space-between);
  --connect__button-flow: var(--btn-flow, row wrap);

  // margins
  --connect__button-margin: var(--theme__button-margin, 0);

  // icons
  --icon-fill-color: var(
    --theme__icon-fill,
    var(--state-based-icon-fill, var(--connect__icon-fill))
  );

  align-items: var(--connect__button-align);
  background-color: var(--theme__button-bg, var(--connect__button-bg));
  border: var(--connect__button-border-w) solid var(--connect__button-border-c, transparent);
  border-radius: var(--connect__button-radius, 0);
  box-shadow:
    var(--inner-shadow),
    0 0 0 var(--connect__inner-status, 0)
      var(--connect__inner-status-color-state, var(--connect__inner-status-color, transparent))
      inset,
    0 0 0 var(--connect__button-inner-divider, 0)
      var(--connect__button-inner-divider-color, transparent) inset,
    var(--connect__shadow-level-1) var(--connect__shadow-10),
    var(--connect__shadow-level-2) var(--connect__shadow-20),
    var(--connect__shadow-level-3) var(--connect__shadow-14),
    var(--connect__shadow-level-4) var(--connect__shadow-12);

  color: var(--theme__button-color, var(--connect__button-color));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  flex-flow: var(--connect__button-flow);
  font-family: var(--connect__font-sans);
  font-size: var(--connect__button-fs);
  font-weight: var(--connect__button-font-w, initial);
  gap: var(--connect__button-gap, 0);
  justify-content: var(--connect__button-justify-content);
  line-height: var(--connect__button-lh);
  margin: var(--connect__button-margin);
  padding: calc(var(--connect__button-padding-y) - var(--connect__button-border-w))
    calc(var(--connect__button-padding-x) - var(--connect__button-border-w));
  text-transform: var(--connect__button-text-transform, initial);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow, fill, stroke;
  transition-timing-function: var(--connect__ease-out);

  width: var(--connect__button-w, fit-content);

  &:not(:disabled):not(.connect__button-menu):not([class*='-correct']):not(
      [class*='-incorrect']
    ):not([class*='-shown']) {
    &:hover {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-10);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-11);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-12);
    }

    &:active {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
    }
  }

  &:focus-visible:not(:active) {
    --connect__shadow-10: var(--connect__focus-mid);
    --connect__shadow-20: var(--connect__focus-mid);
    --connect__shadow-level-2: var(--connect__shadow-spread-level-19);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
    outline: unset;
  }

  /* 
    Each button type has an active color
    set icon fill to that, change on case by case
  */
  .connect__icon {
    --connect__icon-fill-color: var(--icon-fill-color);
  }

  &-primary {
    --active-color: var(--connect__neutrals-white);
    --connect__icon-fill: var(--active-color);

    &:disabled {
      --state-based-bg: var(--connect__neutrals-pale);
    }
  }

  &-secondary {
    --state-based-bg: var(--connect__neutrals-white);
    --active-color: var(--connect__selected-mid);
    --connect__icon-fill: var(--active-color);
    --connect__inner-status-color: var(--connect__selected-mid);
    --connect__button-inner-divider: var(--connect__button-padding-y);
    --connect__button-inner-divider-color: var(--connect__neutrals-white);

    &[class*='connect_']:disabled {
      --state-based-bg: var(--connect__neutrals-white);
      --connect__inner-status-color: var(--connect__neutrals-pale);
    }

    &[class*='-correct']:disabled {
      --connect__inner-status-color: var(--connect__correct-light);
    }

    &[class*='-incorrect']:disabled {
      --connect__inner-status-color: var(--connect__incorrect-light);
    }

    &.connect__button-incorrect {
      --connect__inner-status-color: var(--connect__incorrect-mid);
    }

    &.connect__button-correct {
      --state-based-bg: var(--connect__neutrals-white);
      --connect__inner-status-color: var(--connect__correct-light);
    }
  }

  &-incorrect {
    &:disabled {
      --state-based-bg: var(--color-incorrect-bg);
    }
  }

  &-icon {
    --border-radius: 0.875rem;

    border-radius: var(--border-radius);

    svg {
      height: var(--connect__icon-size, var(--connect__icon-md));
      width: var(--connect__icon-size, var(--connect__icon-md));
    }
  }

  &-icon,
  &-menu {
    --connect__shadow-level-1: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
    --connect__button-padding-y: var(--connect__spacer-sm);
    --connect__button-padding-x: var(--connect__spacer-sm);

    &:active {
      --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
      --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
    }

    &:focus-visible:not(:active) {
      --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
      --inner-shadow-color: var(--connect__neutrals-white);
      --connect__button-bg: var(--connect__neutrals-white);
    }

    &:not(:disabled) {
      &:hover {
        --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
        --connect__shadow-level-2: var(--connect__shadow-spread-level-7);
        --connect__shadow-level-3: var(--connect__shadow-spread-level-8);
        --connect__shadow-level-4: var(--connect__shadow-spread-level-9);

        --connect__button-bg: var(--connect__neutrals-white);
        --inner-shadow-color: var(--connect__neutrals-white);
      }
    }
  }

  &-loading > svg,
  [class*='loading'] > svg {
    animation: connect-loading 0.85s linear infinite;
  }

  @keyframes connect-loading {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  &-media {
    --btn-justify: center;
    --btn-flow: column wrap;
    --connect__button-padding-y: var(--connect__spacer-md);
    --connect__button-padding-x: var(--connect__spacer-md);

    --connect__button-radius: 100%;
    --connect__button-h: calc(var(--connect__spacer-xl) * 3.75 - var(--connect__button-padding-y));
    --connect__button-w: calc(var(--connect__spacer-xl) * 3.75 - var(--connect__button-padding-x));

    &.connect__media-active:not(:disabled) {
      --state-based-bg: var(--connect__red-s45);
    }
  }

  &-menu {
    --connect__effects-inner-edge: 0.0625rem;
    --connect__button-bg: var(--connect__neutrals-null);
    --inner-shadow-color: var(--connect__neutrals-null);
    --active-color: var(--variant__icon-fill-color, var(--connect__neutrals-dark));
  }

  &:disabled {
    --connect__button-bg: var(--state-based-bg);

    &:active {
      --connect__shadow-level-1: var(--connect__shadow-spread-level-0);
    }

    .connect__icon {
      --connect__icon-fill-color: var(--connect__neutrals-dark);
    }
  }

  &--rive {
    $shimmer-color: var(--connect__button-bg);
    --shimmer-filter: brightness(120%);
    --animation: gradient-angle linear infinite;
    --connect__button-border-w: 2px;
    --connect__button-justify-content: center;
    --duration: 1.25s;
    --rive-h: calc(var(--connect__button-lh) + calc(var(--connect__button-padding-y) * 2));
    --conic-gradient-color: var(--connect__neutrals-null);

    align-content: center;
    align-items: center;
    background:
      linear-gradient(var(--connect__button-bg), var(--connect__button-bg)) padding-box,
      conic-gradient(
          from calc(var(--gradient-angle) - var(--gradient-angle-offset)),
          transparent,
          var(--conic-gradient-color) var(--gradient-percent),
          var(--conic-gradient-color) calc(var(--gradient-percent) * 2),
          var(--conic-gradient-color) calc(var(--gradient-percent) * 3),
          transparent calc(var(--gradient-percent) * 4)
        )
        border-box;
    border: var(--connect__button-border-w) solid transparent;
    display: grid;
    grid-template-rows: 1fr;
    isolation: isolate;
    justify-content: center;
    overflow: hidden;
    position: relative;
    transition: var(--transition);
    transition-property: --gradient-angle-offset, --gradient-percent, --gradient-shine;

    &::after {
      content: '';
      position: absolute;
      width: 100%;
    }

    &:is(:hover, :focus-visible):not(:disabled) {
      --conic-gradient-color: var(--connect__button-bg);

      &,
      &::after {
        animation:
          var(--animation) var(--duration),
          var(--animation) calc(var(--duration) / 0.4) reverse paused;
        animation-composition: add;
      }

      &::after {
        --animation: shimmer linear infinite;
        aspect-ratio: 1;
        background: linear-gradient(-50deg, transparent, var(--shimmer-filter), transparent);
        mask-image: radial-gradient(circle at bottom, transparent 40%, var(--connect__button-bg));
        opacity: 0.6;
      }

      &,
      &::before,
      &::after {
        animation-play-state: running;
      }
    }

    p {
      grid-column: 1 / span 2;
      grid-row: 1;
      justify-self: center;
      margin: 0;
      position: relative;
      width: fit-content;
      z-index: 2;
    }

    &:has(svg) {
      p {
        grid-column: 2;
        justify-self: start;
      }

      svg {
        grid-column: 2;
        grid-row: 1;
      }

      svg,
      p {
        &:first-child {
          grid-column: 1;
          justify-self: end;
        }
      }
    }

    hmh-rive {
      align-self: stretch;
      grid-column: 1 / span 2;
      grid-row: 1;
    }
  }
}

@keyframes gradient-angle {
  to {
    --gradient-angle: 360deg;
  }
}

@keyframes shimmer {
  to {
    rotate: 360deg;
  }
}

/* 
.connect__input Component

Variables related to theme/overrides:
  --resize: Resize property of the input field.
  --connect__input-padding-y: Vertical padding of the input field.
  --connect__input-padding-x: Horizontal padding of the input field.
  --connect__input-fs: Font size of the input text.
  --connect__input-lh: Line height of the input text.
  --connect__input-text-color: Text color of the input field.
  --connect__input-bg: Background color of the input field.
  --connect__input-border-w: Border width of the input field.
  --connect__input-border-c: Border color of the input field.
  --caret-color: color of the caret (text cursor).
  --connect__input-width: Width of the input field.

Variables related to shadows:
  --starting-shadow-color: Initial shadow color.
  --connect__input-focus-shadow: Shadow color when the input is focused.
  --outer-shadow-color: Outer shadow color.
  --connect__shadow-level-1 to --connect__shadow-level-5: Different levels of box shadows.
  --connect__input-outer-shadow: Outer shadow for the input field.

Variables related to states (e.g., focus, active):
  --state-based-bg: State-based background color.
  --active-color: Active state color.
  --connect__selected-mid: color for the selected state.
  --connect__focus-mid: color for the focus state.
  --connect__neutrals-white: Neutral white color.
  --connect__neutrals-dark: Neutral dark color.
  --connect__gray-c45: Gray color.

States:
  &:not(:disabled)
    - Default state for input fields that are not disabled.
    - &:hover: Hover state.
    - &:active: Active state.

  &:focus-visible:not(:active)
    - Focus state when the input is visible and not active.

  &:active:not(:disabled)
    - Active state for input fields that are not disabled.

  &-resize
    - Resize state for the input field.
    - &:disabled: Disabled state for resizable input fields.

  &.connect__input-selected,
  &.connect__input-selected:disabled
    - Selected state for input fields, including when disabled.
    - &:hover: Hover state for selected input fields.
    - &:focus-visible: Focus state for selected input fields.

  & textarea
    - Styles for textarea elements inside the input field.
    - field-sizing: Content sizing for the textarea.
    - max-height: Maximum height for the textarea.
    - min-height: Minimum height for the textarea.
*/

.connect__input {
  --resize: none;

  --starting-shadow-color: var(--connect__shadow-10);
  --connect__input-focus-shadow: transparent;
  --outer-shadow-color: var(--connect__neutrals-white);

  --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-3);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-5);
  --connect__shadow-level-5: var(--connect__shadow-spread-level-0);
  --connect__input-outer-shadow: var(--connect__shadow-spread-level-2);

  --connect__input-padding-y: var(--connect__spacer-sm);
  --connect__input-padding-x: var(--connect__spacer-md);
  --connect__input-fs: var(--connect__body-sm, 1.25rem);
  --connect__input-lh: var(--connect__body-sm-lheight, 1.5);

  --connect__input-text-color: var(--active-color, var(--connect__neutrals-dark));
  --connect__input-bg: var(--connect__neutrals-white, transparent);

  --connect__input-border-w: 0rem;
  --connect__input-border-c: var(--connect__neutrals-white, transparent);

  --caret-color: var(--connect__selected-mid);

  background-color: var(--state-based-bg, var(--connect__neutrals-white));
  border: var(--connect__input-border-w) solid var(--connect__input-border-c);
  border-radius: var(--border-radius);

  box-shadow:
    var(--connect__shadow-level-1) var(--starting-shadow-color, var(--connect__shadow-10)) inset,
    var(--connect__shadow-level-2) var(--connect__shadow-20) inset,
    var(--connect__shadow-level-3) var(--connect__shadow-14) inset,
    var(--connect__shadow-level-4) var(--connect__shadow-12) inset,
    var(--connect__shadow-level-5, initial) var(--connect__input-focus-shadow, rgba(0, 0, 0, 0)),
    var(--connect__input-outer-shadow) var(--outer-shadow-color, #fff);
  caret-color: var(--caret-color);

  color: var(--connect__input-text-color);
  cursor: var(--connect__state-based-pointer, text);

  display: inline-flex;
  flex: 1;
  font-family: var(--connect__font-sans);
  font-size: var(--connect__input-fs);
  line-height: var(--connect__input-lh);

  padding: var(--connect__input-padding-y) var(--connect__input-padding-x);
  position: relative;
  resize: var(--resize);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__input-width, 100%);

  &:not(:disabled) {
    &:hover,
    &:active {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-7);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-14);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-9);
    }
  }

  &:focus-visible,
  &:active {
    outline: unset;
  }

  &:focus-visible:not(:active) {
    --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-3);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-5);
    --connect__shadow-level-5: var(--connect__shadow-spread-level-17);
    --connect__input-outer-shadow: var(--connect__shadow-spread-level-15);

    --starting-shadow-color: var(--connect__focus-mid);
    --connect__input-focus-shadow: var(--connect__focus-mid);
    background: var(--neutrals-white, #fff);

    border-radius: var(--radius-border-radius, 0.875rem);
  }

  &:active:not(:disabled) {
    --starting-shadow-color: var(--connect__selected-mid);
  }

  &-resize {
    --resize: vertical;

    &:disabled {
      resize: none;
    }
  }

  &.connect__input-selected,
  &.connect__input-selected:disabled {
    --caret-color: var(--connect__selected-mid);
    --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-3);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-5);
    --starting-shadow-color: var(--connect__selected-mid);

    &:hover {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-7);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-14);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-9);
    }

    &:focus-visible {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-3);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-5);
      --connect__shadow-level-5: var(--connect__shadow-spread-level-17);
      --connect__input-outer-shadow: var(--connect__shadow-spread-level-15);
      --starting-shadow-color: var(--connect__focus-mid);
      --connect__input-focus-shadow: var(--connect__focus-mid);
    }
  }

  // min 2 lines
  // max 4 lines

  & textarea {
    field-sizing: content;
    max-height: calc(4lh + 2 * var(--connect__input-padding-y));
    min-height: calc(2lh + 2 * var(--connect__input-padding-y));
  }
}

/* 
.connect__select Component

Variables related to theme/overrides:
  --connect__select-bg: Background color of the select dropdown.
  --connect__select-icon: Icon used in the select dropdown.
  --connect__select-border-w: Border width of the select dropdown.
  --connect__select-border-c: Border color of the select dropdown.
  --connect__select-fs: Font size of the select text.
  --connect__select-lh: Line height of the select text.
  --connect__select-font-w: Font weight of the select text.
  --connect__select-text-transform: Text transformation (e.g., capitalise, uppercase).
  --connect__select-padding-y: Vertical padding of the select dropdown.
  --connect__select-padding-x: Horizontal padding of the select dropdown.

Variables related to shadows:
  --outer-shadow-color: Outer shadow color.
  --connect__shadow-level-1 to --connect__shadow-level-5: Different levels of box shadows.
  --connect__input-outer-shadow: Outer shadow for the select dropdown.

Variables related to states (e.g., focus, active):
  --state-based-bg: State-based background color.
  --active-color: Active state color.
  --connect__selected-mid: color for the selected state.
  --connect__focus-mid: color for the focus state.
  --connect__neutrals-white: Neutral white color.
  --connect__neutrals-dark: Neutral dark color.
  --connect__state-based-pointer: Cursor style for the select dropdown.

States:
  &:not(:disabled)
    - Default state for select dropdowns that are not disabled.
    - &:hover: Hover state.
    - &:active: Active state.

  &:focus-visible:not(:active)
    - Focus state when the select dropdown is visible and not active.

  &:active:not(:disabled)
    - Active state for select dropdowns that are not disabled.

  &-correct,
  &-incorrect,
  &-shown,
  &:disabled
    - States for correct, incorrect, shown, and disabled select dropdowns.
    - &:disabled: Disabled state for the select dropdown.

  &::-ms-expand
    - State for the select dropdown in Internet Explorer.
    - display: none; Hides the default dropdown arrow in Internet Explorer.
*/
.connect__select {
  // Palette
  --connect__select-bg: var(--state-based-bg, var(--connect__neutrals-white));
  --connect__select-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20' fill='none'%3E%3Cpath d='M4.70711 7.29289C4.31658 6.90237 3.68342 6.90237 3.29289 7.29289C2.90237 7.68342 2.90237 8.31658 3.29289 8.70711L9.29289 14.7071C9.68342 15.0976 10.3166 15.0976 10.7071 14.7071L16.7071 8.70711C17.0976 8.31658 17.0976 7.68342 16.7071 7.29289C16.3166 6.90237 15.6834 6.90237 15.2929 7.29289L10 12.5858L4.70711 7.29289Z' fill='%23006AFF'/%3E%3C/svg%3E");
  --connect__select-border-w: 0rem;
  --connect__select-border-c: var(--connect__select-border-c, transparent);

  // typography
  --connect__select-fs: var(--connect__body-sm, 1.25rem);
  --connect__select-lh: var(--connect__body-sm-lheight, 1.5);
  --connect__select-font-w: 400;
  --connect__select-text-transform: capitalize;

  // shadows
  --outer-shadow-color: var(--connect__neutrals-white);

  --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-3);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-5);
  --connect__shadow-level-5: var(--connect__shadow-spread-level-0);
  --connect__input-outer-shadow: var(--connect__shadow-spread-level-2);

  // Paddings
  --connect__select-padding-y: var(--connect__spacer-sm);
  --connect__select-padding-x: var(--connect__spacer-md);

  appearance: none;
  background-color: var(--connect__select-bg);

  background-image: var(--connect__select-icon);
  background-position: calc(100% - var(--connect__select-padding-x));
  background-repeat: no-repeat;

  background-size: var(--connect__ui-icon) var(--connect__ui-icon);

  border: var(--connect__select-border-w) solid var(--connect__select-border-c);
  border-radius: var(--border-radius);

  box-shadow:
    var(--connect__shadow-level-1) var(--starting-shadow-color, var(--connect__shadow-10)) inset,
    var(--connect__shadow-level-2) var(--connect__shadow-20) inset,
    var(--connect__shadow-level-3) var(--connect__shadow-14) inset,
    var(--connect__shadow-level-4) var(--connect__shadow-12) inset,
    var(--connect__shadow-level-5, initial) var(--connect__input-focus-shadow, rgba(0, 0, 0, 0)),
    var(--connect__input-outer-shadow) var(--outer-shadow-color, #fff);
  color: var(--active-color, var(--connect__neutrals-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  flex: 1;
  font-size: var(--connect__select-fs);
  font-weight: var(--connect__select-font-w);
  line-height: var(--connect__select-lh);
  padding: var(--connect__select-padding-y) var(--connect__select-padding-x);
  position: relative;
  text-transform: capitalize;
  width: 100%;

  &:not(:disabled) {
    &:hover,
    &:active {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-7);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-14);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-9);
    }
  }

  &:focus-visible,
  &:active {
    outline: unset;
  }

  &:focus-visible:not(:active) {
    --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-3);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-5);
    --connect__shadow-level-5: var(--connect__shadow-spread-level-17);
    --connect__input-outer-shadow: var(--connect__shadow-spread-level-15);

    --starting-shadow-color: var(--connect__focus-mid);
    --connect__input-focus-shadow: var(--connect__focus-mid);
  }

  &:active:not(:disabled) {
    --starting-shadow-color: var(--connect__selected-mid);
  }

  &-correct,
  &-incorrect,
  &-shown,
  &:disabled {
    --connect__select-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20' fill='none'%3E%3Cpath d='M4.70711 7.29289C4.31658 6.90237 3.68342 6.90237 3.29289 7.29289C2.90237 7.68342 2.90237 8.31658 3.29289 8.70711L9.29289 14.7071C9.68342 15.0976 10.3166 15.0976 10.7071 14.7071L16.7071 8.70711C17.0976 8.31658 17.0976 7.68342 16.7071 7.29289C16.3166 6.90237 15.6834 6.90237 15.2929 7.29289L10 12.5858L4.70711 7.29289Z' fill='%235D5F5F'/%3E%3C/svg%3E");
  }

  &::-ms-expand {
    display: none;
  }
}

.connect__button-split {
  position: relative;

  .connect__list {
    --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
    --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-18);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-18);

    --connect__list-bg: var(--theme__list-bg, var(--connect__neutrals-white));
    --connect__list-radius: var(--theme__list-radius, var(--border-radius));

    --connect__list-flow: var(--theme__list-flow, column);
    --connect__list-wrap: var(--theme__list-wrap, wrap);

    background-color: var(--connect__list-bg);
    border-radius: var(--connect__list-radius);
    box-shadow:
      var(--connect__shadow-level-1) var(--connect__shadow-10),
      var(--connect__shadow-level-2) var(--connect__shadow-20),
      var(--connect__shadow-level-3) var(--connect__shadow-14),
      var(--connect__shadow-level-4) var(--connect__shadow-12);
    color: var(--connect__neutrals-dark);
    display: flex;
    flex-flow: var(--connect__list-flow) var(--connect__list-wrap);
    left: 0;
    margin-top: calc(var(--border-width) * 2);
    padding: 0;
    position: absolute;
    top: 100%;
    width: 100%;
    z-index: 1;
  }

  .connect__list-item {
    cursor: var(--connect__state-based-pointer, pointer);
    font-family: var(--connect__font-sans);
    font-size: var(--connect__caption);
    line-height: var(--connect__caption-lheight);
    padding: var(--connect__spacer-sm) var(--connect__spacer-md);

    &:first-of-type {
      border-radius: var(--border-radius) var(--border-radius) 0 0;
    }

    &:last-of-type {
      border-radius: 0 0 var(--border-radius) var(--border-radius);
    }

    &:hover {
      background-color: var(--connect__neutrals-pale);
    }
  }
}

.connect__button-split-button {
  --connect__button-fs: var(--theme__button-fs, var(--connect__body-sm));
  --connect__button-lh: var(--theme__button-lh, var(--connect__body-sm-lheight));
  --connect__button-color: var(--active-color, var(--connect__neutrals-dark));
  --connect__button-bg: var(--state-based-bg, var(--connect__selected-mid));

  background-color: var(--theme__button-bg, var(--connect__button-bg));
  border: unset;
  color: var(--theme__button-color, var(--connect__button-color));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  font-size: var(--connect__button-fs);
  line-height: var(--connect__button-lh);

  &:disabled {
    --active-color: var(--color-action-disabled);
    color: var(--connect__neutrals-mid);
  }

  &:focus-visible {
    outline: unset;
  }
}

.connect__button-split-button-actions {
  border-left: calc(var(--connect__spacer-xs) / 2) solid var(--connect__neutrals-white);
  padding-left: var(--connect__button-gap);
}

.connect__accordion {
  .connect__list-item {
    margin-left: 0;
    margin-top: var(--border-width);
    padding-left: 0;
  }

  .connect__details {
    // paddings for details itself
    --connect__details-padding-t: var(
      --theme__details-padding-t,
      var(--variant__details-padding-t, 0)
    );
    --connect__details-padding-r: var(
      --theme__details-padding-r,
      var(--variant__details-padding-r, 0)
    );
    --connect__details-padding-b: var(
      --theme__details-padding-b,
      var(--variant__details-padding-b, 0)
    );
    --connect__details-padding-l: var(
      --theme__details-padding-l,
      var(--variant__details-padding-l, 0)
    );

    // border radius for details based on open closed
    --connect__details-closed-radius: var(--border-radius);
    --connect__details-open-radius: var(--border-radius) var(--border-radius) 0 0;

    // Icon for accordion. Changes when open. in the [open]
    --connect__icon-rotate: rotate(0deg);

    padding: var(--connect__details-padding-t) var(--connect__details-padding-r)
      var(--connect__details-padding-b) var(--connect__details-padding-l);
    position: relative;

    > *:not(summary) {
      padding: var(--connect__details-items-state-padding-t, 0)
        var(--connect__details-items-state-padding-r, 0)
        var(--connect__details-items-state-padding-b, 0)
        var(--connect__details-items-state-padding-l, 0);
    }

    &[open] {
      --connect__icon-rotate: rotate(180deg);
      --variant__details-padding-b: var(--connect__spacer-sm);

      *:not(summary) {
        --connect__details-items-state-padding-t: var(--connect__spacer-sm);
        --connect__details-items-state-padding-r: var(--connect__spacer-sm);
        --connect__details-items-state-padding-l: var(--connect__spacer-sm);
      }
    }
  }

  .connect__summary {
    --connect__summary-bg: var(
      --theme__summary-bg,
      var(--variant__summary-bg, var(--active-color))
    );

    --connect__summary-icon-active-ring: var(
      --theme__summary-icon-active-ring,
      var(--variant__summary-icon-active-ring, var(--connect__selected-mid))
    );

    --connect__summary-padding-y: var(
      --theme__summary-padding-y,
      var(--variant__summary-padding-y, var(--connect__spacer-sm))
    );
    --connect__summary-padding-x: var(
      --theme__summary-padding-x,
      var(--variant__summary-padding-x, var(--connect__spacer-sm))
    );

    // alignment of summary items
    --connect__align-items: var(--theme__align-items, var(--variant__align-items, center));
    --connect__justify-content: var(
      --theme__justify-content,
      var(--variant__justify-content, space-between)
    );

    align-items: var(--connect__align-items);
    background-color: var(--connect__summary-bg);
    border-radius: var(--connect__details-open-radius, var(--connect__details-closed-radius));
    cursor: var(--connect__state-based-pointer, pointer);
    display: flex;
    justify-content: var(--connect__justify-content);
    padding: var(--connect__summary-padding-y) var(--connect__summary-padding-x);

    &::after {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath d='M0 0h20v20H0z'/%3E%3Cpath fill='%230072db' fill-rule='nonzero' d='M16 5.8c.5-.4 1.2-.4 1.7 0 .4.5.4 1.2 0 1.6l-6.9 6.8c-.4.4-1.2.4-1.6 0L2.3 7.4C2 7 2 6.3 2.3 5.8c.5-.4 1.2-.4 1.7 0l6 6 6-6z'/%3E%3C/g%3E%3C/svg%3E");
      background-position: center center;
      background-repeat: no-repeat;
      background-size: var(--connect__ui-icon) var(--connect__ui-icon);
      border: var(--border-width) solid var(--connect__summary-icon-active-ring);
      border-radius: 50%;
      content: '';
      flex-shrink: 0;
      height: var(--ui-button);
      margin-left: var(--connect__spacer-md);
      transform: var(--connect__icon-rotate);
      width: var(--ui-button);
    }

    &::before {
      --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
      --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-18);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-18);

      background: var(--tconnect__neutrals-white);
      border-radius: var(--border-radius);
      box-shadow:
        var(--connect__shadow-level-1) var(--connect__shadow-10),
        var(--connect__shadow-level-2) var(--connect__shadow-20),
        var(--connect__shadow-level-3) var(--connect__shadow-14),
        var(--connect__shadow-level-4) var(--connect__shadow-12);
      content: '';
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      transition-duration: var(--connect__transition-medium);
      transition-property: visibility, opacity, transform, max-height;
      transition-timing-function: var(--connect__ease-out);
      width: 100%;
      z-index: -1;
    }

    &:hover {
      &::before {
        --connect__shadow-level-1: var(--connect__shadow-spread-level-2);
        --connect__shadow-level-2: var(--connect__shadow-spread-level-10);
        --connect__shadow-level-3: var(--connect__shadow-spread-level-11);
        --connect__shadow-level-4: var(--connect__shadow-spread-level-12);
      }
    }

    &:active {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
    }

    &:focus-visible:not(:active) {
      --connect__shadow-10: var(--connect__focus-mid);
      --connect__shadow-20: var(--connect__focus-mid);
      --connect__shadow-level-1: var(--connect__shadow-spread-level-2);
      --connect__shadow-level-2: var(--connect__shadow-spread-level-16);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-2);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-15);
    }
  }
}

.connect__accordion--divider {
  summary {
    & + * {
      position: relative;

      &::before {
        --active-color: var(--connect__selected-mid);
        background: var(--active-color);
        content: '';
        height: var(--border-width);
        left: var(--connect__spacer-md);

        position: absolute;
        top: 0;
        width: calc(100% - var(--connect__spacer-xl));
      }
    }
  }
}

.connect__accordion--color {
  [open] {
    .connect__summary {
      --active-color: var(--connect__selected-mid);
    }
  }
}

/* 
.connect__card Component

Variables related to theme/overrides:
  --connect__card-border-w: Border width of the card.
  --connect__card-border-c: Border color of the card.
  --connect__card-radius: Border radius of the card.
  --connect__card-padding-y: Vertical padding of the card.
  --connect__card-padding-x: Horizontal padding of the card.
  --connect__card-flow: Flex flow direction of the card content.
  --connect__card-gap: Gap between elements inside the card.

Variables related to shadows:
  --connect__shadow-level-1 to --connect__shadow-level-4: Different levels of box shadows.

Variables related to colors:
  --connect__neutrals-white: Neutral white color.

Styles:
  background-color
    - Sets the background color of the card.
  border:
    - Sets the border width and color of the card.
  border-radius:
    - Sets the border radius of the card.
  box-shadow:
    - Applies multiple box shadows to the card.
  box-sizing: border-box;
    - Ensures padding and border are included in the element's total width and height.
 
  flex-flow: var(--connect__card-flow);
    - Sets the flex direction and wrapping of the card content.
  gap: var(--connect__card-gap);
    - Sets the gap between elements inside the card.
  padding: calc(var(--connect__card-padding-y) - var(--connect__card-border-w)) 0;
    - Sets the padding of the card, adjusted for the border width.
*/

.connect__card {
  --connect__card-border-w: var(--theme__chip-border-w, 0rem);
  --connect__card-border-c: var(--connect__neutrals-white, transparent);
  --connect__card-radius: var(--theme__border-radius, var(--border-radius));

  --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-18);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-18);

  --connect__card-padding-y: var(--connect__spacer-sm);
  --connect__card-padding-x: var(--connect__spacer-md);

  --connect__card-flow: var(--theme__card-flow, column wrap);

  --connect__card-gap: var(--theme__card-gap, var(--connect__spacer-sm));

  background-color: var(--connect__neutrals-white);
  border: var(--connect__card-border-w) solid var(--connect__card-border-c, transparent);

  border-radius: var(--border-radius);
  box-shadow:
    var(--connect__shadow-level-1) var(--connect__shadow-10),
    var(--connect__shadow-level-2) var(--connect__shadow-20),
    var(--connect__shadow-level-3) var(--connect__shadow-14),
    var(--connect__shadow-level-4) var(--connect__shadow-12);
  box-sizing: border-box;
  display: inline-flex;
  flex-flow: var(--connect__card-flow);
  gap: var(--connect__card-gap);
  padding: calc(var(--connect__card-padding-y) - var(--connect__card-border-w))
    calc(var(--connect__card-padding-x) - var(--connect__card-border-w));
  width: 100%;

  &.connect__floating-card {
    --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
    --connect__shadow-level-2: var(--connect__shadow-spread-level-10);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-11);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-13);
  }

  .connect__figure,
  .connect__card-header,
  .connect__card-content,
  .connect__card-footer {
    width: 100%;
  }

  header,
  footer {
    display: flex;
  }

  // Comment out container query, until needed

  /* &:has(menu) {
    container-name: cpl-card;
    container-type: inline-size;

    @container cpl-card (max-width: 40.625rem) {
      .connect__card-content {
        --connect__toolbar-width: calc(var(--connect__spacer-lg) * 2);
        display: grid;
        grid-template-columns: var(--connect__toolbar-width) 1fr;
      }

      .connect__toolbar {
        --connect__toolbar-direction: column wrap;
        --connect__toolbar-padding-x: 0;
        align-content: start;
        grid-column: 1;

        .connect__tooltip {
          --connect__tooltip-vertical-left: unset;
          --connect__tooltip-vertical-right: 100%;
          --connect__tooltip-vertical-translateX: var(--connect__spacer-md);
          --connect__tooltip-vertical-translateY: var(--connect__spacer-sm);
        }

        .connect__toolbar-menu {
          --connect__menu-divider-line-h: var(--connect__toolbar-sub-menu-divider-w);

          --connect__menu-divider-line-w: calc(
            100% - var(--connect__menu-divider-line-x-offset) * 2
          );
          --connect__menu-divider-line-x-offset: calc(var(--connect__spacer-xs) * 2);
          --connect__menu-divider-line-y-offset: calc(
            -1 * var(--connect__menu-divider-line-x-offset)
          );
        }

        .connect__toolbar-item-menu {
          --connect__toolbar-item-menu-y-offset: 0;
          --connect__toolbar-item-menu-x-offset: calc(
            var(--connect__toolbar-width) + var(--connect__spacer-sm)
          );

          --connect__toolbar-menu-padding-x: var(--connect__spacer-xs);
          --connect__toolbar-sub-menu-flow: row;
          --connect__toolbar-sub-menu-cols: 2;
        }

        .connect__toolbar-item-menu-item {
          --connect__toolbar-sub-menu-padding-y: 0;

          &:nth-of-type(1) {
            --menu-col-start: 1;
            --connect__toolbar-sub-menu-vertical-divider-left: var(
              --connect__toolbar-sub-menu-padding-x
            );
            --connect__toolbar-sub-menu-vertical-divider-top: unset;
            --connect__toolbar-sub-menu-vertical-divider-bottom: calc(
              -1 * calc(var(--connect__toolbar-row-gap) / 2) - var(--connect__toolbar-sub-menu-divider-h)
            );
            --connect__toolbar-sub-menu-vertical-divider-h: calc(
              100% + calc(var(--connect__spacer-xs) * 2)
            );
            --connect__toolbar-sub-menu-vertical-divider-top: calc(-1 * var(--connect__spacer-xs));
            --connect__toolbar-sub-menu-vertical-divider-left: unset;
            --connect__toolbar-sub-menu-vertical-divider-right: calc(
              -1 * var(--connect__spacer-xs)
            );

            &:has(:nth-child(6)) {
              --connect__toolbar-sub-menu-vertical-divider-w: var(--connect__effects-inner-edge);
            }

            .connect__toolbar-item-menu-item-sub-menu {
              margin-right: var(--connect__toolbar-sub-menu-padding-x);
            }
          }

          &:nth-of-type(2) {
            --menu-col-start: 2;
            .connect__toolbar-item-menu-item-sub-menu {
              margin-left: var(--connect__toolbar-sub-menu-padding-x);
            }
          }

          &:nth-of-type(1),
          &:nth-of-type(2) {
            ul {
              padding-left: 0;
            }
          }

          ul {
            flex-flow: column wrap;
          }
        }

        .connect__toolbar-item-menu-item-sub-menu {
          height: 100%;
        }
      }

      .connect__button {
        --connect__button-justify-content: center;
        --connect__button-w: 100%;
      }
    }
  } */
}

.connect__figure {
  margin: 0;

  img {
    height: 100%;
    object-fit: cover;
    width: 100%;
  }
}

.connect__figcaption {
  font-size: var(--connect__caption);
  margin-top: var(--connect__spacer-sm);
}

.connect__blockquote {
  font-size: var(--connect__body-md);
  margin: var(--connect__spacer-md) 0;
}

.connect__tooltip-wrapper {
  display: inline-block;
  position: relative;

  &:hover {
    .connect__tooltip {
      --connect__tooltip-opacity: 1;
      --connect__tooltip-visibility: visible;
      --connect__tooltip-translateY: var(--connect__tooltip-vertical-translateY-hover, -110%);
      transition-duration: var(--connect__transition-fast);
      transition-property: visibility, opacity, transform;
      transition-timing-function: var(--connect__ease-out);
    }
  }
}

/*
.connect__tooltip Component

Variables related to theme/overrides:
  --connect__tooltip-bg: Background color of the tooltip.
  --connect__tooltip-color: Text color of the tooltip.
  --connect__tooltip-padding-y: Vertical padding inside the tooltip.
  --connect__tooltip-padding-x: Horizontal padding inside the tooltip.
  --shadow-level-1: Shadow level 1 for the tooltip.
  --shadow-level-2: Shadow level 2 for the tooltip.
  --shadow-level-3: Shadow level 3 for the tooltip.
  --shadow-level-4: Shadow level 4 for the tooltip.
  --connect__tooltip-opacity: Opacity of the tooltip.
  --connect__tooltip-visibility: Visibility of the tooltip.
  --connect__tooltip-transition: Transition effect for the tooltip.
  --connect__tooltip-top: Top position of the tooltip.
  --connect__tooltip-right: Right position of the tooltip.
  --connect__tooltip-left: Left position of the tooltip.
  --connect__tooltip-translateX: Horizontal translation of the tooltip.
  --connect__tooltip-translateY: Vertical translation of the tooltip.

Tooltip Styles:
  align-items: center;
    - Aligns items along the cross axis.
  align-content: center;
    - Aligns content along the cross axis.
  border-radius: var(--Text-Inner-Spacing, 0.25rem);
    - Rounds the corners of the tooltip.
  background: var(--connect__tooltip-bg);
    - Sets the background color of the tooltip.
  box-shadow:
    var(--shadow-level-1) var(--connect__shadow-10),
    var(--shadow-level-2) var(--connect__shadow-20),
    var(--shadow-level-3) var(--connect__shadow-14),
    var(--shadow-level-4) var(--connect__shadow-12);
    - Applies multiple box shadows to the tooltip.
  color: var(--connect__tooltip-color);
    - Sets the text color of the tooltip.
  display: inline-block;
    - Displays the tooltip as an inline-block element.
  justify-content: center;
    - Centers the content along the main axis.
  padding: var(--connect__tooltip-padding-y) var(--connect__tooltip-padding-x);
    - Applies padding inside the tooltip.
  position: absolute;
    - Positions the tooltip absolutely.
  top: 0;
    - Sets the top position of the tooltip.
  left: var(--connect__tooltip-left);
    - Sets the left position of the tooltip.
  transform: translate(var(--connect__tooltip-translateX), var(--connect__tooltip-translateY));
    - Translates the tooltip based on the specified values.

Transition Styles:
  transition:
    opacity,
    visibility,
    transform var(--connect__transition-default) var(--connect__tooltip-transition) allow-discrete;
    - Applies transitions to opacity, visibility, and transform properties.
  white-space: nowrap;
    - Prevents the tooltip text from wrapping.
  opacity: var(--connect__tooltip-opacity);
    - Sets the opacity of the tooltip.
  visibility: var(--connect__tooltip-visibility);
    - Sets the visibility of the tooltip.
*/

.connect__tooltip {
  --connect__tooltip-bg: var(--theme__tooltip-bg, var(--connect__neutrals-dark));
  --connect__tooltip-color: var(--theme__tooltip-color, var(--connect__neutrals-white));

  --connect__tooltip-padding-y: var(--theme__tooltip-padding-y, var(--connect__spacer-xs));
  --connect__tooltip-padding-x: var(--theme__tooltip-padding-y, var(--connect__spacer-sm));

  --shadow-level-1: var(--theme__tooltip-shadow-1, var(--connect__shadow-spread-level-1));
  --shadow-level-2: var(--theme__tooltip-shadow-2, var(--connect__shadow-spread-level-7));
  --shadow-level-3: var(--theme__tooltip-shadow-3, var(--connect__shadow-spread-level-8));
  --shadow-level-4: var(--theme__tooltip-shadow-4, var(--connect__shadow-spread-level-9));

  --connect__tooltip-opacity: 0;
  --connect__tooltip-visibility: hidden;

  --connect__tooltip-transition: var(--connect__ease-in-out);

  --connect__tooltip-top: var(--connect__tooltip-vertical-top, unset);
  --connect__tooltip-right: var(--connect__tooltip-vertical-right, unset);

  --connect__tooltip-left: var(--connect__tooltip-vertical-left, 50%);

  --connect__tooltip-translateX: var(--connect__tooltip-vertical-translateX, -50%);
  --connect__tooltip-translateY: var(--connect__tooltip-vertical-translateY, -100%);
  align-content: center;

  align-items: center;
  background: var(--connect__tooltip-bg);
  border-radius: var(--Text-Inner-Spacing, 0.25rem);
  box-shadow:
    var(--shadow-level-1) var(--connect__shadow-10),
    var(--shadow-level-2) var(--connect__shadow-20),
    var(--shadow-level-3) var(--connect__shadow-14),
    var(--shadow-level-4) var(--connect__shadow-12);
  color: var(--connect__tooltip-color);
  display: inline-block;
  font-size: var(--connect__caption);
  justify-content: center;
  left: var(--connect__tooltip-left);
  line-height: var(--connect__caption-lheight);
  opacity: var(--connect__tooltip-opacity);
  padding: var(--connect__tooltip-padding-y) var(--connect__tooltip-padding-x);
  position: absolute;
  top: 0;
  transform: translate(var(--connect__tooltip-translateX), var(--connect__tooltip-translateY));
  transform-origin: bottom;
  transition-duration: var(--connect__transition-fast);
  transition-property: visibility, opacity, transform;
  transition-timing-function: var(--connect__ease-out);
  visibility: var(--connect__tooltip-visibility);
  white-space: nowrap;
}

/*
.connect__breakout Component

This component is used to create a "breakout" effect, extending an element beyond its container.

Variables:
--connect__breakout-b: Bottom position (theme: --theme__breakout-b, default: 0)
--connect__breakout-l: Left position multiplier (theme: --theme__breakout-l, default: -1)
--connect__breakout-r: Right position multiplier (theme: --theme__breakout-r, default: -1)
--connect__breakout-t: Top position (theme: --theme__breakout-t, default: 0)
--connect__breakout-gutter-w: Gutter width (theme: --theme__gutter-width, default: var(--gutter-width))
--connect__breakout-z: Z-index (theme: --theme__connect__breakout-z, default: 0)

Usage:
- Apply this class to an element to make it break out of its container.
- The element will be positioned absolutely and extend beyond its container's boundaries.
- Use the custom properties to adjust the positioning and z-index as needed.
*/
.connect__breakout {
  --connect__breakout-bg-color: var(--theme__breakout-bg-color, initial);
  --connect__breakout-gutter-w: var(--theme__gutter-width, var(--gutter-width));
  background-color: var(--connect__breakout-bg-color);

  &:not(.connect__linear):not(.connect__halftone) {
    &::after {
      content: unset;
    }
  }

  &:not(.connect__figure) {
    &::before,
    &::after {
      content: '';
      pointer-events: none;
      position: absolute;
    }

    &::before {
      background-color: var(--theme__connect-breakout-bg-color-before, initial);
      bottom: var(--theme__connect-breakout-b-before, 0);
      left: calc(
        var(--connect__breakout-gutter-w) *
          var(--theme__connect-breakout-l-before, var(--connect__spacer-md))
      );
      max-width: 100vw;
      right: calc(var(--connect__breakout-gutter-w) * var(--theme__connect-breakout-r-before, 0));
      top: var(--theme__connect-breakout-t-before, 0);
      width: var(
        --theme__connect-breakout-w-before,
        calc(100% + 2 * var(--connect__breakout-gutter-w))
      );
      z-index: var(--theme__connect-breakout-z-before, 0);
    }

    &::after {
      background-color: var(--theme__connect-breakout-bg-color-after, initial);
      bottom: var(--theme__connect-breakout-b-after, 0);
      left: calc(
        var(--connect__breakout-gutter-w) *
          var(--theme__connect-breakout-l-after, var(--connect__spacer__md))
      );
      max-width: 100vw;
      right: calc(var(--connect__breakout-gutter-w) * var(--theme__connect-breakout-r-after, 0));
      top: var(--theme__connect-breakout-t-after, 0);
      width: var(
        --theme__connect-breakout-w-after,
        calc(100% + 2 * var(--connect__breakout-gutter-w))
      );

      z-index: var(--theme__connect-breakout-z-after, 0);
    }

    &.connect__linear {
      z-index: var(--connect__linear-z, var(--connect__breakout-z));
    }

    &.connect__halftone {
      z-index: var(--connect__halftone-z, var(--connect__breakout-z));
    }
  }

  &.connect__figure {
    bottom: var(--connect__breakout-b, 0);
    grid-column: unset;
    left: calc(var(--connect__breakout-gutter-w) * var(--connect__breakout-l, -1));
    margin-top: 0;
    position: absolute;
    right: calc(var(--connect__breakout-gutter-w) * var(--connect__breakout-r, -1));
    top: var(--connect__breakout-t);
    z-index: var(--connect__breakout-z, 1);
  }
}

/*
.connect__header Component

Variables and Theme Options:

1. Padding:
   --connect__header-padding-t: Top padding (theme: --theme__header-padding-t, default: 0)
   --connect__header-padding-r: Right padding (theme: --theme__header-padding-r, default: 0)
   --connect__header-padding-l: Left padding (theme: --theme__header-padding-l, default: 0)
   --connect__header-padding-b: Bottom padding (theme: --theme__header-padding-b, default: var(--connect__spacer-sm))

2. Margin:
   --connect__header-margin-t: Top margin (theme: --theme__header-margin-t, default: 0)
   --connect__header-margin-r: Right margin (theme: --theme__header-margin-r, default: 0)
   --connect__header-margin-b: Bottom margin (theme: --theme__header-margin-b, default: 0)
   --connect__header-margin-l: Left margin (theme: --theme__header-margin-l, default: 0)

3. Borders:
   --connect__header-border-w: Border width (theme: --theme__connect-header-border-w, default: 0)
   --connect__header-border-c: Border color (theme: --theme__connect-header-border-c, default: var(--connect__neutrals-null))
   --connect__header-border-r: Border radius (theme: --theme__connect-header-border-r, default: 0)

4. Background:
   --connect__header-bg-color: Background color (theme: --theme__header-bg-color, default: var(--connect__connect-gray-c5))
   --connect__header-bg-image: Background image (theme: --theme__header-bg-image, default: none)
   --connect__header-bg-size: Background size (theme: --theme__header-bg-size, default: cover)
   --connect__header-bg-repeat: Background repeat (theme: --theme__header-bg-repeat, default: no-repeat)

5. Breakout Section (::before pseudo-element):
   --connect__header-breakout-bg: Breakout background color (theme: --theme__header-breakout-bg, default: var(--connect__neutrals-null))
   --connect__header-breakout-l: Left offset (theme: --theme__header-breakout-l, default: -1)
   --connect__header-breakout-w: Width (theme: --theme__header-breakout-w, default: 2)
   --connect__header-breakout-h: Height (theme: --theme__header-breakout-h, default: 100%)

6. After Section (::after pseudo-element):
   --connect__header-breakout-z-after: Z-index (theme: --theme__header-breakout-z-after, default: 1)
   --connect__header-breakout-t-after: Top offset (theme: --theme__header-breakout-t-after, default: 0)
   --connect__header-breakout-r-after: Right offset (theme: --theme__header-breakout-r-after, default: 0)
   --connect__header-breakout-b-after: Bottom offset (theme: --theme__header-breakout-b-after, default: 0)
   --connect__header-breakout-l-after: Left offset (theme: --theme__header-breakout-l-after, default: -1)
   --connect__header-breakout-w-after: Width (theme: --theme__header-breakout-w-after, default: 2)
   --connect__header-breakout-h-after: Height (theme: --theme__header-breakout-h-after, default: 100%)
   --connect__header-content: Content (default: '')

7. Linear Gradient (when .connect__linear class is applied):
   --connect__header-breakout-gradient-direction: Gradient direction (theme: --theme__header-breakout-gradient-direction, default: to right)
   --connect__header-breakout-gradient-color-one: First gradient color (theme: --theme__header-breakout-gradient-color-one, default: var(--connect__neutrals-null))
   --connect__header-breakout-gradient-color-two: Second gradient color (theme: --theme__header-breakout-gradient-color-two, default: var(--connect__neutrals-null))

8. Halftone (when .connect__halftone class is applied):
   --connect__header-halftone-bg: Halftone background color (theme: --theme__header-halftone-bg, default: var(--connect__neutrals-null))
   --connect__header-halftone-dot-color: Halftone dot color (theme: --theme__header-halftone-dot-color, default: var(--connect__neutrals-white))
   --connect__header-halftone-dot-size: Halftone dot size (theme: --theme__header-halftone-dot-size, default: 2px)
   --connect__header-halftone-dot-space: Halftone dot spacing (theme: --theme__header-halftone-dot-space, default: 22px)

Usage:
- The header uses flexbox for layout unless the grid class is added in the HTML.
- It has a relative positioning to allow for absolute positioning of pseudo-elements.
- The ::before pseudo-element creates a breakout section that extends beyond the header's.
- The ::after pseudo-element can be used for additional styling or content.
- When the .connect__linear class is applied, a linear gradient background is added to the breakout section.
- When the .connect__halftone class is applied, a halftone pattern is applied to the breakout section.
*/

.connect__header {
  --connect__header-padding-t: var(--theme__connect-header-padding-t, 0);
  --connect__header-padding-r: var(--theme__connect-header-padding-r, 0);
  --connect__header-padding-l: var(--theme__connect-header-padding-l, 0);
  --connect__header-padding-b: var(--theme__connect-header-padding-b, var(--connect__spacer-sm));

  --connect__header-margin-t: var(--theme__connect-header-margin-t, 0);

  // Single border width for all sides
  --connect__header-border-w: var(--theme__connect-header-border-w, 0rem);

  // Individual border widths
  --connect__header-border-w-t: var(
    --theme__connect-header-border-w-t,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-r: var(
    --theme__connect-header-border-w-r,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-b: var(
    --theme__connect-header-border-w-b,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-l: var(
    --theme__connect-header-border-w-l,
    var(--connect__header-border-w)
  );

  --connect__header-border-c: var(--theme__connect-header-border-c, var(--connect__neutrals-null));

  // Single border radius for all corners
  --connect__header-border-r: var(--theme__connect-header-border-r, 0);

  // Individual corner border radii
  --connect__header-border-r-tl: var(
    --theme__connect-header-border-r-tl,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-tr: var(
    --theme__connect-header-border-r-tr,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-br: var(
    --theme__connect-header-border-r-br,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-bl: var(
    --theme__connect-header-border-r-bl,
    var(--connect__header-border-r)
  );

  --connect__header-bg-color: var(--theme__connect-header-bg-color, var(--connect__neutrals-pale));
  --connect__header-bg-image: var(--theme__connect-header-bg-image, none);
  --connect__header-bg-size: var(--theme__connect-header-bg-size, cover);
  --connect__header-bg-repeat: var(--theme__connect-header-bg-repeat, no-repeat);

  background-color: var(--connect__header-bg-color);
  background-image: var(--connect__header-bg-image);
  background-repeat: var(--connect__header-bg-repeat);
  background-size: var(--connect__header-bg-size);
  border-color: var(--connect__header-border-c);
  border-radius: var(--connect__header-border-r-tl) var(--connect__header-border-r-tr)
    var(--connect__header-border-r-br) var(--connect__header-border-r-bl);
  border-style: solid;
  border-width: var(--connect__header-border-w-t) var(--connect__header-border-w-r)
    var(--connect__header-border-w-b) var(--connect__header-border-w-l);
  display: flex;

  margin-top: var(--connect__header-margin-t);

  padding: var(--connect__header-padding-t) var(--connect__header-padding-r)
    var(--connect__header-padding-b) var(--connect__header-padding-l);
  position: relative;

  > * {
    z-index: 1;
  }

  &::before,
  &::after {
    position: absolute;
    z-index: -1;
  }

  // Breakout section (pseudo-element)
  &::before {
    // Breakout section background variables
    --connect__header-breakout-bg: var(
      --theme__connect-header-breakout-bg,
      var(--connect__neutrals-null)
    );

    // Breakout section dimension variables
    --connect__header-breakout-l: var(--theme__connect-header-breakout-l, -1);
    --connect__header-breakout-w: var(--theme__connect-header-breakout-w, 2);
    --connect__header-breakout-w-multi: var(
      --theme__connect-header-breakout-w-multi,
      var(--gutter-width)
    );

    --connect__header-breakout-h: var(--theme__connect-header-breakout-h, 100%);

    // Single border radius for all corners
    --connect__header-border-r-before: var(
      --theme__connect-header-border-r-before,
      var(--connect__header-border-r, 0)
    );

    // Individual corner border radii
    --connect__header-border-r-tl-before: var(
      --theme__connect-header-border-r-tl-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-tr-before: var(
      --theme__connect-header-border-r-tr-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-br-before: var(
      --theme__connect-header-border-r-br-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-bl-before: var(
      --theme__connect-header-border-r-bl-before,
      var(--connect__header-border-r-before)
    );

    // Apply border radius
    // border-radius: var(--connect__header-border-r-tl-before)
    //   var(--connect__header-border-r-tr-before) var(--connect__header-border-r-br-before) var(--connect__header-border-r-bl-before);

    background-color: var(--connect__header-breakout-bg);
    content: '';
    height: var(--connect__header-breakout-h);
    left: calc(var(--connect__header-breakout-l) * var(--gutter-width));
    top: 0;
    width: calc(100% + var(--connect__header-breakout-w) * var(--connect__header-breakout-w-multi));
  }

  &:not(.connect__breakout):not(.connect__linear):not(.connect__halftone) {
    &::before,
    &::after {
      // Breakout section background variables
      --connect__header-breakout-bg: var(
        --theme__connect-header-breakout-bg,
        var(--connect__neutrals-null)
      );

      // Breakout section dimension variables
      --connect__header-breakout-l: var(--theme__connect-header-breakout-l, -1);
      --connect__header-breakout-w: var(--theme__connect-header-breakout-w, 2);
      --connect__header-breakout-w-multi: var(
        --theme__connect-header-breakout-w-multi,
        var(--gutter-width)
      );

      --connect__header-breakout-h: var(--theme__connect-header-breakout-h, 100%);

      // Single border radius for all corners
      --connect__header-border-r-before: var(
        --theme__connect-header-border-r-before,
        var(--connect__header-border-r, 0)
      );

      // Individual corner border radii
      --connect__header-border-r-tl-before: var(
        --theme__connect-header-border-r-tl-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-tr-before: var(
        --theme__connect-header-border-r-tr-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-br-before: var(
        --theme__connect-header-border-r-br-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-bl-before: var(
        --theme__connect-header-border-r-bl-before,
        var(--connect__header-border-r-before)
      );

      // Apply border radius
      // border-radius: var(--connect__header-border-r-tl-before)
      //   var(--connect__header-border-r-tr-before) var(--connect__header-border-r-br-before) var(--connect__header-border-r-bl-before);

      background-color: var(--connect__header-breakout-bg);
      content: '';
      height: var(--connect__header-breakout-h);
      left: calc(var(--connect__header-breakout-l) * var(--gutter-width));
      top: 0;
      width: calc(
        100% + var(--connect__header-breakout-w) * var(--connect__header-breakout-w-multi)
      );
    }
  }

  &:not(.connect__halftone) {
    &::after {
      content: unset;
    }
  }

  &.connect__linear,
  &.connect__halftone,
  &.connect__breakout {
    position: relative;
  }
}

/*
.connect__linear Component

This component applies a linear gradient background to an element.

Variables:
--connect__linear-blend-mode: Blend mode for the gradient (theme: --theme__linear-blend-mode, default: normal)
--connect__linear-direction: Direction of the gradient (theme: --theme__linear-direction, default: to right)
--connect__linear-color-one: Start color of the gradient (theme: --theme__linear-color-one, default: var(--connect__neutrals-null))
--connect__linear-color-two: End color of the gradient (theme: --theme__linear-color-two, default: var(--connect__neutrals-null))

Usage:
- Apply this class to an element to give it a linear gradient background.
- The gradient is applied using a pseudo-element (::before) to allow for blend mode effects.
- Customize the gradient by adjusting the custom properties.
*/
.connect__linear {
  --connect__linear-blend-mode: var(--theme__linear-blend-mode, normal);
  --connect__linear-direction: var(--theme__linear-direction, to right);
  --connect__linear-color-one: var(--theme__linear-color-one, var(--connect__neutrals-null));
  --connect__linear-color-two: var(--theme__linear-color-two, var(--connect__neutrals-null));
  --connect__linear-z: var(--theme--connect__linear-z, initial);

  &::before {
    background-image: linear-gradient(
      var(--connect__linear-direction),
      var(--connect__linear-color-one),
      var(--connect__linear-color-two)
    );
    content: '';
    inset: 0;
    mix-blend-mode: var(--connect__linear-blend-mode);
    position: absolute;
  }

  &.connect__breakout {
    &::after {
      content: '';
      position: absolute;
    }
  }
}

/*
.connect__halftone Component

This component applies a halftone pattern effect to an element using radial gradients.

Variables:
--connect__halftone-solid-bg: Solid background color (theme: --theme__halftone-solid-bg, default: var(--connect__neutrals-null))
--connect__halftone-blend-mode: Blend mode for the halftone effect (theme: --theme__radial-blend-mode, default: normal)
--radial-color: Color of the halftone dots (theme: --theme__radial-color)
--radial-size: Size of the halftone dots (theme: --theme__radial-size, default: 0.25rem)
--radial-bg-size: Size of the background pattern (theme: --theme__radial-bg-size, default: 0.5rem)

Usage:
- Apply this class to an element to give it a halftone pattern effect.
- The halftone pattern is applied using a pseudo-element (::after) to allow for blend mode effects.
- Customize the halftone effect by adjusting the custom properties.
*/
.connect__halftone {
  --connect__halftone-solid-bg: var(--theme__halftone-solid-bg, var(--connect__neutrals-null));
  --connect__halftone-blend-mode: var(--theme__radial-blend-mode, normal);
  --radial-color: var(--theme__radial-color);
  --radial-size: var(--theme__radial-size, 0.25rem);
  --radial-bg-size: var(--theme__radial-bg-size, 0.5rem);
  --connect__halftone-z: var(--theme__connect-halftone-z, initial);

  &::after {
    background-color: var(--connect__halftone-solid-bg);

    background-image: radial-gradient(var(--radial-color) 33%, transparent 33%),
      radial-gradient(var(--radial-color) 33%, transparent 33%);
    background-position:
      0 0,
      var(--radial-size) var(--radial-size),
      0 0;
    background-size:
      var(--radial-bg-size) var(--radial-bg-size),
      var(--radial-bg-size) var(--radial-bg-size),
      100% 100%;
    content: '';
    inset: 0;
    mix-blend-mode: var(--connect__halftone-blend-mode);
    position: absolute;
  }
}

/*
.connect__footer Component

This component creates a footer with a breakout section that extends beyond its boundaries.

Variables:
1. Background:
   --connect__footer-breakout-bg: Breakout background color (theme: --theme__footer-breakout-bg, default: var(--connect__neutrals-mid))

2. Positioning:
   --connect__footer-position: Footer position (theme: --theme__footer-position, default: relative)
   --connect__footer-position-t: Top position (theme: --theme__footer-position, default: 0)

3. Dimensions:
   --connect__footer-h: Footer height (theme: --theme__footer-h, default: var(--connect__spacer-sm))
   --connect__footer-w: Footer width (theme: --theme__footer-w, default: 100vw)

4. Breakout Section:
   --connect__footer-breakout-l: Left offset for breakout (theme: --theme__header-breakout-l, default: -1)
   --connect__footer-breakout-w: Width multiplier for breakout (theme: --theme__header-breakout-w, default: 2)

5. Padding:
   --connect__footer-padding-t: Top padding (theme: --theme__footer-padding-t, default: 0)
   --connect__footer-padding-r: Right padding (theme: --theme__footer-padding-r, default: 0)
   --connect__footer-padding-l: Left padding (theme: --theme__footer-padding-l, default: 0)
   --connect__footer-padding-b: Bottom padding (theme: --theme__footer-padding-b, default: var(--connect__spacer-sm))

6. Margin:
   --connect__footer-margin-t: Top margin (theme: --theme__footer-margin-t, default: 0)

Usage:
- Apply this class to create a footer element with a breakout section.
- The footer has a white background and uses the specified top margin.
- Padding is applied using individual padding variables.
- The footer's position is controlled by --connect__footer-position.
- Width is set to 100% of its container.

Breakout Section:
- Created using the ::after pseudo-element.
- Extends beyond the footer's boundaries.
- Uses the specified background color (--connect__footer-breakout-bg).
- Height is determined by --connect__footer-h.
- Positioned absolutely with top offset of --connect__footer-position-t.
- Width extends beyond the footer using the breakout variables.
*/
.connect__footer {
  --connect__footer-breakout-bg: var(--theme__footer-breakout-bg, var(--connect__neutrals-mid));

  --connect__footer-position: var(--theme__footer-position, relative);
  --connect__footer-position-t: var(--theme__footer-position, 0);
  --connect__footer-h: var(--theme__footer-h, var(--connect__spacer-sm));
  --connect__footer-w: var(--theme__footer-w, 100vw);

  --connect__footer-breakout-l: var(--theme__header-breakout-l, -1);
  --connect__footer-breakout-w: var(--theme__header-breakout-w, 2);

  // Padding variables
  --connect__footer-padding-t: var(--theme__footer-padding-t, 0);
  --connect__footer-padding-r: var(--theme__footer-padding-r, 0);
  --connect__footer-padding-l: var(--theme__footer-padding-l, 0);
  --connect__footer-padding-b: var(--theme__footer-padding-b, var(--connect__spacer-sm));
  --connect__footer-margin-t: var(--theme__footer-margin-t, 0);

  background-color: var(--connect__neutrals-white);
  margin-top: var(--connect__footer-margin-t);
  padding: var(--connect__footer-padding-t) var(--connect__footer-padding-r)
    var(--connect__footer-padding-b) var(--connect__footer-padding-l);
  position: var(--connect__footer-position);
  width: 100%;

  &::after {
    background-color: var(--connect__footer-breakout-bg);

    content: '';
    height: var(--connect__footer-h);
    left: calc(var(--connect__footer-breakout-l) * var(--gutter-width));
    position: absolute;
    top: var(--connect__footer-position-t);
    width: calc(100% + var(--connect__footer-breakout-w) * var(--gutter-width));
  }
}

/*
.connect__grid Component

Variables related to theme/overrides:
  --default-grid-gap: Default gap between grid items.
  --connect__spacer-xl: Extra large spacer.
  --gutter-width: Width of the gutter.
  --grid-rows: Number of rows in the grid (default: auto-fill).

Grid Container Styles:
    align-content: start;
      - Aligns the content to the start of the grid container.
    gap: var(--default-grid-gap);
      - Sets the gap between grid items.

    &.connect__grid-gutter
      padding: calc(var(--connect__spacer-xl) * 2) var(--gutter-width);
        - Adds padding to the grid container with gutter class.

Grid Item Styles:
    grid-column: var(--start-col, 1) / span var(--span-col, 12);
      - Defines the starting column and span for the grid item, if no custom value passed, starts 1 ends 12.
    grid-row: var(--start-row, auto) / span var(--span-row, 1);
      - Defines the starting row and span for the grid item.

Responsive Styles:
Columns and row spanning can be changed at each BP;

example: 
    grid-column: var(--sm-start-col) / span var(--sm-span-col);
    grid-row: var(--sm-start-row, auto) / span var(--sm-span-row, 1);

    grid-column: var(--md-start-col) / span var(--md-span-col);
    grid-row: var(--md-start-row, auto) / span var(--md-span-row, 1);

    grid-column: var(--lg-start-col) / span var(--lg-span-col);
    grid-row: var(--lg-start-row, auto) / span var(--lg-span-row, 1);

    grid-column: var(--xl-start-col) / span var(--xl-span-col);
    grid-row: var(--xl-start-row, auto) / span var(--xl-span-row, 1);
*/

.connect__grid {
  --default-grid-gap: var(--connect__spacer-xl);
  --grid-cols: var(--theme-col-amount, 12);
  align-content: start;
  display: grid;
  gap: var(--theme__content-gap, var(--default-grid-gap));
  grid-auto-rows: auto;
  grid-template-columns: repeat(var(--grid-cols), 1fr);
  grid-template-rows: max-content;
  position: relative;
  width: var(--theme__connect-grid-width, 100%);
  // Apply margin to all direct children except .connect__grid and section
  > *:not(.connect__grid):not(section):not(.connect__breakout) {
    @media (min-width: 40.625rem) {
      margin-left: var(--connect__spacer-md);
      margin-right: var(--connect__spacer-md);
    }
  }

  &.connect__grid-gutter {
    --connect__gutter-padding-y: var(
      --theme__connect-gutter-padding-y,
      calc(var(--connect__spacer-xl) * 2)
    );
    --connect__gutter-padding-x: var(--theme__connect-gutter-padding-x, var(--gutter-width));
    padding: var(--connect__gutter-padding-y) var(--connect__gutter-padding-x);
  }

  // Make nested .connect__grid elements use subgrid
  .connect__grid {
    display: grid;
    grid-column: 1 / -1;
    grid-template-columns: subgrid;
  }
}

.connect__grid-item {
  grid-column: var(--start-col, 1) / span var(--span-col, 12);
  grid-row: var(--xs-row-start, auto) / span var(--xs-row-span, 1);
}

@media (min-width: 30rem) {
  .connect__sm {
    grid-column: var(--sm-start-col) / span var(--sm-span-col);
    grid-row: var(--sm-row-span, auto);
  }
}

@media (min-width: 40.625rem) {
  .connect__md {
    grid-column: var(--md-start-col) / span var(--md-span-col);
    grid-row: var(--md-row-span, auto);
  }
}

@media (min-width: 55rem) {
  .connect__lg {
    grid-column: var(--lg-start-col) / span var(--lg-span-col);
    grid-row: var(--lg-row-span, auto);
  }
}

@media (min-width: 80rem) {
  .connect__xl {
    grid-column: var(--xl-start-col) / span var(--xl-span-col);
    grid-row: var(--xl-row-span, auto);
  }
}

/* 
.connect__stack Component

Variables related to theme/overrides:
  --connect__stack-spacing: Spacing between elements in the stack.
  --connect__stack-direction: Flex direction of the stack.
  --connect__stack-align: Alignment of items in the stack.
  --connect__stack-wrap: Flex wrap property of the stack.
  --connect__justify-content: Justification of content in the stack.
  --connect__paddingX: Horizontal padding of the stack.
  --connect__paddingY: Vertical padding of the stack.

Stack Container Styles:
  .connect__stack {
    align-items: var(--xs-alignItems, start);
      - Aligns items along the cross axis.
    flex-flow: var(--connect__stack-direction, column);
      - Sets the flex direction and wrapping of the stack content.
    flex-wrap: var(--connect__stack-wrap, wrap);
      - Sets the flex wrap property.
    gap: var(--connect__stack-spacing, var(--connect__spacer-sm));
      - Sets the gap between elements inside the stack.
    justify-content: var(--connect__justify-content, start);
      - Sets the justification of content along the main axis.
    padding: var(--connect__paddingY, 0) var(--connect__paddingX, 0);
      - Sets the padding of the stack.


Responsive Styles: To make these responsive, apply sm/md/lg/xl
  --connect__stack-spacing
  --connect__stack-direction
  --connect__stack-align
  --connect__stack-wrap
  --connect__justify-content
  --connect__paddingX
  --connect__paddingY

  examples: 
  --connect__stack-align: var(--sm-alignItems);
  --connect__stack-align: var(--md-alignItems);
  --connect__stack-align: var(--lg-alignItems);
  --connect__stack-align: var(--xl-alignItems);
*/
.connect__stack {
  --default__stack-paddingX: 0;
  --default__stack-paddingY: 0;
  --connect__stack-spacing: var(--xs-spacing);
  --connect__stack-direction: var(--xs-direction);
  --connect__stack-align: var(--xs-alignItems);
  --connect__stack-wrap: var(--xs-flexWrap);
  --connect__justify-content: var(--xs-justifyContent);
  --connect__paddingX: var(--default__stack-padding);
  --connect__paddingY: var(--default__stack-padding);

  align-items: var(--xs-alignItems, start);
  display: flex;
  flex: 1;
  flex-flow: var(--connect__stack-direction, column);
  flex-wrap: var(--connect__stack-wrap, wrap);
  gap: var(--connect__stack-spacing, var(--connect__spacer-sm));
  justify-content: var(--connect__justify-content, start);
  padding: var(--connect__paddingY, 0) var(--connect__paddingX, 0);
  width: 100%;

  &.connect__stack-xs {
    --connect__paddingX: var(--xs-paddingX, 0);
    --connect__paddingY: var(--xs-paddingY, 0);
  }

  @media (min-width: 30rem) {
    &.connect__stack-sm {
      --connect__stack-spacing: var(--sm-spacing);
      --connect__stack-direction: var(--sm-direction);
      --connect__stack-align: var(--sm-alignItems);
      --connect__stack-wrap: var(--sm-flexWrap);
      --connect__justify-content: var(--sm-justifyContent);
      --connect__paddingX: var(--sm-paddingX, 0);
      --connect__paddingY: var(--sm-paddingY, 0);
    }
  }

  @media (min-width: 40.625rem) {
    &.connect__stack-md {
      --connect__stack-spacing: var(--md-spacing);
      --connect__stack-direction: var(--md-direction);
      --connect__stack-align: var(--md-alignItems);
      --connect__stack-wrap: var(--md-flexWrap);
      --connect__justify-content: var(--md-justifyContent);
      --connect__paddingX: var(--md-paddingX, 0);
      --connect__paddingY: var(--md-paddingY, 0);
    }
  }

  @media (min-width: 55rem) {
    &.connect__stack-lg {
      --connect__stack-spacing: var(--lg-spacing);
      --connect__stack-direction: var(--lg-direction);
      --connect__stack-align: var(--lg-alignItems);
      --connect__stack-wrap: var(--lg-flexWrap);
      --connect__justify-content: var(--lg-justifyContent);
      --connect__paddingX: var(--lg-paddingX, 0);
      --connect__paddingY: var(--lg-paddingY, 0);
    }
  }

  @media (min-width: 80rem) {
    &.connect__stack-xl {
      --connect__stack-spacing: var(--xl-spacing);
      --connect__stack-direction: var(--xl-direction);
      --connect__stack-align: var(--xl-alignItems);
      --connect__stack-wrap: var(--xl-flexWrap);
      --connect__justify-content: var(--xl-justifyContent);
      --connect__paddingX: var(--lg-paddingX, 0);
      --connect__paddingY: var(--lg-paddingY, 0);
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin: 0;
    padding: 0;
  }
}

.connect__chip {
  --connect__chip-fs: var(--theme__chip-fs, var(--connect__caption));
  --connect__chip-lh: var(--theme__chip-lh, var(--connect__caption-lheight));
  --connect__chip-border-w: var(--theme__chip-border-w, 0rem);
  --connect__chip-border-c: var(--connect__neutrals-white, transparent);
  --connect__chip-radius: var(--theme__border-radius, var(--border-radius));

  --connect__chip-color: var(--active-color, var(--connect__neutrals-dark));
  --connect__chip-bg: var(--theme__chip-bg, var(--connect__neutrals-white));

  --connect__chip-padding-y: var(--connect__spacer-xs);
  --connect__chip-padding-x: var(--connect__spacer-md);

  --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-4);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-18);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-18);

  background-color: var(--connect__chip-bg);

  border: var(--connect__chip-border-w) solid var(--connect__chip-border-c, transparent);
  border-radius: var(--connect__chip-radius, 0);
  box-shadow:
    var(--connect__shadow-level-1) var(--connect__shadow-10),
    var(--connect__shadow-level-2) var(--connect__shadow-20),
    var(--connect__shadow-level-3) var(--connect__shadow-14),
    var(--connect__shadow-level-4) var(--connect__shadow-12);
  color: var(--theme__button-color, var(--connect__chip-color));
  font-family: var(--connect__font-sans);
  font-size: var(--connect__chip-fs);

  line-height: var(--connect__chip-lh);
  padding: calc(var(--connect__chip-padding-y) - var(--connect__chip-border-w))
    calc(var(--connect__chip-padding-x) - var(--connect__chip-border-w));

  width: var(--connect__chip-w, fit-content);
}

/* Connect pill Component

Variables related to theme/overrides:
  --theme__pill-bg: Custom background color for the pill.
  --theme__pill-color: Custom text color for the pill.
  --theme__pill-py: Custom vertical padding for the pill.
  --theme__pill-pl: Custom left padding for the pill.
  --theme__pill-pr: Custom right padding for the pill.
  --theme__connect-pill-fs: Custom font size for the pill text.
  --theme__connect-pill-lh: Custom line height for the pill text.
  --theme__connect-pill-fw: Custom font weight for the pill text.
  --theme__connect-pill-ff: Custom font family for the pill text.

Variables related to default styles:
  --connect__default-pill-bg: Default background color for the pill.
  --connect__default-pill-color: Default text color for the pill.
  --connect__pill-bg: Final background color (theme override or default).
  --connect__pill-color: Final text color (theme override or default).

Variables related to border radius:
  --connect__pill-br-tl: Top-left border radius.
  --connect__pill-br-tr: Top-right border radius.
  --connect__pill-br-br: Bottom-right border radius.
  --connect__pill-br-bl: Bottom-left border radius.
  --connect__heading-lg-lheight: Used as a fallback for border radius values.

Variables related to padding:
  --connect__pill-py: Vertical padding (top and bottom).
  --connect__pill-pl: Left padding.
  --connect__pill-pr: Right padding.
  --connect__spacer-xs: Used as a fallback for vertical padding.
  --connect__spacer-md: Used as a fallback for left padding.
  --connect__spacer-lg: Used as a fallback for right padding.

Variables related to typography:
  --connect__pill-fs: Font size.
  --connect__pill-lh: Line height.
  --connect__pill-fw: Font weight.
  --connect__pill-ff: Font family.
  --connect__body-sm: Used as a fallback for font size.
  --connect__body-sm-lheight: Used as a fallback for line height.
  --connect__font-sans: Used as a fallback for font family.

Usage:
- The pill uses flexbox for layout with centered content.
- It has customisable palette, spacing, and typography.
- The border radius can be adjusted to create various shapes, from rectangular to fully rounded.
- All style properties can be overridden using theme variables
*/
.connect__pill {
  // palette
  --connect__default-pill-bg: var(--connect__cc-purple, var(--connect__purple-s50));
  --connect__default-pill-color: var(--connect__neutrals-white);
  --connect__pill-bg: var(--theme__pill-bg, var(--connect__default-pill-bg));
  --connect__pill-color: var(--theme__pill-color, var(--connect__default-pill-color));

  // border radius
  --connect__pill-br-tl: 0rem;
  --connect__pill-br-tr: var(--connect__heading-lg-lheight, 5rem);
  --connect__pill-br-br: var(--connect__heading-lg-lheight, 5rem);
  --connect__pill-br-bl: 0rem;

  // padding
  --connect__pill-py: var(--theme__pill-py, var(--connect__spacer-xs));
  --connect__pill-pl: var(--theme__pill-pl, var(--connect__spacer-md));
  --connect__pill-pr: var(--theme__pill-pr, var(--connect__spacer-lg));

  // typography
  --connect__pill-fs: var(--theme__connect-pill-fs, var(--connect__body-sm));
  --connect__pill-lh: var(--theme__connect-pill-lh, var(--connect__body-sm-lheight));
  --connect__pill-fw: var(--theme__connect-pill-fw, 700);
  --connect__pill-ff: var(--theme__connect-pill-ff, var(--connect__font-sans));

  align-items: center;
  background-color: var(--connect__pill-bg);
  border-radius: var(--connect__pill-br-tl) var(--connect__pill-br-tr) var(--connect__pill-br-br)
    var(--connect__pill-br-bl);
  color: var(--connect__pill-color);
  display: inline-flex;
  font-family: var(--connect__pill-ff);
  font-size: var(--connect__pill-fs);
  font-weight: var(--connect__pill-fw);
  justify-content: center;
  line-height: var(--connect__pill-lh);
  padding: var(--connect__pill-py) var(--connect__pill-pr) var(--connect__pill-py)
    var(--connect__pill-pl);
}

.connect__icon-wrapper {
  --translateX: calc(var(--connect__icon-size, var(--connect__icon-md)) / -3);
  --translateY: calc(var(--connect__icon-size, var(--connect__icon-md)) / 3);
  display: inline-flex;
  flex: 1;
  position: relative;
  width: 100%;

  &::after {
    background-image: var(--state-icon);
    background-repeat: repeat;
    background-size: contain;
    content: '';
    height: var(--connect__icon-size, var(--connect__icon-md));
    position: absolute;
    right: 0;
    top: 0;
    transform: translate(var(--translateY), var(--translateX));
    width: var(--connect__icon-size, var(--connect__icon-md));
  }

  &.connect__input-correct {
    --state-icon: var(--icon-correct);
  }

  &.connect__input-incorrect {
    --state-icon: var(--icon-incorrect);
  }

  &.connect__input-shown {
    --state-icon: var(--icon-shown);
  }

  > .connect__select-correct {
    --state-icon: var(--icon-correct);
  }

  > .connect__select-incorrect {
    --state-icon: var(--icon-incorrect);
  }

  > .connect__select-shown {
    --state-icon: var(--icon-shown);
  }
}

.connect__icon {
  --icon-fill: var(--connect__icon-fill-color, #2d2d2d);
  --icon-stroke: var(--connect__icon-stroke-color, var(--connect__icon-default-stroke-color));
  color: var(--icon-fill);
  height: var(--connect__icon-size);
  width: var(--connect__icon-size);

  svg {
    fill: var(--icon-fill);
    stroke: var(--icon-stroke, transparent);
  }

  &-xs {
    --connect__icon-size: var(--connect__icon-xs);
  }

  &-sm {
    --connect__icon-size: var(--connect__icon-sm);
  }

  &-md {
    --connect__icon-size: var(--connect__icon-md);
  }

  &-lg {
    --connect__icon-size: var(--connect__icon-lg);
  }

  &-xl {
    --connect__icon-size: var(--connect__icon-xl);
  }

  &-xxl {
    --connect__icon-size: var(--connect__icon-xxl);
  }
}

.connect__mcq-label-wrapper {
  position: relative;

  &:has(.connect__mcq-text) {
    --connect__icon-size: var(--connect__icon-xl);
  }
}

.connect__mcq-label {
  // typography
  --connect__label-fs: var(--connect__body-sm, 1.25rem);
  --connect__label-lh: var(--connect__body-sm-lheight, 1.5);
  --connect__label-font-w: 400;
  --connect__label-text-transform: capitalize;

  // borders / radius
  --connect__label-border-w: 0rem;
  --connect__label-border-c: var(--connect__neutrals-white, transparent);
  --connect__label-radius: var(--border-radius);

  // shadows
  --connect__shadow_inner-null: 0rem 0rem 0rem;
  --inner-shadow: var(--connect__shadow_inner-null) var(--connect__effects-inner-edge)
    var(--inner-shadow-color, transparent) inset;
  --inner-shadow-color: var(--connect__neutrals-white);
  --starting-shadow-color: var(--connect__neutrals-white);
  --connect__shadow-level-1: var(--connect__shadow-spread-level-2);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-7);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-8);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-9);

  //radius
  --connect__mcq-radius: var(
    --them__mcq-radius,
    var(--variant__mcq-radius, var(--connect__inner-radius))
  );

  // palette
  --connect__label-color: var(--active-color, var(--connect__neutrals-dark));

  // spacings
  --connect__label-gap: var(--connect__spacer-md);
  --connect__label-shadow-dimension: calc(
    var(--connect__inner-status) + var(--connect__effects-inner-edge)
  );
  --connect__label-padding-y: calc(
    var(--connect__label-shadow-dimension) + var(--connect__spacer-xs) - var(
        --connect__label-border-w
      )
  );
  --connect__label-padding-x: calc(
    var(--connect__label-shadow-dimension) + var(--connect__spacer-sm) - var(
        --connect__label-border-w
      )
  );
  --connect__label-justify-content: var(--connect__card-justify, start);
  --connect__label-flow: var(--connect__card-flow, row);
  --connect__label-w: 100%;

  // inputs
  --connect__input-dimensions: var(--connect__caption-lheight);
  --connect__input-border-w: 0.125rem;

  align-items: center;
  background-color: var(--theme__mcq-bg, var(--connect__neutrals-white));

  border: var(--connect__label-border-w) solid var(--connect__label-border-c, transparent);
  border-radius: var(--connect__label-radius, 0);

  box-shadow:
    var(--inner-shadow),
    var(--connect__shadow_inner-null) var(--connect__inner-status)
      var(--connect__mcq-starting-shadow-color, var(--starting-shadow-color)) inset,
    var(--connect__shadow_inner-null) var(--connect__effects-inner-edge)
      var(--state-based-bg, var(--connect__neutrals-white)) inset,
    var(--connect__shadow-level-1) var(--connect__shadow-10),
    var(--connect__shadow-level-2) var(--connect__shadow-20),
    var(--connect__shadow-level-3) var(--connect__shadow-14),
    var(--connect__shadow-level-4) var(--connect__shadow-12);

  color: var(--connect__label-color);
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  flex-flow: var(--connect__label-flow);
  font-family: var(--connect__font-sans);
  font-size: var(--connect__label-fs);
  font-weight: var(--connect__label-font-w, initial);
  gap: var(--connect__label-gap);
  justify-content: var(--connect__label-justify-content);
  line-height: var(--connect__label-lh);
  padding: var(--connect__label-padding-y) var(--connect__label-padding-x);

  position: relative;
  text-transform: var(--connect__label-text-transform, initial);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__label-w, fit-content);

  &::before {
    border: var(--connect__input-border-w) solid
      var(--checkbox-checked-state-based-border-c, var(--connect__selected-mid));
    border-radius: var(--connect__mcq-radius);
    content: '';
    height: var(--connect__input-dimensions);
    flex-shrink: 0;
    padding: var(--connect__spacer-xs);
    width: var(--connect__input-dimensions);
  }

  &:hover {
    --connect__shadow-level-1: var(--connect__shadow-spread-level-2);
    --connect__shadow-level-2: var(--connect__shadow-spread-level-10);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-11);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-12);
  }

  &:active {
    --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
  }

  &:focus-visible:not(:active) {
    --connect__shadow-10: var(--connect__focus-mid);
    --connect__shadow-20: var(--connect__focus-mid);
    --connect__shadow-level-1: var(--connect__shadow-spread-level-2);
    --connect__shadow-level-2: var(--connect__shadow-spread-level-16);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-2);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-15);
  }
}
.connect__mcq-card {
  --connect__label-gap: var(--connect__spacer-sm);
  --connect__label-padding-y: var(--connect__spacer-xs);
  --connect__label-padding-x: var(--connect__spacer-xs);
  --starting-shadow-color: transparent;
  --connect__mcq-bg: var(--connect__neutrals-white);
  --connect__mcq-input-margin: var(--connect__spacer-xs);

  align-items: flex-start;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;

  &::before {
    grid-column: 1;
    grid-row: 1;
    left: var(--connect__inner-divider-width);
    position: absolute;
    top: var(--connect__inner-divider-width);
    z-index: 2;
  }

  &::after {
    background-color: var(--theme__mcq-bg, var(--connect__mcq-bg));
    border-radius: var(--theme__inner-radius, var(--connect__inner-radius)) 0rem;
    content: '';
    height: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
    left: var(--theme__inner-divider-width, var(--connect__inner-divider-width));
    position: absolute;
    top: var(--theme__inner-divider-width, var(--connect__inner-divider-width));
    width: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
  }

  .connect__figure {
    --connect__fig-margin: var(--connect__spacer-xs);
    grid-column: 1 / -1;
    grid-row: 1 / -1;

    figcaption {
      padding: var(--connect__spacer-xs) var(--connect__spacer-sm) var(--connect__spacer-md)
        var(--connect__spacer-sm);
    }
  }

  img {
    border-radius: var(--theme__inner-radius, var(--connect__inner-radius));
  }

  &.connect__mcq-card-selected {
    &:not(:hover):not(:active):not(:focus-visible) {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-10);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-11);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-13);
    }
  }
}
.connect__mcq-text {
  &::before {
    content: unset;
  }
}

/* Using the where will resolve any stylelint errors,
  specifically the error 
  Unexpected qualifying type selector selector-no-qualifying-type "input[type='checkbox'].connect__input"
*/
:where([class^='connect__']) input[type='checkbox'],
:where([class^='connect__']) input[type='radio'] {
  opacity: 0;
  position: absolute;
  inset: 0;

  &:disabled {
    + .connect__mcq-label {
      --active-color: var(--connect__neutrals-mid);
      --checkbox-checked-state-based-border-c: var(--connect__neutrals-light);
      --checkbox-state-based-bg: var(--connect__neutrals-white);
      --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
      --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
      --connect__state-based-pointer: not-allowed;
      --state-mcq-shadow: var(--connect__neutrals-light);
    }

    + .connect__mcq-card {
      --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
      --connect__shadow-level-2: var(--connect__shadow-spread-level-6);
    }
  }

  &:checked {
    + .connect__mcq-label {
      &::before {
        background-color: var(--checkbox-state-based-bg, var(--connect__selected-mid));
        background-image: var(--checked-state-icon, transparent);
        background-size: contain;
        box-shadow: var(--connect__shadow_inner-null) var(--connect__input-border-w)
          var(--checkbox-state-based-inner-shadow, var(--connect__neutrals-white)) inset;
      }
    }
  }

  &:checked:disabled {
    + .connect__mcq-label {
      --checkbox-state-based-bg: var(--connect__neutrals-light);
      --checkbox-state-based-inner-shadow: var(--connect__neutrals-white);
      --checkbox-checked-state-based-border-c: var(--connect__neutrals-light);
    }
  }

  &:active {
    --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
  }
}

:where([class^='connect__']) input[type='radio'] {
  + label {
    --variant__mcq-radius: 50%;
  }
}

.connect__progress-wrapper {
  width: 100%;
}

/* 
.connect__progress Component

Variables related to theme/overrides:
  --connect__shadow-level-1: First level of box shadow spread.
  --connect__shadow-level-2: Second level of box shadow spread.
  --connect__progress-outer-shadow-c: Color of the outer shadow for the progress bar.
  --connect__progress-bg: Background color of the progress bar container.
  --connect__progress-color: Color of the progress bar itself.
  --connect__inner-bar-radius: Border radius of the inner progress bar.
  --connect__progress-bar-radius: Border radius of the outer progress bar container.

Styles:
  appearance: none;
    - Removes default browser styling.
  border: none;
    - Removes default border.
  border-radius: var(--border-radius);
    - Applies border radius to the overall progress bar.
  overflow: hidden;
    - Hides overflow to maintain rounded corners.
  width: 100%;
    - Sets the width to full container width.

Browser-specific styles:
  &::-webkit-progress-bar
    - Styles for the progress bar container in WebKit browsers.
  &::-webkit-progress-value
    - Styles for the actual progress in WebKit browsers.
  &::-moz-progress-bar
    - Styles for both container and progress in Mozilla Firefox.

Transitions:
  transition:
    inline-size var(--connect__transition-medium) var(--connect__in-out-quad),
    width var(--connect__transition-medium) var(--connect__in-out-quad);
    - Applies smooth transitions to the progress bar width changes.

*/

.connect__progress[value] {
  --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-2);
  --connect__progress-outer-shadow-c: var(
    --theme__progress-outer-shadow-c,
    var(--connect__neutrals-white)
  );

  // palette
  --connect__cc-purple: rgb(113, 47, 253);

  --connect__progress-bg: var(--theme__progress-bg, var(--connect__neutrals-white));
  --connect__progress-color: var(--theme__progress-color, var(--connect__cc-purple));

  // border radius
  --connect__inner-bar-radius: var(--theme__inner-bar-radius, 2.5rem);
  --connect__progress-bar-radius: var(--theme__progress-bar-radius, 1rem);

  // This is here because FF needs it here, will ignore in chrome
  appearance: none;
  background: var(--connect__progress-bg);

  border: none;
  border-radius: var(--connect__progress-bar-radius);
  box-shadow:
    var(--connect__shadow-level-1) var(--connect__shadow-20) inset,
    var(--connect__shadow-level-2) var(--connect__progress-outer-shadow-c);
  overflow: hidden;
  width: 100%;

  // Outer bars
  &::-webkit-progress-bar {
    background: var(--connect__progress-bg);
    border-radius: var(--connect__progress-bar-radius);
    box-shadow:
      var(--connect__shadow-level-1) var(--connect__shadow-20) inset,
      var(--connect__shadow-level-2) var(--connect__progress-outer-shadow-c);
  }

  &::-webkit-progress-value {
    background: var(--connect__progress-color);
    border-radius: var(--connect__inner-bar-radius);
    transition:
      inline-size var(--connect__transition-medium) var(--connect__in-out-quad),
      width var(--connect__transition-medium) var(--connect__in-out-quad);
  }

  &::-moz-progress-bar {
    background: var(--connect__progress-color);

    border-radius: var(--connect__progress-bar-radius);
    box-shadow:
      var(--connect__shadow-level-1) var(--connect__shadow-20) inset,
      var(--connect__shadow-level-2) var(--connect__progress-outer-shadow-c);
  }
}

/* 
  Toolbar Component

  Variables:
    --connect__toolbar-direction: Direction and wrapping of toolbar items.
    --connect__toolbar-align: Alignment of toolbar items.
    --connect__toolbar-padding-y: Vertical padding of the toolbar.
    --connect__toolbar-padding-x: Horizontal padding of the toolbar.
    --connect__toolbar-sub-menu-divider-w: Width of the sub-menu divider.
    --connect__toolbar-bg: Background color of the toolbar.
  */
.connect__toolbar {
  --connect__toolbar-direction: row wrap;
  --connect__toolbar-align: center;
  --connect__toolbar-padding-y: var(--connect__spacer-xs);
  --connect__toolbar-padding-x: var(--connect__spacer-sm);
  --connect__toolbar-sub-menu-divider-w: calc(var(--connect__spacer-xs) / 2);
  --connect__toolbar-bg: var(--theme__connect_toolbar-bg, var(--connect__neutrals-pale));

  align-items: var(--connect__toolbar-align, baseline);
  background-color: var(--connect__toolbar-bg);
  container-name: toolbar;
  container-type: inline-size;
  display: flex;
  flex-flow: var(--connect__toolbar-direction, column wrap);
  justify-content: space-between;
  margin: 0;
  padding: var(--connect__toolbar-padding-y) var(--connect__toolbar-padding-x);

  .connect__button {
    svg {
      height: var(--connect__icon-sm);
      width: var(--connect__icon-sm);
    }
  }

  li {
    &:focus-visible {
      outline: 0;
    }
  }
}

/* 
.connect__aside Component

Variables related to theme/overrides:
  --connect__aside-padding-y: Vertical padding of the aside.
  --connect__aside-padding-x: Horizontal padding of the aside.
  --connect__aside-bg: Background color of the aside.
  --connect__aside-w: Width of the aside.
  --connect__aside-align: Alignment of items within the aside.
  --connect__aside-direction: Flex direction of the aside content.

Shadow-related variables:
  --connect__shadow-level-1 to --connect__shadow-level-4: Different levels of box shadows.
  --connect__shadow-10, 
  --connect__shadow-20, 
  --connect__shadow-14, 
  --connect__shadow-12: Shadow color variables.

Other variables:
  --connect__aside-sub-menu-divider-w: Width of the sub-menu divider.
  --connect__neutrals-white: Default background color if not overridden.

Styles:
  align-items: Aligns items within the aside.
  background-color: Sets the background color of the aside.
  box-shadow: Applies multiple levels of box shadow for depth effect.
  display: Sets the display property to flex.
  flex-flow: Determines the flex direction and wrapping behavior.
  justify-content: Distributes space between and around content items.
  margin: Removes default margin.
  padding: Applies vertical and horizontal padding.
  width: Sets the width of the aside.

Usage:
  The .connect__aside class can be applied to a container element to create 
  a sidebar or navigation panel. The appearance and layout can be customised 
  using the provided CSS variables.

*/
.connect__aside {
  --connect__aside-padding-y: var(--connect__spacer-md);
  --connect__aside-padding-x: var(--connect__spacer-xs);

  --connect__shadow-level-1: var(--connect__shadow-spread-level-1);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-10);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-11);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-13);

  --connect__aside-sub-menu-divider-w: calc(var(--connect__spacer-xs) / 2);
  --connect__aside-bg: var(--theme__connect-aside-bg, var(--connect__neutrals-white));

  --connect__aside-w: var(--theme__aside-w, 3.625rem);
  --connect__aside-h: var(--theme__aside-h, 100vh);

  --variant__marker-color: var(--connect__neutrals-null);

  align-items: var(--connect__aside-align, center);
  background-color: var(--connect__aside-bg);
  box-shadow:
    var(--connect__shadow-level-1) var(--connect__shadow-10),
    var(--connect__shadow-level-2) var(--connect__shadow-20),
    var(--connect__shadow-level-3) var(--connect__shadow-14),
    var(--connect__shadow-level-4) var(--connect__shadow-12);
  display: flex;
  flex-flow: var(--connect__aside-direction, column wrap);
  height: calc(var(--connect__aside-h) - (var(--connect__aside-padding-y) * 2));
  justify-content: space-between;
  margin: 0;
  padding: var(--connect__aside-padding-y) var(--connect__aside-padding-x);
  width: var(--connect__aside-w);

  .connect__selected {
    .connect__button-menu {
      &:not(:disabled) {
        --connect__button-bg: var(--connect__brand-pale-magenta);
        --inner-shadow-color: var(--connect__brand-pale-magenta);
        --connect__icon-fill: var(--connect__brand-deep-magenta);

        &:active {
          --inner-shadow-color: var(--connect__neutrals-white);
        }
      }

      &:disabled {
        --state-based-bg: var(--connect__brand-pale-magenta);
        --connect__icon-fill: var(--connect__brand-deep-magenta);
      }
    }
  }
}

.connect__aside-menu {
  display: flex;
  flex-flow: column wrap;
  gap: var(--connect__spacer-xs);
}

/* 
.connect__divider Component
Variables related to theme/overrides:
  --connect__list-item-divider-bg: Background color of the divider.
  --connect__list-item-divider-h: Height of the divider.
  --connect__list-item-divider-w: Width of the divider.
  --connect__list-item-divider-br: Border radius of the divider.
  --connect__divider-margin-y: Vertical margin of the divider.
  --connect__divider-margin-x: Horizontal margin of the divider.
Default values and fallbacks:
  --connect__gray-c10: Default background color if not overridden.
  --border-radius: Default border radius if not overridden.
  --connect__spacer-xs: Default vertical margin and bottom padding.
  --connect__spacer-sm: Default horizontal margin.
Styles:
  background-color: Sets the background color of the divider.
  border: Removes any border.
  border-radius: Applies border radius to the divider.
  height: Sets the height of the divider.
  margin: Applies vertical and horizontal margins.
  padding-bottom: Adds bottom padding to the divider.
  position: Sets the positioning context for the divider.
Usage:
  The .connect__divider class can be applied to an <hr> element or any other
  element that needs to act as a visual separator. The appearance and spacing
  can be customised using the provided CSS variables.
Example:
  <hr class="connect__divider">
  To override styles:
  <hr class="connect__divider" style="--connect__list-item-divider-bg: blue;">
*/
.connect__divider {
  --connect__list-item-divider-bg: var(--theme__list-item-divider-bg, var(--connect__gray-c10));
  --connect__list-item-divider-h: var(--theme__list-item-divider-h, 0.1875rem);
  --connect__list-item-divider-w: var(--theme__list-item-divider-w, 100%);
  --connect__list-item-divider-br: var(--theme__list-item-divider-br, var(--border-radius));

  --connect__divider-margin-y: var(--theme__divider-margin-y, var(--connect__spacer-xs));

  --connect__divider-margin-x: var(--theme__divider-margin-x, var(--connect__spacer-sm));

  background-color: var(--connect__list-item-divider-bg);
  border: 0;
  border-radius: var(--connect__list-item-divider-br);
  height: var(--connect__list-item-divider-h, initial);
  margin: var(--connect__divider-margin-y) var(--connect__divider-margin-x);
  padding-bottom: var(--connect__spacer-xs);
  position: relative;
}

// Moved toolbar button styles to here to support JS
// these are the top level styles only
.connect__toolbar-item {
  padding: 0.0625rem;

  &.connect__selected {
    > .connect__button-menu {
      &:not(:disabled) {
        --connect__button-bg: var(--connect__selected-mid);
        --inner-shadow-color: var(--connect__selected-mid);
        --connect__icon-fill: var(--connect__neutrals-white);

        &:active {
          --inner-shadow-color: var(--connect__neutrals-white);
        }
      }
    }
  }

  .connect__button {
    &:disabled {
      --connect__icon-fill: var(--connect__gray-c45);
    }
  }
}

/* 
  Toolbar Menu Component

  Variables:
    --connect__toolbar-direction: Direction and wrapping of toolbar menu items.
    --connect__toolbar-align: Alignment of toolbar menu items.
    --connect__toolbar-justify: Justification of toolbar menu items.
    --connect__toolbar-gap: Gap between toolbar menu items.
    --connect__toolbar-menu-padding-x: Horizontal padding of the toolbar menu.
    --connect__toolbar-menu-margin: Margin of the toolbar menu.
    --connect__menu-divider-line-y-offset: Vertical offset of the menu divider line.
    --connect__menu-divider-line-x-offset: Horizontal offset of the menu divider line.
    --connect__menu-divider-line-h: Height of the menu divider line.

  Styles:
    - Add a divider line after the second toolbar menu.
  */
.connect__toolbar-menu {
  --connect__toolbar-direction: row wrap;
  --connect__toolbar-align: center;
  --connect__toolbar-justify: center;
  --connect__toolbar-gap: var(--connect__spacer-xs);

  --connect__toolbar-menu-padding-x: 0;
  --connect__toolbar-menu-margin: 0;

  --connect__menu-divider-line-y-offset: var(--connect__spacer-xs);
  --connect__menu-divider-line-x-offset: calc(var(--connect__spacer-sm) * -1);

  --connect__menu-divider-line-h: calc(100% - calc(var(--connect__menu-divider-line-y-offset) * 2));

  --connect__menu-divider-line-w: var(--connect__effects-inner-edge);

  align-items: var(--connect__toolbar-align, baseline);
  display: flex;
  flex-flow: var(--connect__toolbar-direction, column wrap);
  gap: var(--connect__toolbar-gap);
  justify-content: var(--connect__toolbar-justify, baseline);
  margin: var(--connect__toolbar-menu-margin);
  padding: var(--connect__toolbar-menu-padding-x);
  position: relative;

  &:nth-of-type(2) {
    --connect__icon-fill-color: var(--connect__gray-c35);

    &::after {
      background-color: var(--connect__gray-c35);
      border-radius: var(--border-radius);
      content: '';
      height: var(--connect__menu-divider-line-h);
      left: var(--connect__menu-divider-line-x-offset);
      position: absolute;
      top: var(--connect__menu-divider-line-y-offset);
      width: var(--connect__menu-divider-line-w);
    }
  }
}

/* 
  Toolbar Sub-Menu Component

  Button styles in here are sub menu only, only difference the shadow on hover and active

  Variables:
    --connect__toolbar-sub-menu-divider-c: Color of the sub-menu divider.
    --connect__toolbar-row-gap: Row gap in the sub-menu.
    --connect__toolbar-col-gap: Column gap in the sub-menu.
    --connect__toolbar-item-menu-y-offset: Vertical offset of the sub-menu.
    --connect__toolbar-sub-menu-flow: Flow direction of the sub-menu.
    --connect__toolbar-sub-menu-cols: Number of columns in the sub-menu.
    --starting-speed: Transition speed.
    --transition-origin-start: Transition origin.
    --starting-bezier: Transition timing function.

  Styles:
    - Set the background color and border radius of the sub-menu.
    - Apply box shadows to the sub-menu.
    - Define the grid layout for the sub-menu.
    - Set the initial opacity and position of the sub-menu.
    - Apply transitions to the sub-menu.
  */
.connect__toolbar-item-menu {
  --connect__toolbar-sub-menu-divider-c: var(--connect__gray-c10);
  --connect__toolbar-row-gap: var(--connect__spacer-xs);
  --connect__toolbar-col-gap: var(--connect__spacer-xs);
  --connect__toolbar-item-menu-y-offset: calc(100% + var(--connect__spacer-md, 0));
  --connect__toolbar-sub-menu-flow: column;
  --connect__toolbar-sub-menu-cols: var(--demo-cols, 1);

  background: var(--connect__neutrals-white);
  border-radius: var(--border-radius);
  box-shadow:
    var(--connect__shadow-spread-level-1) var(--connect__shadow-10),
    var(--connect__shadow-spread-level-4) var(--connect__shadow-20),
    var(--connect__shadow-spread-level-18) var(--connect__shadow-14),
    var(--connect__shadow-spread-level-18) var(--connect__shadow-12);
  column-gap: var(--connect__toolbar-col-gap);
  display: grid;
  grid-auto-flow: var(--connect__toolbar-sub-menu-flow) dense;
  grid-template-columns: repeat(var(--connect__toolbar-sub-menu-cols), 1fr);
  padding: var(--connect__spacer-xs);
  position: absolute;
  row-gap: var(--connect__toolbar-row-gap);
  top: var(--connect__toolbar-item-menu-y-offset);
  transform: translate(
    var(--connect__toolbar-item-menu-x-offset),
    var(--connect__toolbar-item-menu-y-offset)
  );

  &:has(li:nth-child(6)) {
    --connect__toolbar-row-gap: calc(
      var(--connect__spacer-xs) + var(--connect__effects-inner-edge)
    );
    --connect__toolbar-sub-menu-flow: row;
  }
}

/* 
  Toolbar Sub-Menu Item Component

  Variables:
    --row-start: Starting row of the sub-menu item.
    --row-span: Row span of the sub-menu item.
    --col-start: Starting column of the sub-menu item.
    --connect__toolbar-sub-menu-padding-x: Horizontal padding of the sub-menu item.
    --connect__toolbar-sub-menu-padding-y: Vertical padding of the sub-menu item.
    --connect__toolbar-sub-menu-divider-h: Height of the sub-menu divider.
    --connect__toolbar-sub-menu-divider-w: Width of the sub-menu divider.

  Styles:
    - Define the grid layout for the sub-menu items.
    - Add a divider line after the sub-menu items.
  */

.connect__toolbar-item-menu-item {
  --row-start: var(--menu-row-start, auto);
  --row-span: var(--menu-row-span, auto);
  --col-start: var(--menu-col-start, auto);

  --connect__toolbar-sub-menu-padding-x: var(--connect__spacer-xs);
  --connect__toolbar-sub-menu-padding-y: var(--connect__spacer-xs);
  --connect__toolbar-sub-menu-divider-h: var(--connect__effects-inner-edge);
  --connect__toolbar-sub-menu-divider-w: var(--connect__effects-inner-edge);

  grid-column: var(--menu-col-start) / span var(--menu-col-span);
  grid-row: var(--row-start) / span var(--row-span);
  position: relative;

  &:nth-of-type(1),
  &:nth-of-type(2) {
    --menu-col-span: 1;
  }

  &:nth-of-type(1) {
    --connect__toolbar-sub-menu-divider-h: calc(100% - calc(var(--connect__spacer-xs) * 2));
    --connect__toolbar-sub-menu-divider-right: calc(
      var(--connect__toolbar-sub-menu-divider-w) * -1
    );
    --connect__toolbar-sub-menu-divider-top: var(--connect__spacer-xs);

    &:not(:only-of-type) {
      .connect__toolbar-item-menu-item-sub-menu {
        &::after {
          background-color: var(--connect__toolbar-sub-menu-divider-c);
          bottom: var(
            --connect__toolbar-sub-menu-vertical-divider-bottom,
            var(--connect__toolbar-sub-menu-divider-bottom, initial)
          );
          content: '';
          height: var(
            --connect__toolbar-sub-menu-vertical-divider-h,
            var(--connect__toolbar-sub-menu-divider-h, initial)
          );
          left: var(
            --connect__toolbar-sub-menu-vertical-divider-left,
            var(--connect__toolbar-sub-menu-divider-left, initial)
          );
          position: absolute;
          right: var(
            --connect__toolbar-sub-menu-vertical-divider-right,
            var(--connect__toolbar-sub-menu-divider-right, initial)
          );
          top: var(
            --connect__toolbar-sub-menu-vertical-divider-top,
            var(--connect__toolbar-sub-menu-divider-top, initial)
          );
          width: var(
            --connect__toolbar-sub-menu-vertical-divider-w,
            var(--connect__toolbar-sub-menu-divider-w, initial)
          );
        }
      }
    }

    .connect__toolbar-item-menu-item-sub-menu {
      margin-right: var(--connect__toolbar-sub-menu-padding-x);
    }

    // if the menu on the left has 6 items then do this
    &:has(:nth-child(6)) {
      --connect__toolbar-sub-menu-vertical-divider-right: unset; // Unsets the right position of the sub-menu divider
      --connect__toolbar-sub-menu-vertical-divider-left: calc(
        -1 * var(--connect__spacer-xs)
      ); // Adjusts the left position of the sub-menu divider
      --connect__toolbar-sub-menu-vertical-divider-w: calc(
        100% + calc(var(--connect__spacer-xs) * 2)
      ); // Adjusts the width of the sub-menu divider
      --connect__toolbar-sub-menu-vertical-divider-h: var(
        --connect__effects-inner-edge
      ); // Sets the height of the sub-menu divider to the inner edge value
      --connect__toolbar-sub-menu-vertical-divider-top: calc(
        100% + calc(var(--connect__spacer-xs) / 2)
      ); // Adjusts the top position of the sub-menu divider

      .connect__toolbar-item-menu-item-sub-menu {
        margin-right: 0;

        &:nth-of-type(1) {
          padding-bottom: var(--connect__toolbar-sub-menu-padding-y);
        }

        &:nth-of-type(2) {
          padding-top: var(--connect__toolbar-sub-menu-padding-y);
        }
      }

      ~ li {
        --menu-row-start: 2;
        --menu-col-start: 1;

        ul {
          margin: 0;
        }
      }
    }
  }

  &:nth-of-type(2) {
    --menu-col-start: 2;

    .connect__toolbar-item-menu-item-sub-menu {
      margin-left: var(--connect__toolbar-sub-menu-padding-x);
    }
  }
}

/* 
  Toolbar Sub-Menu Item Sub-Menu Component

  Styles:
    - Define the styles for the sub-menu items.
    - Add a divider line after the sub-menu items.
  */
.connect__toolbar-item-menu-item-sub-menu {
  display: flex;
  padding: 0;

  .connect__toolbar-item {
    &.connect__selected {
      > .connect__button-menu {
        --connect__button-bg: var(--connect__neutrals-white);
        --connect__icon-fill: currentcolor;

        &:active {
          --inner-shadow-color: var(--connect__selected-mid);
        }

        &:disabled {
          --state-based-bg: var(--connect__neutrals-null);
          --connect__icon-fill: var(--connect__neutrals-mid);
        }
      }
    }
  }
}

.connect__list {
  --connect__list-item-padding-left: var(--connect__spacer-sm);
  --connect__list-item-margin-left: calc(4ch * 1);
  --connect__list-marker-color: var(
    --theme__list-marker-color,
    var(--variant__marker-color, inherit)
  );

  > .connect__list-item {
    --connect__list-fs: var(--connect__body-sm);
    --connect__list-lh: var(--connect__body-sm-lheight);

    font-size: var(--theme__connect-list-fs, var(--connect__list-fs));
    line-height: var(--theme__connect-list-lh, var(--connect__list-lh));

    &::marker {
      color: var(--connect__list-marker-color);
      font-size: var(--theme__connect-list-item-marker-fs, var(--connect__body-sm));
      line-height: var(--theme__connect-list-item-marker-lh, var(--connect__body-sm-lheight));
    }
  }

  &.connect__list-none {
    --variant__marker-color: var(--connect__neutrals-null);
  }

  &.connect__list-circle {
    --variant__list-style-type: circle;
  }

  &.connect__list-decimal {
    --variant__list-style-type: decimal;
  }

  &.connect__list-disc {
    --variant__list-style-type: disc;
  }

  &.connect__list-roman {
    --variant__list-style-type: lower-roman;
  }

  &.connect__list-square {
    --variant__list-style-type: square;
  }

  &.connect__list-alpha {
    --variant__list-style-type: lower-alpha;
  }
}

.connect__counters {
  counter-reset: orderedlist;

  &::marker {
    content: counters(list-item, '.') ':';
    font-weight: var(--theme__connect-marker-font-w, 700);
  }
}

[class*='connect_'] {
  img {
    display: block;
    max-inline-size: 100%;
    max-width: 100%;
  }

  blockquote {
    font-size: var(--connect__blockquote-fs, var(--connect__body-md));
    font-style: var(--connect__blockquote-font-style, normal);
    margin: var(--connect__blockquote-margin, 0);
    padding-bottom: var(--connect__blockquote-padding-bottom, var(--connect__spacer-sm));
    padding-left: var(--connect__blockquote-padding-left, var(--connect__spacer-md));
    padding-right: var(--connect__blockquote-padding-right, var(--connect__spacer-md));
    padding-top: var(--connect__blockquote-padding-top, var(--connect__spacer-sm));
  }

  figure {
    margin: var(--connect__fig-margin, 0);
  }

  figcaption {
    --connect__fig-py: var(--connect__spacer-sm);
    --connect__fig-px: var(--connect__spacer-md);
    font-size: var(--connect__fig-fs, var(--connect__caption));
    margin-top: var(--connect__fig-mt, 0);
    padding-bottom: var(--connect__fig-pb, var(--connect__fig-py));
    padding-left: var(--connect__fig-pl, var(--connect__fig-px));
    padding-right: var(--connect__fig-pr, var(--connect__fig-px));
    padding-top: var(--connect__fig-pt, var(--connect__fig-py));
    text-align: var(--connect__fig-text-align, left);
    text-wrap: var(--connect__fig-text-wrap, initial);
  }
}

[class*='connect_']:disabled {
  --active-color: var(--connect__neutrals-mid);
  --connect__icon-fill-color: var(--connect__neutrals-light);
  --checkbox-state-based-bg: var(--connect__neutrals-white);
  --checkbox-state-based-inner-shadow: var(--state-based-bg);
  --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
  --connect__state-based-pointer: not-allowed;
}

/* 
Styles for elements with classes containing '-correct'

Variables:
  --connect__mcq-starting-shadow-color: Initial shadow color for multiple-choice questions.
  --state-icon: Icon used to represent the state.
  --state-based-bg: Background color based on the state.
  --checkbox-state-based-bg: Background color for the state of checkboxes.
  --state-mcq-shadow: Shadow color for multiple-choice questions in the correct state.
  --checkbox-checked-state-based-border-c: Border color for checked state of checkboxes.
  --grade-checkbox-checked-state-based-border-c: Fallback border color for checked state of checkboxes.
  --connect__neutrals-white: Neutral white color.
  --checked-state-icon: Icon used for the checked state.

Classes using these variables:
  - .connect__button
  - .connect__input
  - .connect__card
  - .connect__radio
  - .connect__checkbox
  - .connect__select
  - .connect__toggle

Styles:
  [class*='-correct'],
  [class*='-correct']:disabled {
    --connect__mcq-starting-shadow-color: transparent;
      - Sets the initial shadow color for multiple-choice questions to transparent.
    --state-icon: var(--icon-correct);
      - Sets the icon used to represent the state to the 'correct' icon.
    --state-based-bg: var(--connect__correct-pale);
      - Sets the background color based on the state to the correct pale color.
    --checkbox-state-based-bg: var(--connect__correct-mid);
      - Sets the background color for the state of checkboxes to the correct mid color.
    --state-mcq-shadow: var(--connect__correct-mid);
      - Sets the shadow color for multiple-choice questions in the correct state.
    --checkbox-checked-state-based-border-c: var(
      --grade-checkbox-checked-state-based-border-c,
      var(--connect__neutrals-white)
    );
      - Sets the border color for the checked state of checkboxes, with a fallback to a neutral white color.
    --checked-state-icon: var(--checked-correct);
      - Sets the icon used for the checked state to the 'correct' icon.
  }
}
*/

[class*='-correct'],
[class*='-correct']:disabled {
  --connect__mcq-starting-shadow-color: var(--connect__correct-mid);
  --state-icon: var(--icon-correct);
  --state-based-bg: var(--connect__correct-pale);
  --checkbox-state-based-bg: var(--connect__correct-mid);
  --state-mcq-shadow: var(--connect__correct-mid);
  --checkbox-checked-state-based-border-c: var(--connect__correct-mid);
  --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
  --checked-state-icon: var(--checked-correct);
}

/* 
Styles for elements with classes containing '-incorrect'

These styles apply to elements with classes that include '-incorrect'.
They use CSS variables extensively to allow for easy theming and state-driven changes.

Variables:
  --connect__mcq-starting-shadow-color: Initial shadow color for multiple-choice questions.
  --state-icon: Icon used to represent the state.
  --state-based-bg: Background color based on the state.
  --connect__inner-status-color-state: State-based inner status color.
  --checkbox-state-based-bg: Background color for the state of checkboxes.
  --state-mcq-shadow: Shadow color for multiple-choice questions in the incorrect state.
  --checkbox-checked-state-based-border-c: Border color for checked state of checkboxes.
  --grade-checkbox-checked-state-based-border-c: Fallback border color for checked state of checkboxes.
  --connect__neutrals-white: Neutral white color.
  --checked-state-icon: Icon used for the checked state.

Classes using these variables:
  - .connect__button
  - .connect__input
  - .connect__card
  - .connect__radio
  - .connect__checkbox
  - .connect__select
  - .connect__toggle

Styles:
  [class*='-incorrect'],
  [class*='-incorrect']:disabled {
    --connect__mcq-starting-shadow-color: transparent;
      - Sets the initial shadow color for multiple-choice questions to transparent.
    --state-icon: var(--icon-incorrect);
      - Sets the icon used to represent the state to the 'incorrect' icon.
    --state-based-bg: var(--color-incorrect-bg);
      - Sets the background color based on the state to the incorrect background color.
    --connect__inner-status-color-state: var(--color-incorrect-bg);
      - Sets the state-based inner status color to the incorrect background color.
    --checkbox-state-based-bg: var(--checked-incorrect-bg);
      - Sets the background color for the state of checkboxes to the incorrect background color.
    --state-mcq-shadow: var(--connect__incorrect-mid);
      - Sets the shadow color for multiple-choice questions in the incorrect state.
    --checkbox-checked-state-based-border-c: var(
      --grade-checkbox-checked-state-based-border-c,
      var(--connect__neutrals-white)
    );
      - Sets the border color for the checked state of checkboxes, with a fallback to a neutral white color.
    --checked-state-icon: var(--checked-incorrect);
      - Sets the icon used for the checked state to the 'incorrect' icon.
  }
}
*/

[class*='-incorrect'],
[class*='-incorrect']:disabled {
  --connect__mcq-starting-shadow-color: var(--connect__incorrect-mid);
  --state-icon: var(--icon-incorrect);
  --state-based-bg: var(--color-incorrect-bg);
  --connect__inner-status-color-state: var(--color-incorrect-bg);
  --checkbox-state-based-bg: var(--checked-incorrect-bg);
  --checkbox-checked-state-based-border-c: var(--checked-incorrect-bg);
  --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
  --checked-state-icon: var(--checked-incorrect);
}

/* 
Styles for elements with classes containing '-shown'
Variables:
  --connect__mcq-starting-shadow-color: Initial shadow color for multiple-choice questions.
  --starting-shadow-color: Initial shadow color.
  --state-based-bg: Background color based on the state.
  --state-icon: Icon used to represent the state.
  --checkbox-checked-state-based-border-c: Border color for checked state of checkboxes.
  --grade-checkbox-checked-state-based-border-c: Fallback border color for checked state of checkboxes.
  --connect__neutrals-white: Neutral white color.
  --checkbox-state-based-bg: Background color for the state of checkboxes.
  --connect__neutrals-dark: Neutral dark color.
  --checked-state-icon: Icon used for the checked state.

Classes using these variables:
  - .connect__button
  - .connect__input
  - .connect__card
  - .connect__radio
  - .connect__checkbox
  - .connect__select
  - .connect__toggle

Styles:
  [class*='-shown'],
  [class*='-shown']:disabled {
    --connect__mcq-starting-shadow-color: transparent;
      - Sets the initial shadow color for multiple-choice questions to transparent.
    --starting-shadow-color: var(--connect__neutrals-dark);
      - Sets the initial shadow color to a neutral dark color.
    --state-based-bg: var(--connect__neutrals-white);
      - Sets the background color based on the state to a neutral white color.
    --state-icon: var(--icon-shown);
      - Sets the icon used to represent the state to the 'shown' icon.
    --checkbox-checked-state-based-border-c: var(
      --grade-checkbox-checked-state-based-border-c,
      var(--connect__neutrals-white)
    );
      - Sets the border color for the checked state of checkboxes, with a fallback to a neutral white color.
    --checkbox-state-based-bg: var(--connect__neutrals-dark);
      - Sets the background color for the state of checkboxes to a neutral dark color.
    --checked-state-icon: var(--checked-correct);
      - Sets the icon used for the checked state to the 'correct' icon.
  }
}

*/
[class*='-shown'],
[class*='-shown']:disabled {
  --connect__mcq-starting-shadow-color: var(--connect__neutrals-mid);
  --starting-shadow-color: var(--connect__neutrals-dark);
  --state-based-bg: var(--connect__neutrals-white);
  --state-icon: var(--icon-shown);
  --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
  --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
  --state-mcq-shadow: var(--connect__neutrals-dark);
  --checkbox-state-based-bg: var(--connect__neutrals-dark);
  --checked-state-icon: var(--checked-correct);
}

[class*='-selected'] {
  --connect__mcq-starting-shadow-color: var(--connect__selected-mid);
}

/* 
These styles apply to elements with classes that include '-correct', '-incorrect', or '-shown'.

Classes using these variables:
  - .connect__button
  - .connect__input
  - .connect__card
  - .connect__radio
  - .connect__checkbox
  - .connect__select
  - .connect__toggle

Variables:
  --active-color: color used for active state.
  --connect__neutrals-mid: Neutral mid color.
  --connect__shadow-level-2: Second level of box shadow.
  --connect__shadow-level-3: Third level of box shadow.
  --connect__shadow-level-4: Fourth level of box shadow.
  --connect__shadow-spread-level-0: Zero spread level for box shadow.
  --connect__state-based-pointer: Cursor style when the element is disabled.
  --connect__card-inner-state-divider: Divider color for inner state of the card.
  --connect__neutrals-null: Null neutral color.

Styles:
  [class*='-correct'],
  [class*='-incorrect'],
  [class*='-shown'] {
    &:disabled {
      --active-color: var(--connect__neutrals-mid);
        - Sets the active color to a neutral mid color when the element is disabled.
    }
    --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
      - Sets the second level of box shadow to zero spread.
    --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
      - Sets the third level of box shadow to zero spread.
    --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
      - Sets the fourth level of box shadow to zero spread.
    --active-color: var(--connect__neutrals-mid);
      - Sets the active color to a neutral mid color.
    --connect__state-based-pointer: not-allowed;
      - Sets the cursor style to 'not-allowed' when the element is disabled.
    --connect__card-inner-state-divider: var(--connect__neutrals-null);
      - Sets the inner state divider color to a null neutral color.

    &:hover,
    &:active {
      --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
        - Sets the second level of box shadow to zero spread on hover and active states.
      --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
        - Sets the third level of box shadow to zero spread on hover and active states.
      --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
        - Sets the fourth level of box shadow to zero spread on hover and active states.
    }
  }
}
*/

[class*='-correct'],
[class*='-incorrect'],
[class*='-shown'] {
  --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
  --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
  --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
  --active-color: var(--connect__neutrals-mid);
  --connect__card-inner-state-divider: var(--connect__neutrals-null);
  --connect__state-based-pointer: not-allowed;

  &:disabled {
    --active-color: var(--connect__neutrals-mid);
  }

  &:hover,
  &:active {
    --connect__shadow-level-2: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-3: var(--connect__shadow-spread-level-0);
    --connect__shadow-level-4: var(--connect__shadow-spread-level-0);
  }
}
