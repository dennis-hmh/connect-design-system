@import '../css/source.css';

/*
FALLBACK VALUE GUIDE: when to use inherit vs initial

inherit ensures that children respect the parent's styling.
initial ensures that properties are reset to their default values 
  .ideal for resetting styles to avoid unintended inherited styles


| Property Type                                | Fallback |
|----------------------------------------------|----------|
| Color, font size/ family, line height        | inherit  |
| Fixed component backgrounds                  | initial  |
| Reset borders/shadows/z-index                | initial  |
| Opacity, visibility                          | inherit  |
| Flexible layout alignment (Flex / Grid)      | inherit  |
| Positioning layout alignment (Absolute)      | initial  |
| Font family and weight (nested text)         | inherit  |
| Background color (for reset purposes)        | initial  |
| Border styling (reset)                       | initial  |
| Font style / weight / variant / wrap / align | initial  |

*/

/* 
  SHADOW SELECTION GUIDE: when to use a shadow

  There are three main shadow types in the system

  1: --connect__effects-shadow
  2: --connect__inner-shadow
  3: --connect__shadow-null
  4: --connect__shadow-lvl-focus

  There are 9 shadow elevations ranging from minus 2 to 6
  minus elevations have --1/--2 and positive elevations have -1/-2/-3 etc

  Shadow types and shadow elevations work together. 
  A shadow elevation does not require a shadow type

|---------------------------------------------------------------------------|
| Component                                   | Shadow Type                 |
|---------------------------------------------------------------------------|
| Interactive components:                     | --connect__effects-shadow   |
|   elements that takes visual status line 
|   when correct / incorrect/ shown             
|---------------------------------------------------------------------------|
| Inner Shadow components:                    | --connect__inner-shadow     |
|   elements that takes inner shadows
|   these components can take a 
|   solid bg for state but no line
|---------------------------------------------------------------------------|
| Components with no definer line:             | --connect__shadow-null      |
|   elements that takes no definer line
|---------------------------------------------------------------------------|
| Focus Shadow components:                    | --connect__shadow-lvl-focus |
|   elements that takes focus shadows
|---------------------------------------------------------------------------|


*/

/* 
.connect__button Component

Variables related to theme/overrides:
  --connect__button-fs: Font size of the button text.
  --connect__button-lh: Line height of the button text.
  --connect__button-fw: Font weight of the button text.
  --connect__button-text-transform: Text transformation.
  --connect__button-color: Text color of the button.
  --connect__button-bg: Background color of the button.
  --connect__button-border-w: Border width of the button.
  --connect__button-border-c: Border color of the button.
  --connect__button-radius: Border radius of the button.
  --connect__button-gap: Gap between elements inside the button.
  --connect__icon-fill-color: Fill color for icons inside the button.
  --connect__button-padding-y: Vertical padding of the button.
  --connect__button-padding-x: Horizontal padding of the button.
  --connect__button-justify-content: Justification of content inside the button.
  --connect__button-flow: Flex flow direction of the button content.
  --connect__button-w: Width of the button.
  --connect__button-h: Height of the button.

Variables related to states:
  --state-based-bg: State-based background color.
  --active-color: Active state color.

Student / System States
  -correct / -incorrect: Affects Primary and Secondary buttons only

  All Buttons: 
  --connect__state-based-pointer: Cursor style when the button answered.

  Primary Buttons: Variables related to states
   --state-based-bg: State-based background color.

  Secondary Buttons: Variables related to states
  --connect__inner-status-color: Inner status color.
  --connect__inner-status-color-state: State-based inner status color.
  --active-color: Active state color.


*/

.connect__button {
  --connect__button-fs: var(--theme__button-fs, var(--connect__body-sm));
  --connect__button-lh: var(--theme__button-lh, var(--connect__body-sm-lheight));
  --connect__button-fw: var(--theme__button-fw, var(--connect__fw-regular));
  --connect__button-text-transform: var(--theme__button-transform, var(--connect__text-capitalize));

  --connect__button-border-w: var(--theme__button-border-w, var(--connect__spacer-zero));
  --connect__button-border-c: var(--connect__surface-white, transparent);
  --connect__button-radius: var(--theme__border-radius, var(--connect__border-radius));

  --connect__button-color: var(--active-color, var(--connect__surface-dark));
  --connect__button-bg: var(--state-based-bg, var(--connect__primary-mid));

  --connect__button-gap: var(--connect__spacer-sm);
  --connect__button-padding-y: calc(var(--connect__spacer-sm) - var(--connect__button-border-w));
  --connect__button-padding-x: calc(var(--connect__spacer-md) - var(--connect__button-border-w));
  --connect__button-align: var(--theme__button-align, center);
  --connect__button-justify-content: var(--btn-justify, space-between);
  --connect__button-flow: var(--btn-flow, row wrap);

  --icon-fill-color: var(
    --theme__icon-fill,
    var(--state-based-icon-fill, var(--connect__icon-fill))
  );

  align-items: var(--connect__button-align);
  background-color: var(--theme__button-bg, var(--connect__button-bg));
  border: var(--connect__button-border-w) solid var(--connect__button-border-c, transparent);
  border-radius: var(--connect__button-radius, 0);
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
  color: var(--theme__button-color, var(--connect__button-color));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  flex-flow: var(--connect__button-flow);
  font-family: var(--connect__font-sans);
  font-size: var(--connect__button-fs);
  font-weight: var(--connect__button-fw, initial);
  height: var(--connect__button-h, auto);
  gap: var(--connect__button-gap, 0);
  justify-content: var(--connect__button-justify-content);
  line-height: var(--connect__button-lh);
  padding: calc(var(--connect__button-padding-y) - var(--connect__button-border-w))
    calc(var(--connect__button-padding-x) - var(--connect__button-border-w));
  text-transform: var(--connect__button-text-transform, initial);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow, fill, stroke;
  transition-timing-function: var(--connect__ease-out);
  width: var(--connect__button-w, fit-content);

  &:hover {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-4);
  }

  &:active {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
  }

  /* 
    Each button type has an active color
    set icon fill to that, change on case by case
  */

  .connect__icon {
    --connect__icon-fill-color: var(--icon-fill-color);
  }

  &-primary {
    --active-color: var(--connect__surface-white);
    --connect__icon-fill: var(--active-color);

    &:disabled {
      --state-based-bg: var(--connect__disabled-pale);
    }

    &.connect__button-correct {
      --connect__inner-status-color-state: var(--connect__surface-null);
    }

    &.connect__button-incorrect {
      --connect__inner-status-color-state: var(--connect__surface-null);
    }
  }

  &-secondary {
    --state-based-bg: var(--connect__surface-white);
    --active-color: var(--connect__primary-mid);
    --connect__icon-fill: var(--active-color);
    --connect__inner-status-color: var(--connect__primary-mid);

    &:disabled {
      --state-based-bg: var(--connect__surface-white);
      --connect__inner-status-color-state: var(--connect__surface-pale);
    }

    &.connect__button-incorrect {
      --state-based-bg: var(--connect__surface-white);
    }

    &.connect__button-correct {
      --state-based-bg: var(--connect__surface-white);
      --connect__inner-status-color: var(--connect__correct-light);
    }
  }

  &-incorrect {
    &:disabled {
      --state-based-bg: var(--color-incorrect-bg);
    }
  }

  &-menu {
    --connect__button-padding-y: var(--connect__spacer-sm);
    --connect__button-padding-x: var(--connect__spacer-sm);
    --connect__button-bg: var(--connect__surface-null);
    --connect__inner-status-color: var(--connect__surface-null);
    --active-color: var(--variant__icon-fill-color, var(--connect__surface-dark));

    box-shadow: var(--connect__shadow-null);

    &:active {
      box-shadow: var(--connect__shadow-lvl-0);
    }

    &:not(:disabled) {
      &:hover {
        --connect__button-bg: var(--connect__surface-white);
        --connect__inner-status-color: var(--connect__surface-white);
        box-shadow: var(--connect__shadow-lvl-2);
      }
    }

    &:disabled {
      --icon__fill-opacity: var(--connect__state-opacity);
    }
  }

  &-selected {
    &:not(:disabled) {
      --connect__button-bg: var(--connect__brand-pale-magenta);
      --connect__inner-status-color: var(--connect__brand-pale-magenta);
      --connect__icon-fill: var(--connect__brand-deep-magenta);

      &:active {
        --connect__inner-status-color: var(--connect__surface-white);
      }
    }

    &:disabled {
      --state-based-bg: var(--connect__brand-pale-magenta);
      --connect__icon-fill: var(--connect__brand-deep-magenta);
    }
  }

  &-loading > svg,
  [class*='loading'] > svg {
    animation: connect-loading 0.85s linear infinite;
  }

  &-media {
    --btn-justify: center;
    --btn-flow: column wrap;
    --connect__button-padding-y: var(--connect__spacer-md);
    --connect__button-padding-x: var(--connect__spacer-md);

    --connect__button-radius: 100%;
    --connect__button-h: calc(var(--connect__spacer-xl) * 3.75 - var(--connect__button-padding-y));
    --connect__button-w: calc(var(--connect__spacer-xl) * 3.75 - var(--connect__button-padding-x));

    &.connect__media-active:not(:disabled) {
      --state-based-bg: var(--connect__red-s45);
    }
  }

  &:disabled {
    --connect__button-bg: var(--state-based-bg);
  }
}

@keyframes connect-loading {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}


/* 
.connect__input Component

Variables related to theme/overrides:
  --resize: Resize property of the input field.
  --connect__input-padding-y: Vertical padding of the input field.
  --connect__input-padding-x: Horizontal padding of the input field.
  --connect__input-fs: Font size of the input text.
  --connect__input-lh: Line height of the input text.
  --connect__input-text-color: Text color of the input field.
  --connect__input-bg: Background color of the input field.
  --connect__input-border-w: Border width of the input field.
  --connect__input-border-c: Border color of the input field.
  --caret-color: Color of the caret (text cursor).
  --connect__input-width: Width of the input field.

Variables related to states (e.g., focus, active):
  --state-based-bg: State-based background color.
  --active-color: Active state color.
  --connect__primary-mid: Color for the selected state.
  --connect__focus-mid: Color for the focus state.
  --connect__surface-white: Neutral white color.
  --connect__surface-dark: Neutral dark color.
  --connect__disabled-light: Gray color.

States:
  &:not(:disabled)
    - Default state for input fields that are not disabled.
    - &:hover: Hover state.
    - &:active: Active state.

  &:focus-visible:not(:active)
    - Focus state when the input is visible and not active.

  &:active:not(:disabled)
    - Active state for input fields that are not disabled.

  &-resize
    - Resize state for the input field.
    - &:disabled: Disabled state for resizable input fields.

  &.connect__input-selected,
  &.connect__input-selected:disabled
    - Selected state for input fields, including when disabled.
    - &:hover: Hover state for selected input fields.
    - &:focus-visible: Focus state for selected input fields.

  & textarea
    - Styles for textarea elements inside the input field.
    - field-sizing: Content sizing for the textarea.
    - max-height: Maximum height for the textarea.
    - min-height: Minimum height for the textarea.
*/

.connect__input {
  --resize: none;
  --connect__input-padding-y: var(--connect__spacer-sm);
  --connect__input-padding-x: var(--connect__spacer-md);
  --connect__input-fs: var(--connect__body-sm);
  --connect__input-lh: var(--connect__body-sm-lheight);

  --connect__input-text-color: var(--active-color, var(--connect__surface-dark));
  --connect__input-bg: var(--connect__surface-white);

  --connect__input-border-c: var(--connect__surface-white, var(--connect__surface-null));

  --connect__caret-color: var(--connect__primary-mid);
  --connect__input-border-w: var(--connect__spacer-zero);

  background-color: var(--state-based-bg, var(--connect__surface-white));
  border: var(--connect__input-border-w) solid var(--connect__input-border-c);
  border-radius: var(--connect__border-radius);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--1);
  caret-color: var(--connect__caret-color);
  color: var(--connect__input-text-color);
  cursor: var(--connect__state-based-pointer, text);
  font-family: var(--connect__font-sans);
  font-size: var(--connect__input-fs);
  line-height: var(--connect__input-lh);
  padding: var(--connect__input-padding-y) var(--connect__input-padding-x);
  position: relative;
  resize: var(--resize);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__input-width, var(--connect__full-w));

  &:not(:disabled) {
    &:hover,
    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
    }
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  &:active:not(:disabled) {
    --connect__active-state: var(--connect__primary-mid);
  }

  &::placeholder {
    --connect__input-text-color: var(--connect__surface-mid);
    color: var(--connect__input-text-color);
    font-style: italic;
  }

  &-resize {
    --resize: vertical;

    &:disabled {
      resize: none;
    }
  }

  & textarea {
    field-sizing: content;
    max-height: calc(4lh + 2 * var(--connect__input-padding-y));
    min-height: calc(2lh + 2 * var(--connect__input-padding-y));
  }
}

.connect__input-selected,
.connect__input-selected:disabled {
  --connect__inner-status-color-state: var(--connect__primary-mid);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
}

/* 
.connect__select Component

Variables related to theme/overrides:
  --connect__select-bg: Background color of the select dropdown.
  --connect__select-border-w: Border width of the select dropdown.
  --connect__select-border-c: Border color of the select dropdown.
  --connect__select-fs: Font size of the select text.
  --connect__select-lh: Line height of the select text.
  --connect__select-fw: Font weight of the select text.
  --connect__select-text-transform: Text transformation (e.g., capitalize, uppercase).
  --connect__select-padding-y: Vertical padding of the select dropdown.
  --connect__select-padding-x: Horizontal padding of the select dropdown.

Variables related to states (e.g., focus, active):
  --state-based-bg: State-based background color.
  --active-color: Active state color.
  --connect__primary-mid: Color for the selected state.
  --connect__focus-mid: Color for the focus state.
  --connect__surface-white: Neutral white color.
  --connect__surface-dark: Neutral dark color.
  --connect__state-based-pointer: Cursor style for the select dropdown.

States:
  &:not(:disabled)
    - Default state for select dropdowns that are not disabled.
    - &:hover: Hover state.
    - &:active: Active state.

  &:focus-visible:not(:active)
    - Focus state when the select dropdown is visible and not active.

  &:active:not(:disabled)
    - Active state for select dropdowns that are not disabled.

  &-correct,
  &-incorrect,
  &-shown,
  &:disabled
    - States for correct, incorrect, shown, and disabled select dropdowns.
    - &:disabled: Disabled state for the select dropdown.

  &::-ms-expand
    - State for the select dropdown in Internet Explorer.
    - display: var(--connect__display-none); Hides the default dropdown arrow in Internet Explorer.
*/

.connect__select {
  --connect__select-bg: var(--state-based-bg, var(--connect__surface-white));
  --connect__select-fs: var(--connect__body-sm);
  --connect__select-lh: var(--connect__body-sm-lheight);
  --connect__select-fw: var(--connect__fw-regular);
  --connect__select-text-transform: var(--connect__text-capitalize);

  appearance: none;
  background-color: var(--connect__select-bg);
  background-image: var(--state__connect-dropdown-icon, var(--connect__dropdown-icon-closed));
  background-position: calc(var(--connect__full-w) - var(--connect__spacer-sm));
  background-repeat: no-repeat;
  background-size: var(--connect__icon-md);
  border: var(--connect__spacer-zero) solid var(--connect__surface-null);
  border-radius: var(--connect__border-radius);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--1);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  flex: 1;
  font-size: var(--connect__select-fs);
  font-weight: var(--connect__select-fw);
  line-height: var(--connect__select-lh);
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  position: relative;
  text-transform: var(--connect__text-capitalize);
  width: var(--connect__full-w);

  &:not(:disabled) {
    &:hover,
    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
    }
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  &:active:not(:disabled) {
    --starting-shadow-color: var(--connect__primary-mid);
  }

  &::-ms-expand {
    display: var(--connect__display-none);
  }
}

/* 
.connect__button-split Component

Variables related to theme/overrides:
  --connect__list-bg: Background color of the list.
  --connect__list-radius: Border radius of the list.
  --connect__list-flow: Flex flow direction of the list.
  --connect__list-wrap: Flex wrap property of the list.
  --connect__surface-dark: Dark neutral color.
  --connect__effects-inner-edge: Inner edge effect size.
  --connect__full-w: Full width of the component.
  --connect__z-1: Z-index for stacking context.
*/

.connect__button-split {
  position: relative;

  .connect__list {
    --connect__list-bg: var(--theme__list-bg, var(--connect__surface-white));
    --connect__list-radius: var(--theme__list-radius, var(--connect__border-radius));

    --connect__list-flow: var(--theme__list-flow, column);
    --connect__list-wrap: var(--theme__list-wrap, wrap);

    background-color: var(--connect__list-bg);
    border-radius: var(--connect__list-radius);
    box-shadow: var(--connect__shadow-lvl-4);
    color: var(--connect__surface-dark);
    display: flex;
    flex-flow: var(--connect__list-flow) var(--connect__list-wrap);
    left: 0;
    margin-top: calc(var(--connect__effects-inner-edge) * 2);
    padding: 0;
    position: absolute;
    top: 100%;
    width: var(--connect__full-w);
    z-index: var(--connect__z-1);
  }

  .connect__list-item {
    cursor: var(--connect__state-based-pointer, pointer);
    font-family: var(--connect__font-sans);
    font-size: var(--connect__caption);
    line-height: var(--connect__caption-lheight);
    padding: var(--connect__spacer-sm) var(--connect__spacer-md);

    &:first-of-type {
      border-radius: var(--connect__border-radius) var(--connect__border-radius)
        var(--connect__spacer-zero) var(--connect__spacer-zero);
    }

    &:last-of-type {
      border-radius: var(--connect__spacer-zero) var(--connect__spacer-zero)
        var(--connect__border-radius) var(--connect__border-radius);
    }

    &:hover {
      background-color: var(--connect__surface-pale);
    }
  }
}

/* 
.connect__button-split-button Component

Variables related to theme/overrides:
  --connect__button-fs: Font size of the button.
  --connect__button-lh: Line height of the button.
  --connect__button-color: Text color of the button.
  --connect__button-bg: Background color of the button.
  --state-based-bg: State-based background color.
  --connect__primary-mid: Mid color for selected state.
  --color-action-disabled: Color for disabled actions.
  --connect__surface-mid: Mid neutral color.
*/

.connect__button-split-button {
  --connect__button-fs: var(--theme__button-fs, var(--connect__body-sm));
  --connect__button-lh: var(--theme__button-lh, var(--connect__body-sm-lheight));
  --connect__button-color: var(--active-color, var(--connect__surface-dark));
  --connect__button-bg: var(--state-based-bg, var(--connect__primary-mid));

  background-color: var(--theme__button-bg, var(--connect__button-bg));
  border: unset;
  color: var(--theme__button-color, var(--connect__button-color));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  font-size: var(--connect__button-fs);
  line-height: var(--connect__button-lh);

  &:disabled {
    --active-color: var(--color-action-disabled);
    color: var(--connect__surface-mid);
  }
}

/* 
.connect__button-split-button-actions Component
*/

.connect__button-split-button-actions {
  border-left: calc(var(--connect__spacer-xs) / 2) solid var(--connect__surface-white);
  padding-left: var(--connect__button-gap);
}

/* 
.connect__accordion Component

Variables related to theme/overrides:
  --connect__effects-inner-edge: Inner edge effect size grade banded value used to margin top.
  --connect__details-padding-t/r/b/l: Padding for the details section.
  --connect__details-closed-radius: Border radius when details are closed.
  --connect__details-open-radius: Border radius when details are open.
  --connect__icon-rotate: Rotation for the accordion icon.
  --connect__summary-bg: Background color of the summary.
  --connect__summary-icon-active-ring: Active ring color for the summary icon.
  --connect__summary-padding-y/x: Padding for the summary.
  --connect__align-items: Alignment of summary items.
  --connect__justify-content: Justification of summary items.
*/

.connect__accordion {
  
  .connect__list-item {
    margin-left: 0;
    margin-top: var(--connect__effects-inner-edge);
    padding-left: 0;
  }

}

.connect__details {
  --connect__details-padding-t: var(
    --theme__details-padding-t,
    var(--variant__details-padding-t, 0)
  );
  --connect__details-padding-r: var(
    --theme__details-padding-r,
    var(--variant__details-padding-r, 0)
  );
  --connect__details-padding-b: var(
    --theme__details-padding-b,
    var(--variant__details-padding-b, 0)
  );
  --connect__details-padding-l: var(
    --theme__details-padding-l,
    var(--variant__details-padding-l, 0)
  );

  // border radius for details based on open closed
  --connect__details-closed-radius: var(--connect__border-radius);
  --connect__details-open-radius: var(--connect__border-radius) var(--connect__border-radius) 0 0;

  // Icon for accordion. Changes when open. in the [open]
  --connect__icon-rotate: rotate(0deg);

  padding: var(--connect__details-padding-t) var(--connect__details-padding-r)
    var(--connect__details-padding-b) var(--connect__details-padding-l);
  position: relative;

  > *:not(summary) {
    padding: var(--connect__details-items-state-padding-t, 0)
      var(--connect__details-items-state-padding-r, 0)
      var(--connect__details-items-state-padding-b, 0)
      var(--connect__details-items-state-padding-l, 0);
  }

  &[open] {
    --connect__icon-rotate: rotate(180deg);
    --variant__details-padding-b: var(--connect__spacer-sm);

    *:not(summary) {
      --connect__details-items-state-padding-t: var(--connect__spacer-sm);
      --connect__details-items-state-padding-r: var(--connect__spacer-sm);
      --connect__details-items-state-padding-l: var(--connect__spacer-sm);
    }
  }
}

.connect__summary {
  --connect__summary-bg: var(
    --theme__summary-bg,
    var(--variant__summary-bg, var(--active-color))
  );

  --connect__summary-icon-active-ring: var(
    --theme__summary-icon-active-ring,
    var(--variant__summary-icon-active-ring, var(--connect__primary-mid))
  );

  --connect__summary-padding-y: var(
    --theme__summary-padding-y,
    var(--variant__summary-padding-y, var(--connect__spacer-sm))
  );
  --connect__summary-padding-x: var(
    --theme__summary-padding-x,
    var(--variant__summary-padding-x, var(--connect__spacer-sm))
  );

  // alignment of summary items
  --connect__align-items: var(--theme__align-items, var(--variant__align-items, center));
  --connect__justify-content: var(
    --theme__justify-content,
    var(--variant__justify-content, space-between)
  );

  align-items: var(--connect__align-items);
  background-color: var(--connect__summary-bg);
  border-radius: var(--connect__details-open-radius, var(--connect__details-closed-radius));
  cursor: var(--connect__state-based-pointer, pointer);
  display: flex;
  justify-content: var(--connect__justify-content);
  padding: var(--connect__summary-padding-y) var(--connect__summary-padding-x);

  &::after {
    background-image: var(--connect__dropdown-icon-closed);
    background-position: center center;
    background-repeat: no-repeat;
    background-size: var(--connect__icon-sm) var(--connect__icon-sm);
    border: var(--connect__effects-inner-edge) solid var(--connect__summary-icon-active-ring);
    border-radius: 50%;
    content: '';
    flex-shrink: 0;
    height: var(--connect__icon-md);
    margin-left: var(--connect__spacer-md);
    transform: var(--connect__icon-rotate);
    width: var(--connect__icon-md);
  }

  &::before {
    background: var(--connect__surface-white);
    border-radius: var(--connect__border-radius);
    box-shadow: var(--connect__shadow-lvl-2);
    content: '';
    height: var(--connect__full-h);
    left: 0;
    position: absolute;
    top: 0;
    transition-duration: var(--connect__transition-medium);
    transition-property: visibility, opacity, transform, max-height;
    transition-timing-function: var(--connect__ease-out);
    width: var(--connect__full-w);
    z-index: -1;
  }

  &:hover,
  &:active {
    &::before {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-4);
    }
  }

  &:active:not(:disabled) {
    --connect__inner-status-color-state: var(--connect__primary-mid);
  }

  &:focus-visible:not(:active) {
    &::before {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
    }
  }
}

/* 
.connect__accordion--divider Component

Styles:
  summary + *
    - Adds a divider line after the summary.
*/

.connect__accordion--divider {
  summary {
    & + * {
      --active-color: var(--connect__primary-mid);
      position: relative;

      &::before {
        background: var(--active-color);
        content: '';
        height: var(--connect__effects-inner-edge);
        left: var(--connect__spacer-md);
        position: absolute;
        top: 0;
        width: calc(var(--connect__full-w) - var(--connect__spacer-xl));
      }
    }
  }
}

/* 
.connect__accordion--color Component

Styles:
  [open] .connect__summary
    - Changes active color when accordion is open.
*/

.connect__accordion--color {
  [open] {
    .connect__summary {
      --active-color: var(--connect__primary-mid);
    }
  }
}

/* 
.connect__card Component

Variables related to theme/overrides:
  --connect__card-border-w: Border width of the card.
  --connect__card-border-c: Border color of the card.
  --connect__card-radius: Border radius of the card.
  --connect__card-padding-y: Vertical padding of the card.
  --connect__card-padding-x: Horizontal padding of the card.
  --connect__card-flow: Flex flow direction of the card content.
  --connect__card-gap: Gap between elements inside the card.
  */

.connect__card {
  --connect__card-border-w: var(--theme__card-border-w, var(--connect__spacer-zero));
  --connect__card-border-c: var(--connect__surface-white, transparent);
  --connect__card-radius: var(--theme__border-radius, var(--connect__border-radius));

  --connect__card-padding-y: var(--connect__spacer-sm);
  --connect__card-padding-x: var(--connect__spacer-md);

  --connect__card-flow: var(--theme__card-flow, column wrap);

  --connect__card-gap: var(--theme__card-gap, var(--connect__spacer-sm));

  background-color: var(--connect__surface-white);
  border: var(--connect__card-border-w) solid var(--connect__card-border-c, transparent);
  border-radius: var(--connect__border-radius);
  box-shadow: var(--connect__shadow-lvl-2);
  display: inline-flex;
  flex-flow: var(--connect__card-flow);
  gap: var(--connect__card-gap);
  padding: calc(var(--connect__card-padding-y) - var(--connect__card-border-w))
    calc(var(--connect__card-padding-x) - var(--connect__card-border-w));
  width: var(--connect__full-w);

  .connect__figure,
  .connect__card-header,
  .connect__card-content,
  .connect__card-footer {
    width: var(--connect__full-w);
  }

  header,
  footer {
    display: flex;
  }
}

/* 
.connect__blockquote Component

Variables related to typography:
  --connect__body-md: Font size for medium body text.

Variables related to spacing:
  --connect__spacer-md: Medium spacer for margin.
*/
.connect__blockquote {
  font-size: var(--connect__body-md);
  margin: var(--connect__spacer-md) 0;
}

/* 
.connect__tooltip-wrapper Component

Variables related to transitions:
  --connect__tooltip-opacity: Opacity of the tooltip.
  --connect__tooltip-visibility: Visibility of the tooltip.
  --connect__tooltip-translateY: Vertical translation of the tooltip.
  --connect__tooltip-vertical-translateY-hover: Vertical translation on hover.
  --connect__transition-fast: Duration of the fast transition.
  --connect__ease-out: Timing function for easing out.
*/

.connect__tooltip-wrapper {
  display: inline-block;
  position: relative;

  &:hover {
    .connect__tooltip {
      --connect__tooltip-opacity: var(--connect__opacity-one);
      --connect__tooltip-visibility: visible;
      --connect__tooltip-translateY: var(--connect__tooltip-vertical-translateY-hover, -110%);
      transition-duration: var(--connect__transition-fast);
      transition-property: visibility, opacity, transform;
      transition-timing-function: var(--connect__ease-out);
    }
  }
}

/*
.connect__tooltip Component

Variables related to theme/overrides:
  --connect__tooltip-bg: Background color of the tooltip.
  --connect__tooltip-color: Text color of the tooltip.
  --connect__tooltip-padding-y: Vertical padding inside the tooltip.
  --connect__tooltip-padding-x: Horizontal padding inside the tooltip.
  --connect__tooltip-opacity: Opacity of the tooltip.
  --connect__tooltip-visibility: Visibility of the tooltip.
  --connect__tooltip-transition: Transition effect for the tooltip.
  --connect__tooltip-top: Top position of the tooltip.
  --connect__tooltip-right: Right position of the tooltip.
  --connect__tooltip-left: Left position of the tooltip.
  --connect__tooltip-translateX: Horizontal translation of the tooltip.
  --connect__tooltip-translateY: Vertical translation of the tooltip.
*/

.connect__tooltip {
  --connect__tooltip-bg: var(--theme__tooltip-bg, var(--connect__surface-dark));
  --connect__tooltip-color: var(--theme__tooltip-color, var(--connect__surface-white));

  --connect__tooltip-padding-y: var(--theme__tooltip-padding-y, var(--connect__spacer-xs));
  --connect__tooltip-padding-x: var(--theme__tooltip-padding-y, var(--connect__spacer-sm));

  --connect__tooltip-opacity: var(--connect__opacity-zero);
  --connect__tooltip-visibility: hidden;

  --connect__tooltip-transition: var(--connect__ease-in-out);

  --connect__tooltip-top: var(--connect__tooltip-vertical-top, unset);
  --connect__tooltip-right: var(--connect__tooltip-vertical-right, unset);

  --connect__tooltip-left: var(--connect__tooltip-vertical-left, 50%);

  --connect__tooltip-translateX: var(--connect__tooltip-vertical-translateX, -50%);
  --connect__tooltip-translateY: var(--connect__tooltip-vertical-translateY, -100%);
  align-content: center;

  align-items: center;
  background: var(--connect__tooltip-bg);
  border-radius: var(--connect__inner-radius, 0.25rem);
  box-shadow: var(--connect__elevation-2);
  color: var(--connect__tooltip-color);
  display: inline-block;
  font-size: var(--connect__caption);
  justify-content: center;
  left: var(--connect__tooltip-left);
  line-height: var(--connect__caption-lheight);
  opacity: var(--connect__tooltip-opacity);
  padding: var(--connect__tooltip-padding-y) var(--connect__tooltip-padding-x);
  position: absolute;
  top: 0;
  transform: translate(var(--connect__tooltip-translateX), var(--connect__tooltip-translateY));
  transform-origin: bottom;
  transition-duration: var(--connect__transition-fast);
  transition-property: visibility, opacity, transform;
  transition-timing-function: var(--connect__ease-out);
  visibility: var(--connect__tooltip-visibility);
  white-space: nowrap;
}

/*
.connect__breakout Component

This component is used to create a "breakout" effect, extending an element beyond its container.

Variables:
--connect__breakout-b: Bottom position (theme: --theme__breakout-b, default: 0)
--connect__breakout-l: Left position multiplier (theme: --theme__breakout-l, default: -1)
--connect__breakout-r: Right position multiplier (theme: --theme__breakout-r, default: -1)
--connect__breakout-t: Top position (theme: --theme__breakout-t, default: 0)
--connect__breakout-gutter-w: Gutter width (theme: --theme__gutter-width, default: var(--gutter-width))
--connect__breakout-z: Z-index (theme: --theme__connect__breakout-z, default: 0)

Usage:
- Apply this class to an element to make it break out of its container.
- The element will be positioned absolutely and extend beyond its container's boundaries.
- Use the custom properties to adjust the positioning and z-index as needed.
*/

.connect__breakout {
  --connect__breakout-bg-color: var(--theme__breakout-bg-color, initial);
  --connect__breakout-gutter-w: var(--theme__gutter-width, var(--gutter-width));
  background-color: var(--connect__breakout-bg-color);

  &:not(.connect__linear):not(.connect__halftone) {
    &::after {
      content: unset;
    }
  }

  &:not(.connect__figure) {
    &::before,
    &::after {
      content: '';
      pointer-events: none;
      position: absolute;
    }

    &::before {
      background-color: var(--theme__connect-breakout-bg-color-before, initial);
      bottom: var(--theme__connect-breakout-b-before, 0);
      left: calc(
        var(--connect__breakout-gutter-w) *
          var(--theme__connect-breakout-l-before, var(--connect__spacer-md))
      );
      max-width: 100vw;
      right: calc(var(--connect__breakout-gutter-w) * var(--theme__connect-breakout-r-before, 0));
      top: var(--theme__connect-breakout-t-before, 0);
      width: var(
        --theme__connect-breakout-w-before,
        calc(var(--connect__full-w) + 2 * var(--connect__breakout-gutter-w))
      );
      z-index: var(--theme__connect-breakout-z-before, 0);
    }

    &::after {
      background-color: var(--theme__connect-breakout-bg-color-after, initial);
      bottom: var(--theme__connect-breakout-b-after, 0);
      left: calc(
        var(--connect__breakout-gutter-w) *
          var(--theme__connect-breakout-l-after, var(--connect__spacer__md))
      );
      max-width: 100vw;
      right: calc(var(--connect__breakout-gutter-w) * var(--theme__connect-breakout-r-after, 0));
      top: var(--theme__connect-breakout-t-after, 0);
      width: var(
        --theme__connect-breakout-w-after,
        calc(var(--connect__full-w) + 2 * var(--connect__breakout-gutter-w))
      );

      z-index: var(--theme__connect-breakout-z-after, 0);
    }

    &.connect__linear {
      z-index: var(--connect__linear-z, var(--connect__breakout-z));
    }

    &.connect__halftone {
      z-index: var(--connect__halftone-z, var(--connect__breakout-z));
    }
  }

  &.connect__figure {
    bottom: var(--connect__breakout-b, 0);
    grid-column: unset;
    left: calc(var(--connect__breakout-gutter-w) * var(--connect__breakout-l, -1));
    margin-top: 0;
    position: absolute;
    right: calc(var(--connect__breakout-gutter-w) * var(--connect__breakout-r, -1));
    top: var(--connect__breakout-t);
    z-index: var(--connect__breakout-z, var(--connect__z-1));
  }
}

/*
.connect__header Component

Variables and Theme Options:

1. Padding:
   --connect__header-padding-t: Top padding (theme: --theme__header-padding-t, default: 0)
   --connect__header-padding-r: Right padding (theme: --theme__header-padding-r, default: 0)
   --connect__header-padding-l: Left padding (theme: --theme__header-padding-l, default: 0)
   --connect__header-padding-b: Bottom padding (theme: --theme__header-padding-b, default: var(--connect__spacer-sm))

2. Margin:
   --connect__header-margin-t: Top margin (theme: --theme__header-margin-t, default: 0)
   --connect__header-margin-r: Right margin (theme: --theme__header-margin-r, default: 0)
   --connect__header-margin-b: Bottom margin (theme: --theme__header-margin-b, default: 0)
   --connect__header-margin-l: Left margin (theme: --theme__header-margin-l, default: 0)

3. Borders:
   --connect__header-border-w: Border width (theme: --theme__connect-header-border-w, default: 0)
   --connect__header-border-c: Border color (theme: --theme__connect-header-border-c, default: var(--connect__surface-null))
   --connect__header-border-r: Border radius (theme: --theme__connect-header-border-r, default: 0)

4. Background:
   --connect__header-bg-color: Background color (theme: --theme__header-bg-color, default: var(--connect__connect-gray-c5))
   --connect__header-bg-image: Background image (theme: --theme__header-bg-image, default: none)
   --connect__header-bg-size: Background size (theme: --theme__header-bg-size, default: cover)
   --connect__header-bg-repeat: Background repeat (theme: --theme__header-bg-repeat, default: no-repeat)

5. Breakout Section (::before pseudo-element):
   --connect__header-breakout-bg: Breakout background color (theme: --theme__header-breakout-bg, default: var(--connect__surface-null))
   --connect__header-breakout-l: Left offset (theme: --theme__header-breakout-l, default: -1)
   --connect__header-breakout-w: Width (theme: --theme__header-breakout-w, default: 2)
   --connect__header-breakout-h: Height (theme: --theme__header-breakout-h, default: 100%)

6. After Section (::after pseudo-element):
   --connect__header-breakout-z-after: Z-index (theme: --theme__header-breakout-z-after, default: 1)
   --connect__header-breakout-t-after: Top offset (theme: --theme__header-breakout-t-after, default: 0)
   --connect__header-breakout-r-after: Right offset (theme: --theme__header-breakout-r-after, default: 0)
   --connect__header-breakout-b-after: Bottom offset (theme: --theme__header-breakout-b-after, default: 0)
   --connect__header-breakout-l-after: Left offset (theme: --theme__header-breakout-l-after, default: -1)
   --connect__header-breakout-w-after: Width (theme: --theme__header-breakout-w-after, default: 2)
   --connect__header-breakout-h-after: Height (theme: --theme__header-breakout-h-after, default: 100%)
   --connect__header-content: Content (default: '')

7. Linear Gradient (when .connect__linear class is applied):
   --connect__header-breakout-gradient-direction: Gradient direction (theme: --theme__header-breakout-gradient-direction, default: to right)
   --connect__header-breakout-gradient-color-one: First gradient color (theme: --theme__header-breakout-gradient-color-one, default: var(--connect__surface-null))
   --connect__header-breakout-gradient-color-two: Second gradient color (theme: --theme__header-breakout-gradient-color-two, default: var(--connect__surface-null))

8. Halftone (when .connect__halftone class is applied):
   --connect__header-halftone-bg: Halftone background color (theme: --theme__header-halftone-bg, default: var(--connect__surface-null))
   --connect__header-halftone-dot-color: Halftone dot color (theme: --theme__header-halftone-dot-color, default: var(--connect__surface-white))
   --connect__header-halftone-dot-size: Halftone dot size (theme: --theme__header-halftone-dot-size, default: 2px)
   --connect__header-halftone-dot-space: Halftone dot spacing (theme: --theme__header-halftone-dot-space, default: 22px)

Usage:
- The header uses flexbox for layout unless the grid class is added in the HTML.
- It has a relative positioning to allow for absolute positioning of pseudo-elements.
- The ::before pseudo-element creates a breakout section that extends beyond the header's.
- The ::after pseudo-element can be used for additional styling or content.
- When the .connect__linear class is applied, a linear gradient background is added to the breakout section.
- When the .connect__halftone class is applied, a halftone pattern is applied to the breakout section.
*/

.connect__header {
  --connect__header-padding-t: var(--theme__connect-header-padding-t, 0);
  --connect__header-padding-r: var(--theme__connect-header-padding-r, 0);
  --connect__header-padding-l: var(--theme__connect-header-padding-l, 0);
  --connect__header-padding-b: var(--theme__connect-header-padding-b, var(--connect__spacer-sm));

  --connect__header-margin-t: var(--theme__connect-header-margin-t, 0);

  --connect__header-border-w: var(--theme__connect-header-border-w, var(--connect__spacer-zero));

  // Individual border widths
  --connect__header-border-w-t: var(
    --theme__connect-header-border-w-t,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-r: var(
    --theme__connect-header-border-w-r,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-b: var(
    --theme__connect-header-border-w-b,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-l: var(
    --theme__connect-header-border-w-l,
    var(--connect__header-border-w)
  );

  --connect__header-border-c: var(--theme__connect-header-border-c, var(--connect__surface-null));

  // Single border radius for all corners
  --connect__header-border-r: var(--theme__connect-header-border-r, 0);

  // Individual corner border radii
  --connect__header-border-r-tl: var(
    --theme__connect-header-border-r-tl,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-tr: var(
    --theme__connect-header-border-r-tr,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-br: var(
    --theme__connect-header-border-r-br,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-bl: var(
    --theme__connect-header-border-r-bl,
    var(--connect__header-border-r)
  );

  --connect__header-bg-color: var(--theme__connect-header-bg-color, var(--connect__surface-pale));
  --connect__header-bg-image: var(--theme__connect-header-bg-image, none);
  --connect__header-bg-size: var(--theme__connect-header-bg-size, cover);
  --connect__header-bg-repeat: var(--theme__connect-header-bg-repeat, no-repeat);

  background-color: var(--connect__header-bg-color);
  background-image: var(--connect__header-bg-image);
  background-repeat: var(--connect__header-bg-repeat);
  background-size: var(--connect__header-bg-size);
  border-color: var(--connect__header-border-c);
  border-radius: var(--connect__header-border-r-tl) var(--connect__header-border-r-tr)
    var(--connect__header-border-r-br) var(--connect__header-border-r-bl);
  border-style: solid;
  border-width: var(--connect__header-border-w-t) var(--connect__header-border-w-r)
    var(--connect__header-border-w-b) var(--connect__header-border-w-l);
  display: flex;

  margin-top: var(--connect__header-margin-t);

  padding: var(--connect__header-padding-t) var(--connect__header-padding-r)
    var(--connect__header-padding-b) var(--connect__header-padding-l);
  position: relative;

  > * {
    z-index: var(--connect__z-1);
  }

  &::before,
  &::after {
    position: absolute;
    z-index: -1;
  }

  // Breakout section (pseudo-element)
  &::before {
    // Breakout section background variables
    --connect__header-breakout-bg: var(
      --theme__connect-header-breakout-bg,
      var(--connect__surface-null)
    );

    // Breakout section dimension variables
    --connect__header-breakout-l: var(--theme__connect-header-breakout-l, -1);
    --connect__header-breakout-w: var(--theme__connect-header-breakout-w, 2);
    --connect__header-breakout-w-multi: var(
      --theme__connect-header-breakout-w-multi,
      var(--gutter-width)
    );

    --connect__header-breakout-h: var(--theme__connect-header-breakout-h, var(--connect__full-w));

    // Single border radius for all corners
    --connect__header-border-r-before: var(
      --theme__connect-header-border-r-before,
      var(--connect__header-border-r, 0)
    );

    // Individual corner border radii
    --connect__header-border-r-tl-before: var(
      --theme__connect-header-border-r-tl-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-tr-before: var(
      --theme__connect-header-border-r-tr-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-br-before: var(
      --theme__connect-header-border-r-br-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-bl-before: var(
      --theme__connect-header-border-r-bl-before,
      var(--connect__header-border-r-before)
    );

    // Apply border radius
    // border-radius: var(--connect__header-border-r-tl-before)
    //   var(--connect__header-border-r-tr-before) var(--connect__header-border-r-br-before) var(--connect__header-border-r-bl-before);

    background-color: var(--connect__header-breakout-bg);
    content: '';
    height: var(--connect__header-breakout-h);
    left: calc(var(--connect__header-breakout-l) * var(--gutter-width));
    top: 0;
    width: calc(
      var(--connect__full-w) + var(--connect__header-breakout-w) *
        var(--connect__header-breakout-w-multi)
    );
  }

  &:not(.connect__breakout):not(.connect__linear):not(.connect__halftone) {
    &::before,
    &::after {
      // Breakout section background variables
      --connect__header-breakout-bg: var(
        --theme__connect-header-breakout-bg,
        var(--connect__surface-null)
      );

      // Breakout section dimension variables
      --connect__header-breakout-l: var(--theme__connect-header-breakout-l, -1);
      --connect__header-breakout-w: var(--theme__connect-header-breakout-w, 2);
      --connect__header-breakout-w-multi: var(
        --theme__connect-header-breakout-w-multi,
        var(--gutter-width)
      );

      --connect__header-breakout-h: var(--theme__connect-header-breakout-h, var(--connect__full-h));

      // Single border radius for all corners
      --connect__header-border-r-before: var(
        --theme__connect-header-border-r-before,
        var(--connect__header-border-r, 0)
      );

      // Individual corner border radii
      --connect__header-border-r-tl-before: var(
        --theme__connect-header-border-r-tl-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-tr-before: var(
        --theme__connect-header-border-r-tr-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-br-before: var(
        --theme__connect-header-border-r-br-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-bl-before: var(
        --theme__connect-header-border-r-bl-before,
        var(--connect__header-border-r-before)
      );

      // Apply border radius
      // border-radius: var(--connect__header-border-r-tl-before)
      //   var(--connect__header-border-r-tr-before) var(--connect__header-border-r-br-before) var(--connect__header-border-r-bl-before);

      background-color: var(--connect__header-breakout-bg);
      content: '';
      height: var(--connect__header-breakout-h);
      left: calc(var(--connect__header-breakout-l) * var(--gutter-width));
      top: 0;
      width: calc(
        var(--connect__full-w) + var(--connect__header-breakout-w) *
          var(--connect__header-breakout-w-multi)
      );
    }
  }

  &:not(.connect__halftone) {
    &::after {
      content: unset;
    }
  }

  &.connect__linear,
  &.connect__halftone,
  &.connect__breakout {
    position: relative;
  }
}

/*
.connect__linear Component

This component applies a linear gradient background to an element.

Variables:
--connect__linear-blend-mode: Blend mode for the gradient (theme: --theme__linear-blend-mode, default: normal)
--connect__linear-direction: Direction of the gradient (theme: --theme__linear-direction, default: to right)
--connect__linear-color-one: Start color of the gradient (theme: --theme__linear-color-one, default: var(--connect__surface-null))
--connect__linear-color-two: End color of the gradient (theme: --theme__linear-color-two, default: var(--connect__surface-null))

Usage:
- Apply this class to an element to give it a linear gradient background.
- The gradient is applied using a pseudo-element (::before) to allow for blend mode effects.
- Customize the gradient by adjusting the custom properties.
*/

.connect__linear {
  --connect__linear-blend-mode: var(--theme__linear-blend-mode, normal);
  --connect__linear-direction: var(--theme__linear-direction, to right);
  --connect__linear-color-one: var(--theme__linear-color-one, var(--connect__surface-null));
  --connect__linear-color-two: var(--theme__linear-color-two, var(--connect__surface-null));
  --connect__linear-z: var(--theme--connect__linear-z, initial);

  &::before {
    background-image: linear-gradient(
      var(--connect__linear-direction),
      var(--connect__linear-color-one),
      var(--connect__linear-color-two)
    );
    content: '';
    inset: 0;
    mix-blend-mode: var(--connect__linear-blend-mode);
    position: absolute;
  }

  &.connect__breakout {
    &::after {
      content: '';
      position: absolute;
    }
  }
}

/*
.connect__halftone Component

This component applies a halftone pattern effect to an element using radial gradients.

Variables:
--connect__halftone-solid-bg: Solid background color (theme: --theme__halftone-solid-bg, default: var(--connect__surface-null))
--connect__halftone-blend-mode: Blend mode for the halftone effect (theme: --theme__radial-blend-mode, default: normal)
--radial-color: Color of the halftone dots (theme: --theme__radial-color)
--radial-size: Size of the halftone dots (theme: --theme__radial-size, default: 0.25rem)
--radial-bg-size: Size of the background pattern (theme: --theme__radial-bg-size, default: 0.5rem)

Usage:
- Apply this class to an element to give it a halftone pattern effect.
- The halftone pattern is applied using a pseudo-element (::after) to allow for blend mode effects.
- Customize the halftone effect by adjusting the custom properties.
*/

.connect__halftone {
  --connect__halftone-solid-bg: var(--theme__halftone-solid-bg, var(--connect__surface-null));
  --connect__halftone-blend-mode: var(--theme__radial-blend-mode, normal);
  --radial-color: var(--theme__radial-color);
  --radial-size: var(--theme__radial-size, 0.25rem);
  --radial-bg-size: var(--theme__radial-bg-size, 0.5rem);
  --connect__halftone-z: var(--theme__connect-halftone-z, initial);

  &::after {
    background-color: var(--connect__halftone-solid-bg);

    background-image: radial-gradient(var(--radial-color) 33%, transparent 33%),
      radial-gradient(var(--radial-color) 33%, transparent 33%);
    background-position:
      0 0,
      var(--radial-size) var(--radial-size),
      0 0;
    background-size:
      var(--radial-bg-size) var(--radial-bg-size),
      var(--radial-bg-size) var(--radial-bg-size),
      100% 100%;
    content: '';
    inset: 0;
    mix-blend-mode: var(--connect__halftone-blend-mode);
    position: absolute;
  }
}

/*
.connect__footer Component

This component creates a footer with a breakout section that extends beyond its boundaries.

Variables:
1. Background:
   --connect__footer-breakout-bg: Breakout background color (theme: --theme__footer-breakout-bg, default: var(--connect__surface-mid))

2. Positioning:
   --connect__footer-position: Footer position (theme: --theme__footer-position, default: relative)
   --connect__footer-position-t: Top position (theme: --theme__footer-position, default: 0)

3. Dimensions:
   --connect__footer-h: Footer height (theme: --theme__footer-h, default: var(--connect__spacer-sm))
   --connect__footer-w: Footer width (theme: --theme__footer-w, default: 100vw)

4. Breakout Section:
   --connect__footer-breakout-l: Left offset for breakout (theme: --theme__header-breakout-l, default: -1)
   --connect__footer-breakout-w: Width multiplier for breakout (theme: --theme__header-breakout-w, default: 2)

5. Padding:
   --connect__footer-padding-t: Top padding (theme: --theme__footer-padding-t, default: 0)
   --connect__footer-padding-r: Right padding (theme: --theme__footer-padding-r, default: 0)
   --connect__footer-padding-l: Left padding (theme: --theme__footer-padding-l, default: 0)
   --connect__footer-padding-b: Bottom padding (theme: --theme__footer-padding-b, default: var(--connect__spacer-sm))

6. Margin:
   --connect__footer-margin-t: Top margin (theme: --theme__footer-margin-t, default: 0)

Usage:
- Apply this class to create a footer element with a breakout section.
- The footer has a white background and uses the specified top margin.
- Padding is applied using individual padding variables.
- The footer's position is controlled by --connect__footer-position.
- Width is set to 100% of its container.

Breakout Section:
- Created using the ::after pseudo-element.
- Extends beyond the footer's boundaries.
- Uses the specified background color (--connect__footer-breakout-bg).
- Height is determined by --connect__footer-h.
- Positioned absolutely with top offset of --connect__footer-position-t.
- Width extends beyond the footer using the breakout variables.
*/

.connect__footer {
  --connect__footer-breakout-bg: var(--theme__footer-breakout-bg, var(--connect__surface-mid));

  --connect__footer-position: var(--theme__footer-position, relative);
  --connect__footer-position-t: var(--theme__footer-position, 0);
  --connect__footer-h: var(--theme__footer-h, var(--connect__spacer-sm));
  --connect__footer-w: var(--theme__footer-w, 100vw);

  --connect__footer-breakout-l: var(--theme__header-breakout-l, -1);
  --connect__footer-breakout-w: var(--theme__header-breakout-w, 2);

  // Padding variables
  --connect__footer-padding-t: var(--theme__footer-padding-t, 0);
  --connect__footer-padding-r: var(--theme__footer-padding-r, 0);
  --connect__footer-padding-l: var(--theme__footer-padding-l, 0);
  --connect__footer-padding-b: var(--theme__footer-padding-b, var(--connect__spacer-sm));
  --connect__footer-margin-t: var(--theme__footer-margin-t, 0);

  background-color: var(--connect__surface-white);
  margin-top: var(--connect__footer-margin-t);
  padding: var(--connect__footer-padding-t) var(--connect__footer-padding-r)
    var(--connect__footer-padding-b) var(--connect__footer-padding-l);
  position: var(--connect__footer-position);
  width: var(--connect__full-w);

  &::after {
    background-color: var(--connect__footer-breakout-bg);

    content: '';
    height: var(--connect__footer-h);
    left: calc(var(--connect__footer-breakout-l) * var(--gutter-width));
    position: absolute;
    top: var(--connect__footer-position-t);
    width: calc(var(--connect__full-w) + var(--connect__footer-breakout-w) * var(--gutter-width));
  }
}

/*
.connect__grid Component

Variables related to theme/overrides:
  --default-grid-gap: Default gap between grid items.
  --connect__spacer-xl: Extra large spacer.
  --gutter-width: Width of the gutter.
  --grid-cols: Number of columns in the grid (default: 12).

Grid Container Styles:
  align-content: start;
    - Aligns the content to the start of the grid container.
  display: var(--connect__display-grid);
    - Sets the display to grid.
  gap: var(--theme__content-gap, var(--default-grid-gap));
    - Sets the gap between grid items.
  grid-auto-rows: auto;
    - Automatically sizes rows based on content.
  grid-template-columns: repeat(var(--grid-cols), 1fr);
    - Defines the number of columns and their size.
  grid-template-rows: max-content;
    - Sets the row size to fit content.
  position: relative;
    - Positions the grid container relative to its normal position.
  width: var(--theme__connect-grid-width, var(--connect__full-w));
    - Sets the width of the grid container.

Gutter Styles:
  &.connect__grid-gutter
    padding: var(--connect__gutter-padding-y) var(--connect__gutter-padding-x);
      - Adds padding to the grid container with gutter class.

Nested Grid Styles:
  .connect__grid
    display: var(--connect__display-grid);
      - Sets the display to grid for nested grids.
    grid-column: 1 / -1;
      - Spans the entire width of the parent grid.
    grid-template-columns: subgrid;
      - Uses subgrid for nested grid columns.

Grid Item Styles:
  .connect__grid-item
    grid-column: var(--start-col, 1) / span var(--span-col, 12);
      - Defines the starting column and span for the grid item.
    grid-row: var(--xs-row-start, auto) / span var(--xs-row-span, 1);
      - Defines the starting row and span for the grid item.

Responsive Styles:
  @media (min-width: 30rem)
    .connect__sm
      grid-column: var(--sm-start-col) / span var(--sm-span-col);
      grid-row: var(--sm-row-span, auto);

  @media (min-width: 40.625rem)
    .connect__md
      grid-column: var(--md-start-col) / span var(--md-span-col);
      grid-row: var(--md-row-span, auto);

  @media (min-width: 55rem)
    .connect__lg
      grid-column: var(--lg-start-col) / span var(--lg-span-col);
      grid-row: var(--lg-row-span, auto);

  @media (min-width: 80rem)
    .connect__xl
      grid-column: var(--xl-start-col) / span var(--xl-span-col);
      grid-row: var(--xl-row-span, auto);
*/

.connect__grid {
  --default-grid-gap: var(--connect__spacer-xl);
  --grid-cols: var(--theme-col-amount, 12);
  align-content: start;
  display: var(--connect__display-grid);
  gap: var(--theme__content-gap, var(--default-grid-gap));
  grid-auto-rows: auto;
  grid-template-columns: repeat(var(--grid-cols), 1fr);
  grid-template-rows: max-content;
  position: relative;
  width: var(--theme__connect-grid-width, var(--connect__full-w));

  // Apply margin to all direct children except .connect__grid and section
  > *:not(.connect__grid):not(section):not(.connect__breakout) {
    @media (min-width: 40.625rem) {
      margin-left: var(--connect__spacer-md);
      margin-right: var(--connect__spacer-md);
    }
  }

  &.connect__grid-gutter {
    --connect__gutter-padding-y: var(
      --theme__connect-gutter-padding-y,
      calc(var(--connect__spacer-xl) * 2)
    );
    --connect__gutter-padding-x: var(--theme__connect-gutter-padding-x, var(--gutter-width));
    padding: var(--connect__gutter-padding-y) var(--connect__gutter-padding-x);
  }

  // Make nested .connect__grid elements use subgrid
  .connect__grid {
    display: var(--connect__display-grid);
    grid-column: 1 / -1;
    grid-template-columns: subgrid;
  }
}

.connect__grid-item {
  grid-column: var(--start-col, 1) / span var(--span-col, 12);
  grid-row: var(--xs-row-start, auto) / span var(--xs-row-span, 1);
}

@media (min-width: 30rem) {
  .connect__sm {
    grid-column: var(--sm-start-col) / span var(--sm-span-col);
    grid-row: var(--sm-row-span, auto);
  }
}

@media (min-width: 40.625rem) {
  .connect__md {
    grid-column: var(--md-start-col) / span var(--md-span-col);
    grid-row: var(--md-row-span, auto);
  }
}

@media (min-width: 55rem) {
  .connect__lg {
    grid-column: var(--lg-start-col) / span var(--lg-span-col);
    grid-row: var(--lg-row-span, auto);
  }
}

@media (min-width: 80rem) {
  .connect__xl {
    grid-column: var(--xl-start-col) / span var(--xl-span-col);
    grid-row: var(--xl-row-span, auto);
  }
}

/* 
.connect__stack Component

Variables related to theme/overrides:
  --connect__stack-spacing: Spacing between elements in the stack.
  --connect__stack-direction: Flex direction of the stack.
  --connect__stack-align: Alignment of items in the stack.
  --connect__stack-wrap: Flex wrap property of the stack.
  --connect__justify-content: Justification of content in the stack.
  --connect__paddingX: Horizontal padding of the stack.
  --connect__paddingY: Vertical padding of the stack.

Stack Container Styles:
  .connect__stack {
    align-items: var(--xs-alignItems, start);
      - Aligns items along the cross axis.
    flex-flow: var(--connect__stack-direction, column);
      - Sets the flex direction and wrapping of the stack content.
    flex-wrap: var(--connect__stack-wrap, wrap);
      - Sets the flex wrap property.
    gap: var(--connect__stack-spacing, var(--connect__spacer-sm));
      - Sets the gap between elements inside the stack.
    justify-content: var(--connect__justify-content, start);
      - Sets the justification of content along the main axis.
    padding: var(--connect__paddingY, 0) var(--connect__paddingX, 0);
      - Sets the padding of the stack.


Responsive Styles: To make these responsive, apply sm/md/lg/xl
  --connect__stack-spacing
  --connect__stack-direction
  --connect__stack-align
  --connect__stack-wrap
  --connect__justify-content
  --connect__paddingX
  --connect__paddingY

  examples: 
  --connect__stack-align: var(--sm-alignItems);
  --connect__stack-align: var(--md-alignItems);
  --connect__stack-align: var(--lg-alignItems);
  --connect__stack-align: var(--xl-alignItems);
*/

.connect__stack {
  --default__stack-paddingX: 0;
  --default__stack-paddingY: 0;
  --connect__stack-spacing: var(--xs-spacing);
  --connect__stack-direction: var(--xs-direction);
  --connect__stack-align: var(--xs-alignItems);
  --connect__stack-wrap: var(--xs-flexWrap);
  --connect__justify-content: var(--xs-justifyContent);
  --connect__paddingX: var(--default__stack-padding);
  --connect__paddingY: var(--default__stack-padding);

  align-items: var(--xs-alignItems, start);
  display: flex;
  flex: 1;
  flex-flow: var(--connect__stack-direction, column);
  flex-wrap: var(--connect__stack-wrap, wrap);
  gap: var(--connect__stack-spacing, var(--connect__spacer-sm));
  justify-content: var(--connect__justify-content, start);
  padding: var(--connect__paddingY, 0) var(--connect__paddingX, 0);
  width: var(--connect__full-w);

  &.connect__stack-xs {
    --connect__paddingX: var(--xs-paddingX, 0);
    --connect__paddingY: var(--xs-paddingY, 0);
  }

  @media (min-width: 30rem) {
    &.connect__stack-sm {
      --connect__stack-spacing: var(--sm-spacing);
      --connect__stack-direction: var(--sm-direction);
      --connect__stack-align: var(--sm-alignItems);
      --connect__stack-wrap: var(--sm-flexWrap);
      --connect__justify-content: var(--sm-justifyContent);
      --connect__paddingX: var(--sm-paddingX, 0);
      --connect__paddingY: var(--sm-paddingY, 0);
    }
  }

  @media (min-width: 40.625rem) {
    &.connect__stack-md {
      --connect__stack-spacing: var(--md-spacing);
      --connect__stack-direction: var(--md-direction);
      --connect__stack-align: var(--md-alignItems);
      --connect__stack-wrap: var(--md-flexWrap);
      --connect__justify-content: var(--md-justifyContent);
      --connect__paddingX: var(--md-paddingX, 0);
      --connect__paddingY: var(--md-paddingY, 0);
    }
  }

  @media (min-width: 55rem) {
    &.connect__stack-lg {
      --connect__stack-spacing: var(--lg-spacing);
      --connect__stack-direction: var(--lg-direction);
      --connect__stack-align: var(--lg-alignItems);
      --connect__stack-wrap: var(--lg-flexWrap);
      --connect__justify-content: var(--lg-justifyContent);
      --connect__paddingX: var(--lg-paddingX, 0);
      --connect__paddingY: var(--lg-paddingY, 0);
    }
  }

  @media (min-width: 80rem) {
    &.connect__stack-xl {
      --connect__stack-spacing: var(--xl-spacing);
      --connect__stack-direction: var(--xl-direction);
      --connect__stack-align: var(--xl-alignItems);
      --connect__stack-wrap: var(--xl-flexWrap);
      --connect__justify-content: var(--xl-justifyContent);
      --connect__paddingX: var(--lg-paddingX, 0);
      --connect__paddingY: var(--lg-paddingY, 0);
    }
  }
}

/*
.connect__chip Component

Variables related to theme/overrides:
  --connect__chip-fs: Font size of the chip.
  --connect__chip-lh: Line height of the chip.
  --connect__chip-border-w: Border width of the chip.
  --connect__chip-border-c: Border color of the chip.
  --connect__chip-radius: Border radius of the chip.
  --connect__chip-color: Text color of the chip.
  --connect__chip-bg: Background color of the chip.
  --connect__chip-padding-y: Vertical padding of the chip.
  --connect__chip-padding-x: Horizontal padding of the chip.
*/

.connect__chip {
  --connect__chip-fs: var(--theme__chip-fs, var(--connect__caption));
  --connect__chip-lh: var(--theme__chip-lh, var(--connect__caption-lheight));
  --connect__chip-border-w: var(--theme__chip-border-w, var(--connect__spacer-zero));
  --connect__chip-border-c: var(--connect__surface-white, transparent);
  --connect__chip-radius: var(--theme__border-radius, var(--connect__border-radius));

  --connect__chip-color: var(--active-color, var(--connect__surface-dark));
  --connect__chip-bg: var(--theme__chip-bg, var(--connect__surface-white));

  --connect__chip-padding-y: var(--connect__spacer-xs);
  --connect__chip-padding-x: var(--connect__spacer-md);

  background-color: var(--connect__chip-bg);
  border: var(--connect__chip-border-w) solid var(--connect__chip-border-c, transparent);
  border-radius: var(--connect__chip-radius, 0);
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
  color: var(--theme__button-color, var(--connect__chip-color));
  font-family: var(--connect__font-sans);
  font-size: var(--connect__chip-fs);
  line-height: var(--connect__chip-lh);
  padding: calc(var(--connect__chip-padding-y) - var(--connect__chip-border-w))
    calc(var(--connect__chip-padding-x) - var(--connect__chip-border-w));
  width: var(--connect__chip-w, fit-content);

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
  }
}

/* Connect pill Component

Variables related to theme/overrides:
  --theme__pill-bg: Custom background color for the pill.
  --theme__pill-color: Custom text color for the pill.
  --theme__pill-py: Custom vertical padding for the pill.
  --theme__pill-pl: Custom left padding for the pill.
  --theme__pill-pr: Custom right padding for the pill.
  --theme__connect-pill-fs: Custom font size for the pill text.
  --theme__connect-pill-lh: Custom line height for the pill text.
  --theme__connect-pill-fw: Custom font weight for the pill text.
  --theme__connect-pill-ff: Custom font family for the pill text.
*/

.connect__pill {
  // palette
  --connect__default-pill-bg: var(--connect__cc-purple, var(--connect__purple-s50));
  --connect__default-pill-color: var(--connect__surface-white);
  --connect__pill-bg: var(--theme__pill-bg, var(--connect__default-pill-bg));
  --connect__pill-color: var(--theme__pill-color, var(--connect__default-pill-color));

  // border radius
  --connect__pill-br-tl: var(--connect__spacer-zero);
  --connect__pill-br-tr: var(--connect__heading-lg-lheight, 5rem);
  --connect__pill-br-br: var(--connect__heading-lg-lheight, 5rem);
  --connect__pill-br-bl: var(--connect__spacer-zero);

  // padding
  --connect__pill-py: var(--theme__pill-py, var(--connect__spacer-xs));
  --connect__pill-pl: var(--theme__pill-pl, var(--connect__spacer-md));
  --connect__pill-pr: var(--theme__pill-pr, var(--connect__spacer-lg));

  // typography
  --connect__pill-fs: var(--theme__connect-pill-fs, var(--connect__body-sm));
  --connect__pill-lh: var(--theme__connect-pill-lh, var(--connect__body-sm-lheight));
  --connect__pill-fw: var(--theme__connect-pill-fw, var(--connect__fw-bold));
  --connect__pill-ff: var(--theme__connect-pill-ff, var(--connect__font-sans));

  align-items: center;
  background-color: var(--connect__pill-bg);
  border-radius: var(--connect__pill-br-tl) var(--connect__pill-br-tr) var(--connect__pill-br-br)
    var(--connect__pill-br-bl);
  color: var(--connect__pill-color);
  display: inline-flex;
  font-family: var(--connect__pill-ff);
  font-size: var(--connect__pill-fs);
  font-weight: var(--connect__pill-fw);
  justify-content: center;
  line-height: var(--connect__pill-lh);
  padding: var(--connect__pill-py) var(--connect__pill-pr) var(--connect__pill-py)
    var(--connect__pill-pl);
}

/*
.connect__icon-wrapper Component

Variables related to positioning:
  --connect__feedback-translateY: Vertical translation for feedback icon.
  --connect__feedback-translateX: Horizontal translation for feedback icon.
  --connect__icon-size: Size of the icon, defaults to medium if not specified.


Pseudo-element Styles:
  &::after
    background-image: var(--state-icon);

State Styles:
  &.connect__input-correct
    --state-icon: var(--icon-correct);
      - Sets the icon for the correct state.

  &.connect__input-incorrect
    --state-icon: var(--icon-incorrect);
      - Sets the icon for the incorrect state.

  &.connect__input-shown
    --state-icon: var(--icon-shown);
      - Sets the icon for the shown state.

Child Element State Styles:
  > .connect__select-correct
    --state-icon: var(--icon-correct);
      - Sets the icon for the correct state in child elements.

  > .connect__select-incorrect
    --state-icon: var(--icon-incorrect);
      - Sets the icon for the incorrect state in child elements.

  > .connect__select-shown
    --state-icon: var(--icon-shown);
      - Sets the icon for the shown state in child elements.
*/

.connect__icon-wrapper {
  display: inline-flex;
  flex: 1;
  position: relative;
  width: var(--connect__full-w);

  &::after {
    background-image: var(--state-icon);
    background-repeat: repeat;
    background-size: contain;
    content: '';
    height: var(--connect__icon-size, var(--connect__icon-md));
    position: absolute;
    right: 0;
    top: 0;
    transform: translate(var(--connect__feedback-translateX), var(--connect__feedback-translateY));
    width: var(--connect__icon-size, var(--connect__icon-md));
  }

  &.connect__input-correct {
    --state-icon: var(--icon-correct);
  }

  &.connect__input-incorrect {
    --state-icon: var(--icon-incorrect);
  }

  &.connect__input-shown {
    --state-icon: var(--icon-shown);
  }

  > .connect__select-correct {
    --state-icon: var(--icon-correct);
  }

  > .connect__select-incorrect {
    --state-icon: var(--icon-incorrect);
  }

  > .connect__select-shown {
    --state-icon: var(--icon-shown);
  }
}

/*
.connect__icon Component

Variables related to theme/overrides:
  --icon-fill: Fill color for the icon.
  --icon-stroke: Stroke color for the icon.
  --connect__icon-size: Size of the icon.
  --connect__icon-opacity: Opacity of the icon.

Styles:
  color:
    - Sets the color of the icon using the fill variable.
  height:
    - Sets the height of the icon.
  opacity:
    - Sets the opacity of the icon.
  width:
    - Sets the width of the icon.

SVG Styles:
  svg
    fill: var(--icon-fill);
      - Sets the fill color of the SVG.
    stroke: var(--icon-stroke, transparent);
      - Sets the stroke color of the SVG.

Size Modifiers:
  &-xs
    --connect__icon-size: var(--connect__icon-xs);
      - Sets the icon size to extra small.

  &-sm
    --connect__icon-size: var(--connect__icon-sm);
      - Sets the icon size to small.

  &-md
    --connect__icon-size: var(--connect__icon-md);
      - Sets the icon size to medium.

  &-lg
    --connect__icon-size: var(--connect__icon-lg);
      - Sets the icon size to large.

  &-xl
    --connect__icon-size: var(--connect__icon-xl);
      - Sets the icon size to extra large.

  &-xxl
    --connect__icon-size: var(--connect__icon-xxl);
      - Sets the icon size to extra extra large.
*/

.connect__icon {
  --icon-fill: var(--connect__icon-fill-color, #2d2d2d);
  --icon-stroke: var(--connect__icon-stroke-color, var(--connect__icon-default-stroke-color));
  color: var(--icon-fill);
  height: var(--connect__icon-size);
  opacity: var(--connect__icon-opacity, 1);
  width: var(--connect__icon-size);

  svg {
    fill: var(--icon-fill);
    stroke: var(--icon-stroke, transparent);
  }

  &-xs {
    --connect__icon-size: var(--connect__icon-xs);
  }

  &-sm {
    --connect__icon-size: var(--connect__icon-sm);
  }

  &-md {
    --connect__icon-size: var(--connect__icon-md);
  }

  &-lg {
    --connect__icon-size: var(--connect__icon-lg);
  }

  &-xl {
    --connect__icon-size: var(--connect__icon-xl);
  }

  &-xxl {
    --connect__icon-size: var(--connect__icon-xxl);
  }
}

/*
.connect__choice-label-wrapper Components

Variables related to icon size:
  --connect__icon-size: Size of the icon, set to extra large when .connect__mcq-text is present.
*/

.connect__choice-label-wrapper {
  position: relative;

  &:has(.connect__mcq-text) {
    --connect__icon-size: var(--connect__icon-xl);
  }
}

/*
.connect__choice-label Components
  
  Variables related to radius:
  --connect__label-radius: Border radius of the label.
  --connect__mcq-radius: Radius for MCQ elements.
  --connect__input-dimensions: Dimensions of the input.
  --connect__input-border-w: Border width of the input.


Pseudo-element Styles:
  &::before
    border: var(--connect__input-border-w) solid var(--checkbox-checked-state-based-border-c, var(--connect__primary-mid));
      - Sets the border for the pseudo-element.
    border-radius: var(--connect__mcq-radius);
      - Sets the border radius for the pseudo-element.
*/

.connect__choice-label {
  --connect__label-fs: var(--connect__body-sm);
  --connect__label-lh: var(--connect__body-sm-lheight);
  --connect__label-fw: var(--connect__fw-regular);

  --connect__label-radius: var(--connect__border-radius);

  --connect__mcq-radius: var(
    --theme__mcq-radius,
    var(--variant__mcq-radius, var(--connect__inner-radius))
  );

  --connect__label-color: var(--active-color, var(--connect__surface-dark));

  --connect__label-gap: var(--connect__spacer-md);

  --connect__label-padding-y: calc(var(--connect__total-border) + var(--connect__spacer-xs));
  --connect__label-padding-x: calc(var(--connect__total-border) + var(--connect__spacer-sm));
  --connect__label-justify-content: var(--connect__card-justify, start);
  --connect__label-w: var(--connect__full-w);

  // inputs
  --connect__input-dimensions: var(--connect__caption-lheight);
  --connect__input-border-w: var(--connect__mcq-border-w);

  align-items: center;
  background-color: var(--theme__mcq-bg, var(--connect__surface-white));
  border-radius: var(--connect__label-radius, 0);
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
  color: var(--connect__label-color);
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  font-family: var(--connect__font-sans);
  font-size: var(--connect__label-fs);
  font-weight: var(--connect__label-fw, initial);
  gap: var(--connect__label-gap);
  justify-content: var(--connect__label-justify-content);
  line-height: var(--connect__label-lh);
  padding: var(--connect__label-padding-y) var(--connect__label-padding-x);
  position: relative;
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__label-w, fit-content);

  &::before {
    border: var(--connect__input-border-w) solid
      var(--checkbox-checked-state-based-border-c, var(--connect__primary-mid));
    border-radius: var(--connect__mcq-radius);
    content: '';
    flex-shrink: 0;
    height: var(--connect__input-dimensions);
    padding: var(--connect__spacer-xs);
    width: var(--connect__input-dimensions);
  }

  &:hover {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-4);
  }

  &:active {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
  }
}

.connect__input-no-shadow {
  box-shadow: var(--connect__shadow-null);
}

/*
.connect__mcq-card Component

Variables related to spacing:
  --connect__label-gap: Gap between label elements.
  --connect__label-padding-y: Vertical padding of the label.
  --connect__label-padding-x: Horizontal padding of the label.
  --connect__mcq-input-margin: Margin for MCQ inputs.

Variables related to colors and backgrounds:
  --starting-shadow-color: Initial shadow color.
  --connect__mcq-bg: Background color for MCQ card.


Pseudo-element Styles:
  &::before
    grid-column: 1;
      - Positions the pseudo-element in the first column.
    grid-row: 1;
      - Positions the pseudo-element in the first row.
    left: calc(var(--connect__label-padding-x) / 2);
      - Sets the left position.
    position: var(--connect__absolute);
      - Sets the position to absolute.
    top: calc(var(--connect__label-padding-y) / 2);
      - Sets the top position.
    z-index: var(--connect__z-1);
      - Sets the z-index for stacking order.

  &::after
    background-color: var(--theme__mcq-bg, var(--connect__mcq-bg));
      - Sets the background color.
    border-radius: var(--theme__inner-radius, var(--connect__inner-radius)) var(--connect__spacer-zero);
      - Sets the border radius.
    height: calc(var(--connect__input-dimensions) + var(--connect__mcq-input-margin) + var(--connect__inner-status));
      - Sets the height.
    width: calc(var(--connect__input-dimensions) + var(--connect__mcq-input-margin) + var(--connect__inner-status));
      - Sets the width.

Nested .connect__figure Styles:
  .connect__figure
    --connect__border-radius: var(--connect__inner-radius);
      - Sets the border radius for figures.
    grid-column: 1 / -1;
      - Spans the entire width of the grid.
    grid-row: 1 / -1;
      - Spans the entire height of the grid.

  figcaption
    --connect__fig-py: var(--connect__spacer-xs);
      - Sets vertical padding for figcaption.
    --connect__fig-px: var(--connect__spacer-sm);
      - Sets horizontal padding for figcaption.
*/

.connect__mcq-card {
  --connect__label-gap: var(--connect__spacer-sm);
  --connect__label-padding-y: var(--connect__total-border);
  --connect__label-padding-x: var(--connect__total-border);
  --connect__mcq-bg: var(--connect__surface-white);
  --connect__mcq-input-margin: var(--connect__spacer-xs);

  align-items: flex-start;
  display: var(--connect__display-grid);
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;

  &::before {
    grid-column: 1;
    grid-row: 1;
    left: calc(var(--connect__label-padding-x) / 2);
    position: var(--connect__absolute);
    top: calc(var(--connect__label-padding-y) / 2);
    z-index: var(--connect__z-1);
  }

  &::after {
    background-color: var(--theme__mcq-bg, var(--connect__mcq-bg));
    border-radius: var(--theme__inner-radius, var(--connect__inner-radius))
      var(--connect__spacer-zero);
    content: '';
    height: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
    left: var(--theme__inner-divider-width, var(--connect__inner-divider-width));
    position: absolute;
    top: var(--theme__inner-divider-width, var(--connect__inner-divider-width));
    width: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
  }

  .connect__figure {
    --connect__border-radius: var(--connect__inner-radius);
    grid-column: 1 / -1;
    grid-row: 1 / -1;

    figcaption {
      --connect__fig-py: var(--connect__spacer-xs);
      --connect__fig-px: var(--connect__spacer-sm);
    }
  }
}

/* 
Using the where will resolve any stylelint errors,
specifically the error 
Unexpected qualifying type selector selector-no-qualifying-type "input[type='checkbox'].connect__input"

.connect__input Component

Styles for input elements:
  :where([class^='connect__']) input[type='checkbox'],
  :where([class^='connect__']) input[type='radio']
    - Applies styles to checkbox and radio inputs within connect__ classes.
  inset: 0;
    - Sets the inset to zero, positioning the element at the edges of its container.
  opacity: var(--connect__opacity-zero);
    - Sets the opacity to zero, making the input invisible.

Disabled State:
  &:disabled
    + .connect__choice-label
      - Styles for labels when the input is disabled.
      --active-color: var(--connect__surface-mid);
        - Sets the active color to a neutral mid tone.
      --checkbox-checked-state-based-border-c: var(--connect__disabled-light);
        - Sets the border color for checked state to a light neutral.
      --checkbox-state-based-bg: var(--connect__surface-white);
        - Sets the background color to white.
      --connect__state-based-pointer: var(--connect__disabled-cursor);
        - Sets the cursor to a disabled style.


Checked State:
  &:checked
    +.connect__choice-label
      &::before
        - Styles for labels when the input is checked.
        background-color: var(--checkbox-state-based-bg, var(--connect__primary-mid));
          - Sets the background color for the checked state.
        background-image: var(--checked-state-icon, var(--connect__surface-null));
          - Sets the background image for the checked state.
        background-size: contain;
          - Ensures the background image is contained within the element.
        box-shadow: var(--connect__shadow-inner-null) var(--connect__input-border-w)
          var(--checkbox-state-based-inner-shadow, var(--connect__surface-white)) inset;
          - Applies an inset shadow to the element.

Checked and Disabled State:
  &:checked:disabled
    + .connect__choice-label
      - Styles for labels when the input is both checked and disabled.
      --checkbox-state-based-bg: var(--connect__disabled-light);
      --checkbox-state-based-inner-shadow: var(--connect__surface-white);
      --checkbox-checked-state-based-border-c: var(--connect__disabled-light);

Radio Input Styles:
  :where([class^='connect__']) input[type='radio']
    + label
      --variant__mcq-radius: var(--connect__half-radius);
        - Sets the border radius for radio inputs to half-radius.
*/

:where([class^='connect__']) input[type='checkbox'],
:where([class^='connect__']) input[type='radio'] {
  inset: 0;
  opacity: var(--connect__opacity-zero);
  position: absolute;

  &:disabled {
    + .connect__choice-label {
      --active-color: var(--connect__surface-mid);
      --checkbox-checked-state-based-border-c: var(--connect__disabled-light);
      --checkbox-state-based-bg: var(--connect__surface-white);
      --connect__state-based-pointer: var(--connect__disabled-cursor);
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
    }
  }

  &:checked {
    + .connect__choice-label {
      &::before {
        background-color: var(--checkbox-state-based-bg, var(--connect__primary-mid));
        background-image: var(--checked-state-icon, var(--connect__surface-null));
        background-size: contain;
        box-shadow: var(--connect__shadow-reset) var(--connect__input-border-w)
          var(--checkbox-state-based-inner-shadow, var(--connect__surface-white)) inset;
      }
    }
  }

  &:checked:disabled {
    + .connect__choice-label {
      --checkbox-state-based-bg: var(--connect__disabled-light);
      --checkbox-state-based-inner-shadow: var(--connect__surface-white);
      --checkbox-checked-state-based-border-c: var(--connect__disabled-light);
    }
  }
}

:where([class^='connect__']) input[type='radio'] {
  + label {
    --variant__mcq-radius: var(--connect__half-radius);
  }
}

.connect__progress-wrapper {
  width: var(--connect__full-w);
}

/* 
.connect__progress Component

Variables related to theme/overrides:
  --connect__progress-bg: Background color of the progress bar container.
  --connect__progress-color: Color of the progress bar itself.
  --connect__inner-bar-radius: Border radius of the inner progress bar.
  --connect__progress-bar-radius: Border radius of the outer progress bar container.

Styles:
  appearance: none;
    - Removes default browser styling.
  border-radius: var(--connect__border-radius);
    - Applies border radius to the overall progress bar.

Browser-specific styles:
  &::-webkit-progress-bar
    - Styles for the progress bar container in WebKit browsers.
  &::-webkit-progress-value
    - Styles for the actual progress in WebKit browsers.
  &::-moz-progress-bar
    - Styles for both container and progress in Mozilla Firefox.

Transitions:
  transition:
    inline-size var(--connect__transition-medium) var(--connect__in-out-quad),
    width var(--connect__transition-medium) var(--connect__in-out-quad);
    - transitions to the progress bar width changes.
*/

.connect__progress[value] {
  --connect__progress-outer-shadow-c: var(
    --theme__progress-outer-shadow-c,
    var(--connect__surface-white)
  );

  --connect__progress-bg: var(--theme__progress-bg, var(--connect__surface-white));
  --connect__progress-color: var(--theme__progress-color, var(--connect__cc-purple));

  // border radius
  --connect__inner-bar-radius: var(--theme__inner-bar-radius, 2.5rem);
  --connect__progress-bar-radius: var(--theme__progress-bar-radius, 1rem);

  // This is here because FF needs it here, will ignore in chrome
  appearance: none;
  background: var(--connect__progress-bg);

  border: none;
  border-radius: var(--connect__progress-bar-radius);
  box-shadow: var(--connect__shadow-lvl-0);
  overflow: hidden;
  width: var(--connect__full-w);

  // Outer bars
  &::-webkit-progress-bar {
    background: var(--connect__progress-bg);
    border-radius: var(--connect__progress-bar-radius);
  }

  &::-webkit-progress-value {
    background: var(--connect__progress-color);
    border-radius: var(--connect__inner-bar-radius);
    transition:
      inline-size var(--connect__transition-medium) var(--connect__in-out-quad),
      width var(--connect__transition-medium) var(--connect__in-out-quad);
  }

  &::-moz-progress-bar {
    background: var(--connect__progress-color);

    border-radius: var(--connect__progress-bar-radius);
  }
}

/*
.connect__timer Component

Variables related to typography:
  --connect__timer-fs: Font size of the timer.
  --connect__timer-lh: Line height of the timer.
  --connect__timer-fw: Font weight of the timer.
  --connect__timer-style: Font style of the timer.
  --connect__timer-color: Text color of the timer.
  font-variant-numeric: tabular-nums;
    - Uses tabular numbers for consistent alignment.
*/

.connect__timer {
  --connect__timer-fs: var(--theme__timer-fs, var(--connect__heading-lg));
  --connect__timer-lh: var(--theme__time-lh, var(--connect__heading-lg-lheight));
  --connect__timer-fw: var(--theme__time-fw, 700);
  --connect__timer-style: var(--theme__time-style, normal);
  --connect__timer-color: var(--theme__time-color, var(--connect__surface-dark));

  color: var(--connect__timer-color);
  font-size: var(--connect__timer-fs);
  font-style: var(--connect__timer-style);
  font-variant-numeric: tabular-nums;
  font-weight: var(--connect__timer-fw);
  line-height: var(--connect__timer-lh);
}

/* 
.connect__aside Component

Variables related to theme/overrides:
  --connect__aside-padding-y: Vertical padding of the aside.
  --connect__aside-padding-x: Horizontal padding of the aside.
  --connect__aside-bg: Background color of the aside.
  --connect__aside-w: Width of the aside.
  --connect__aside-align: Alignment of items within the aside.
  --connect__aside-direction: Flex direction of the aside content.
*/

.connect__aside {
  --connect__aside-padding-y: var(--connect__spacer-md);
  --connect__aside-padding-x: var(--connect__spacer-xs);
  --connect__aside-sub-menu-divider-w: calc(var(--connect__spacer-xs) / 2);
  --connect__aside-bg: var(--theme__connect-aside-bg, var(--connect__surface-white));
  --connect__aside-w: var(--theme__aside-w, 3.625rem);
  --connect__aside-h: var(--theme__aside-h, 100vh);
  --variant__marker-color: var(--connect__surface-null);

  align-items: var(--connect__aside-align, center);
  background-color: var(--connect__aside-bg);
  display: flex;
  flex-flow: var(--connect__aside-direction, column wrap);
  height: var(--connect__aside-h);
  justify-content: space-between;
  margin: 0;
  padding: var(--connect__aside-padding-y) var(--connect__aside-padding-x);
  width: var(--connect__aside-w);

  &:has(ul:only-child) {
    justify-content: end;
  }

  .connect__selected {
    &:not(:disabled) {
      --connect__button-bg: var(--connect__brand-pale-magenta);
      --connect__inner-status-color: var(--connect__brand-pale-magenta);
      --connect__icon-fill: var(--connect__brand-deep-magenta);
    }

    &:disabled {
      --state-based-bg: var(--connect__brand-pale-magenta);
      --connect__icon-fill: var(--connect__brand-deep-magenta);
    }
  }

  .connect__list {
    align-items: center;
    display: flex;
    flex-flow: column wrap;
    gap: var(--connect__spacer-xs);
    width: 100%;
  }

  hr {
    --variant__divider-margin-x: var(--connect__spacer-sm);
  }
}

/*
.connect__divider Component

Variables related to theme/overrides:
  --connect__divider-bg: Background color of the divider.
  --connect__divider-h: Height of the divider.
  --connect__divider-w: Width of the divider.
  --connect__divider-br: Border radius of the divider.
  --connect__divider-margin-y: Vertical margin of the divider.
  --connect__divider-margin-x: Horizontal margin of the divider.

Styles:

Usage:
  The .connect__divider class can be applied to an <hr> element or any other
  element that needs to act as a visual separator. The appearance and spacing
  can be customised using the provided CSS variables.

  Divider can be vertical or horizontal
  [aria-orientation='vertical']

Example:
  <hr class="connect__divider">
*/

.connect__divider {
  --connect__divider-bg: var(--theme__divider-bg, var(--connect__gray-c10));
  --connect__divider-h: var(--theme__divider-h, var(--connect__effects-inner-edge));
  --connect__divider-w: var(--theme__divider-w, var(--connect__full-w));
  --connect__divider-br: var(--theme__divider-br, var(--connect__border-radius));
  --connect__divider-margin-y: var(
    --theme__divider-margin-y,
    var(--variant__divider-margin-y, var(--connect__spacer-zero))
  );
  --connect__divider-margin-x: var(
    --theme__divider-margin-x,
    var(--variant__divider-margin-x, var(--connect__spacer-zero))
  );

  background-color: var(--connect__divider-bg);
  border: 0;
  border-radius: var(--connect__divider-br);
  height: var(--variant__divider-h, var(--connect__divider-h));
  margin: var(--connect__divider-margin-y) var(--connect__divider-margin-x);
  padding-bottom: var(--connect__spacer-xs);
  position: relative;
  width: var(--variant__divider-w, var(--connect__divider-w));
  width: calc(
    var(--variant__divider-w, var(--connect__divider-w)) - (var(--connect__divider-margin-x) * 2)
  );

  &[aria-orientation='vertical'] {
    --variant__divider-margin-x: var(--connect__spacer-zero);
    --variant__divider-h: var(--connect__full-h);
    --variant__divider-w: var(--connect__effects-inner-edge);
  }
}

.connect__toolbar-item {
  padding: 0.0625rem;

  > .connect__selected {
    --state-based-bg: var(--connect__primary-light);

    &:not(:disabled) {
      --connect__button-bg: var(--connect__primary-mid);
      --inner-shadow-color: var(--connect__primary-mid);
      --connect__icon-fill: var(--connect__surface-white);

      &:active {
        --inner-shadow-color: var(--connect__surface-white);
      }
    }
    // > .connect__button-menu {
    // }
  }
}

/*
.connect__list Component

Variables related to list styling:

List style type modifiers:
  &.connect__list-none
    --variant__marker-color: var(--connect__surface-null);
      - Sets the marker color to null.

  &.connect__list-circle
    --variant__list-style-type: circle;
      - Sets the list style type to circle.

  &.connect__list-decimal
    --variant__list-style-type: decimal;
      - Sets the list style type to decimal.

  &.connect__list-disc
    --variant__list-style-type: disc;
      - Sets the list style type to disc.

  &.connect__list-roman
    --variant__list-style-type: lower-roman;
      - Sets the list style type to lower-roman.

  &.connect__list-square
    --variant__list-style-type: square;
      - Sets the list style type to square.

  &.connect__list-alpha
    --variant__list-style-type: lower-alpha;
      - Sets the list style type to lower-alpha.
*/

.connect__list {
  --connect__list-item-padding-left: var(--connect__spacer-sm);
  --connect__list-item-margin-left: calc(4ch * 1);
  --connect__list-marker-color: var(
    --theme__list-marker-color,
    var(--variant__marker-color, inherit)
  );

  > .connect__list-item {
    --connect__list-fs: var(--connect__body-sm);
    --connect__list-lh: var(--connect__body-sm-lheight);

    font-size: var(--theme__connect-list-fs, var(--connect__list-fs));
    line-height: var(--theme__connect-list-lh, var(--connect__list-lh));

    &::marker {
      color: var(--connect__list-marker-color);
      font-size: var(--theme__connect-list-item-marker-fs, var(--connect__body-sm));
      line-height: var(--theme__connect-list-item-marker-lh, var(--connect__body-sm-lheight));
    }
  }
}

.connect__list-none {
  --variant__marker-color: var(--connect__surface-null);
}

.connect__list-circle {
  --variant__list-style-type: circle;
}

.connect__list-decimal {
  --variant__list-style-type: decimal;
}

.connect__list-disc {
  --variant__list-style-type: disc;
}

.connect__list-roman {
  --variant__list-style-type: lower-roman;
}

.connect__list-square {
  --variant__list-style-type: square;
}

.connect__list-alpha {
  --variant__list-style-type: lower-alpha;
}

.connect__counters {
  counter-reset: orderedlist;

  &::marker {
    content: counters(list-item, '.') ':';
    font-weight: var(--theme__connect-marker-fw, var(--connect__fw-bold));
  }
}

/*
.connect__paper Component

Styles:
  border-radius: var(--connect__paper-radius);
    - Sets the border radius of the paper component.

Box shadow styles:
  box-shadow:
    - Applies multiple levels of box shadows to the paper component.

Elevation modifiers are the elevation shadow level:

Rounded corners modifier:
  &.connect__rounded-corners
    --variant__paper-radius: var(--connect__border-radius);
      - Sets the paper component to have rounded corners.
*/

.connect__paper {
  --connect__paper-radius: var(
    --theme__paper-radius,
    var(--variant__paper-radius, var(--connect__spacer-zero, 0))
  );

  border-radius: var(--connect__paper-radius);

  &.connect__elevation--1 {
    box-shadow: var(--connect__shadow-lvl--1);
  }

  &.connect__elevation-0 {
    box-shadow: var(--connect__shadow-lvl-0);
  }

  &.connect__elevation-1 {
    box-shadow: var(--connect__shadow-lvl-2);
  }

  &.connect__elevation-2 {
    box-shadow: var(--connect__shadow-lvl-4);
  }

  &.connect__elevation-3 {
    box-shadow: var(--connect__shadow-lvl-6);
  }

  &.connect__rounded-corners {
    --variant__paper-radius: var(--connect__border-radius);
  }
}

/*
:where([class^='connect__']) Component

  &:not(.connect__paper)
    - Applies styles to figures not within a .connect__paper class.

  &:has(img)
    img
      --connect__img-br: 0;
        - Sets the border radius of images within the figure to zero.

*/

:where([class^='connect__']) {
  blockquote {
    font-size: var(--connect__blockquote-fs, var(--connect__body-md));
    font-style: var(--connect__blockquote-font-style, normal);
    margin: var(--connect__blockquote-margin, 0);
    padding-bottom: var(--connect__blockquote-padding-bottom, var(--connect__spacer-sm));
    padding-left: var(--connect__blockquote-padding-left, var(--connect__spacer-md));
    padding-right: var(--connect__blockquote-padding-right, var(--connect__spacer-md));
    padding-top: var(--connect__blockquote-padding-top, var(--connect__spacer-sm));
  }

  figure {
    border-radius: var(--theme__border-radius, var(--connect__border-radius));
    margin: var(--connect__fig-margin, 0);
    overflow: hidden;

    &:has(img) {
      img {
        --connect__img-br: 0;
      }
    }
  }

  figcaption {
    --connect__fig-py: var(--connect__spacer-sm);
    --connect__fig-px: var(--connect__spacer-md);
    font-size: var(--connect__fig-fs, var(--connect__caption));
    line-height: var(--connect__fig-lh, var(--connect__caption-lheight));
    margin-top: var(--connect__fig-mt, 0);
    padding-bottom: var(--connect__fig-pb, var(--connect__fig-py));
    padding-left: var(--connect__fig-pl, var(--connect__fig-px));
    padding-right: var(--connect__fig-pr, var(--connect__fig-px));
    padding-top: var(--connect__fig-pt, var(--connect__fig-py));
    text-align: var(--connect__fig-text-align, left);
    text-wrap: var(--connect__fig-text-wrap, initial);
  }
}

/*
Disabled State Styles for Connect Components

Variables related to disabled state:
  --active-color: Color used when the component is active, set to disabled color.
  --connect__icon-fill-color: Fill color for icons, set to disabled icon fill.
  --checkbox-state-based-bg: Background color for checkbox state, set to neutrals white.
  --checkbox-state-based-inner-shadow: Inner shadow for checkbox state, set to state-based background.
  --connect__state-based-pointer: Cursor style for state-based interactions, set to disabled cursor.
  --state__connect-dropdown-icon: Icon state for dropdowns, set to variant-specific dropdown icon.

Styles:
  Applies styles to all elements with classes containing 'connect_' when they are disabled.
*/

[class*='connect_']:disabled {
  --active-color: var(--connect__disabled-mid);
  --connect__icon-fill-color: var(--connect__disabled-light);
  --checkbox-state-based-bg: var(--connect__surface-white);
  --checkbox-checked-state-based-border-c: var(--connect__disabled-light);
  --checkbox-state-based-inner-shadow: var(--state-based-bg);
  --connect__state-based-pointer: var(--connect__disabled-cursor);
  --state__connect-dropdown-icon: var(--state__variant-connect-dropdown-icon);
}

/* 
Styles for elements with classes containing '-correct'

Variables:
  --connect__mcq-starting-shadow-color: Initial shadow color for multiple-choice questions.
  --state-icon: Icon used to represent the state.
  --state-based-bg: Background color based on the state.
  --checkbox-state-based-bg: Background color for the state of checkboxes.
  --checkbox-checked-state-based-border-c: Border color for checked state of checkboxes.
  --grade-checkbox-checked-state-based-border-c: Fallback border color for checked state of checkboxes.
  --connect__surface-white: Neutral white color.
  --checked-state-icon: Icon used for the checked state.


Styles:
  [class*='-correct'],
  [class*='-correct']:disabled {
    --connect__mcq-starting-shadow-color: transparent;
      - Sets the initial shadow color for multiple-choice questions to transparent.
    --state-icon: var(--icon-correct);
      - Sets the icon used to represent the state to the 'correct' icon.
    --state-based-bg: var(--connect__correct-pale);
      - Sets the background color based on the state to the correct pale color.
    --checkbox-state-based-bg: var(--connect__correct-mid);
      - Sets the background color for the state of checkboxes to the correct mid color.
    --checkbox-checked-state-based-border-c: var(
      --grade-checkbox-checked-state-based-border-c,
      var(--connect__surface-white)
    );
      - Sets the border color for the checked state of checkboxes, with a fallback to a neutral white color.
    --checked-state-icon: var(--checked-correct);
      - Sets the icon used for the checked state to the 'correct' icon.
  }
}
*/

[class*='-correct'],
[class*='-correct']:disabled {
  --connect__inner-status-color: var(--connect__correct-mid);
  --state-icon: var(--icon-correct);
  --state-based-bg: var(--connect__correct-pale);
  --checkbox-state-based-bg: var(--connect__correct-mid);
  --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
  --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
  --checked-state-icon: var(--checked-correct);
}

/* 
Styles for elements with classes containing '-incorrect'

These styles apply to elements with classes that include '-incorrect'.
They use CSS variables extensively to allow for easy theming and state-driven changes.

Variables:
  --connect__mcq-starting-shadow-color: Initial shadow color for multiple-choice questions.
  --state-icon: Icon used to represent the state.
  --state-based-bg: Background color based on the state.
  --connect__inner-status-color-state: State-based inner status color.
  --checkbox-state-based-bg: Background color for the state of checkboxes.
  --checkbox-checked-state-based-border-c: Border color for checked state of checkboxes.
  --grade-checkbox-checked-state-based-border-c: Fallback border color for checked state of checkboxes.
  --connect__surface-white: Neutral white color.
  --checked-state-icon: Icon used for the checked state.

Styles:
  [class*='-incorrect'],
  [class*='-incorrect']:disabled {
    --connect__mcq-starting-shadow-color: transparent;
      - Sets the initial shadow color for multiple-choice questions to transparent.
    --state-icon: var(--icon-incorrect);
      - Sets the icon used to represent the state to the 'incorrect' icon.
    --state-based-bg: var(--color-incorrect-bg);
      - Sets the background color based on the state to the incorrect background color.
    --connect__inner-status-color-state: var(--color-incorrect-bg);
      - Sets the state-based inner status color to the incorrect background color.
    --checkbox-state-based-bg: var(--checked-incorrect-bg);
      - Sets the background color for the state of checkboxes to the incorrect background color.
    --checkbox-checked-state-based-border-c: var(
      --grade-checkbox-checked-state-based-border-c,
      var(--connect__surface-white)
    );
      - Sets the border color for the checked state of checkboxes, with a fallback to a neutral white color.
    --checked-state-icon: var(--checked-incorrect);
      - Sets the icon used for the checked state to the 'incorrect' icon.
  }
}
*/

[class*='-incorrect'],
[class*='-incorrect']:disabled {
  --connect__inner-status-color-state: var(--connect__incorrect-mid);
  --state-icon: var(--icon-incorrect);
  --state-based-bg: var(--color-incorrect-bg);
  --checkbox-state-based-bg: var(--checked-incorrect-bg);
  --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
  --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
  --checked-state-icon: var(--checked-incorrect);
}

/* 
Styles for elements with classes containing '-shown'
Variables:
  --connect__mcq-starting-shadow-color: Initial shadow color for multiple-choice questions.
  --starting-shadow-color: Initial shadow color.
  --state-based-bg: Background color based on the state.
  --state-icon: Icon used to represent the state.
  --checkbox-checked-state-based-border-c: Border color for checked state of checkboxes.
  --grade-checkbox-checked-state-based-border-c: Fallback border color for checked state of checkboxes.
  --connect__surface-white: Neutral white color.
  --checkbox-state-based-bg: Background color for the state of checkboxes.
  --connect__surface-dark: Neutral dark color.
  --checked-state-icon: Icon used for the checked state.

Styles:
  [class*='-shown'],
  [class*='-shown']:disabled {
    --connect__mcq-starting-shadow-color: transparent;
      - Sets the initial shadow color for multiple-choice questions to transparent.
    --starting-shadow-color: var(--connect__surface-dark);
      - Sets the initial shadow color to a neutral dark color.
    --state-based-bg: var(--connect__surface-white);
      - Sets the background color based on the state to a neutral white color.
    --state-icon: var(--icon-shown);
      - Sets the icon used to represent the state to the 'shown' icon.
    --checkbox-checked-state-based-border-c: var(
      --grade-checkbox-checked-state-based-border-c,
      var(--connect__surface-white)
    );
      - Sets the border color for the checked state of checkboxes, with a fallback to a neutral white color.
    --checkbox-state-based-bg: var(--connect__surface-dark);
      - Sets the background color for the state of checkboxes to a neutral dark color.
    --checked-state-icon: var(--checked-correct);
      - Sets the icon used for the checked state to the 'correct' icon.
  }
}

*/
[class*='-shown'],
[class*='-shown']:disabled {
  --connect__inner-status-color: var(--connect__surface-mid);
  --starting-shadow-color: var(--connect__surface-dark);
  --state-based-bg: var(--connect__surface-white);
  --state-icon: var(--icon-shown);
  --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
  --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
  --checkbox-state-based-bg: var(--connect__surface-dark);
  --checked-state-icon: var(--checked-correct);
}

[class*='-selected'] {
  --connect__inner-status-color-state: var(--connect__primary-mid);
}

/* 
These styles apply to elements with classes that include '-correct', '-incorrect', or '-shown'.

Variables:
  --active-color: color used for active state.
  --connect__surface-mid: Neutral mid color.
  --connect__state-based-pointer: Cursor style when the element is disabled.
  --connect__surface-null: Null neutral color.

Styles:
    &:disabled {
      --active-color: var(--connect__surface-mid);
        - Sets the active color to a neutral mid color when the element is disabled.
    }
    --active-color: var(--connect__surface-mid);
      - Sets the active color to a neutral mid color.
    --connect__state-based-pointer: not-allowed;
      - Sets the cursor style to 'not-allowed' when the element is disabled.
  }
}
*/

[class*='-correct'],
[class*='-incorrect'],
[class*='-shown'] {
  --active-color: var(--connect__disabled-mid);
  --connect__state-based-pointer: var(--connect__disabled-cursor);
  --state__connect-dropdown-icon: var(--state__variant-connect-dropdown-icon);
}
