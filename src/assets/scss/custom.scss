@import '../css/source.css';

/*
FALLBACK VALUE GUIDE: when to use inherit vs initial

inherit ensures that children respect the parent's styling.
initial ensures that properties are reset to their default values 
  .ideal for resetting styles to avoid unintended inherited styles


| Property Type                                | Fallback |
|----------------------------------------------|----------|
| Color, font size/ family, line height        | inherit  |
| Fixed component backgrounds                  | initial  |
| Reset borders/shadows/z-index                | initial  |
| Opacity, visibility                          | inherit  |
| Flexible layout alignment (Flex / Grid)      | inherit  |
| Positioning layout alignment (Absolute)      | initial  |
| Font family and weight (nested text)         | inherit  |
| Background color (for reset purposes)        | initial  |
| Border styling (reset)                       | initial  |
| Font style / weight / variant / wrap / align | initial  |
*/

/* 
  SHADOW SELECTION GUIDE: when to use a shadow
  There are three main shadow types in the system
  1: --connect__effects-shadow
  2: --connect__inner-shadow
  3: --connect__shadow-null
  4: --connect__shadow-lvl-focus
  4: --connect__shadow-lvl-active

  There are 9 shadow elevations ranging from minus 2 to 6
  minus elevations have --1/--2 and positive elevations have -1/-2/-3 etc
  Shadow types and shadow elevations work together. 
  A shadow elevation does not require a shadow type

|---------------------------------------------------------------------------|
| Component                                  | Shadow Type                  |
|---------------------------------------------------------------------------|
| Interactive components:                    | --connect__effects-shadow    |
|   elements that takes visual status line   |                              |
|   when correct / incorrect/ shown          |                              |     
|---------------------------------------------------------------------------|
| Inner Shadow components:                   | --connect__inner-shadow      |
|   elements that takes inner shadows        |                              |
|   these components can take a              |                              |
|   solid bg for state but no line           |                              |
|---------------------------------------------------------------------------|
| Components with no definer line:            | --connect__shadow-null       |
|   elements that takes no definer line       |                              |
|---------------------------------------------------------------------------|
| Focus Shadow components:                   | --connect__shadow-lvl-focus  |
|   elements that takes focus shadows        |                              |
|---------------------------------------------------------------------------|
| Active Shadow components:                  | --connect__shadow-lvl-active |
|   elements that takes active shadows       |                              |
|---------------------------------------------------------------------------|
*/

/* 
.connect__button Component

Buttons take variables in the following format
  1: theme variable for external theming
  2: variant variables for button tweaks e.g speech to text
  3: state variables, represents a visual state
  3.1 Secondary Buttons: state variables
      Variant = --connect__inner-status-color
      State --connect__inner-status-color-state

/*
| Property            | Theme                        | Variant/State                 | Fallback / Default                                       |
|---------------------|------------------------------|-------------------------------|----------------------------------------------------------|
| Font size           | --theme__btn-fs              | --variant__btn-fs             | --connect__body-sm                                       |
| Line height         | --theme__btn-lh              | --variant__btn-lh             | --connect__body-sm-lheight                               |
| Font weight         | --theme__btn-fw              | --variant__btn-fw             | --connect__fw-regular                                    |
| Text transform      | --theme__btn-text-transform  | --variant__btn-text-transform | --connect__text-capitalize                               |
| Background color    | --theme__btn-bg              | --state__btn-bg               | --connect__primary-mid                                   |
| Border color        | --theme__btn-border-c        | --variant__btn-border-c       | --connect__surface-null                                 |
| Gap                 | --theme__btn-gap             | --variant__btn-gap            | --connect__spacer-sm                                     |
| Padding X           | --theme__btn-padding-x       | --variant__btn-padding-x      | var(--connect__spacer-sm) - var(--connect__btn-border-w) |
| Padding Y           | --theme__btn-padding-y       | --variant__btn-padding-y      | var(--connect__spacer-sm) - var(--connect__btn-border-w) |
| Flex align          | --theme__btn-align           | --variant__btn-align          | center                                                   |
| Flex justify        | --theme__btn-justify         | --variant__btn-justify        | space-between                                            |
| Border radius       | --theme__btn-border-radius   | --variant__btn-border-radius  | --connect__border-radius                                 |
| Height              | --theme__btn-h               | --variant__btn-h              | auto                                                     |
| Icon Fill           | --theme__icon-fill            | --state-based-icon-fill        | --connect__icon-fill                                      |
| Cursor              |                              |                               | pointer                                                  |
*/

.connect__button {
  --connect__btn-text-transform: var(--theme__btn-transform, var(--connect__text-capitalize));
  --connect__btn-border-w: var(
    --theme__btn-border-w,
    var(--variant__btn-border-w, var(--connect__spacer-zero))
  );

  --connect__btn-padding-y: var(
    --theme__btn-padding-y,
    var(--variant__btn-padding-y, calc(var(--connect__spacer-sm) - var(--connect__btn-border-w)))
  );
  --connect__btn-padding-x: var(
    --theme__btn-padding-x,
    var(--variant__btn-padding-x, calc(var(--connect__spacer-md) - var(--connect__btn-border-w)))
  );

  --icon__fill-color: var(
    --theme__icon-fill,
    var(--state-based-icon-fill, var(--connect__icon-fill))
  );

  background-color: var(
    --theme__btn-bg,
    var(--variant__btn-bg, var(--state-based-bg, var(--connect__primary-mid)))
  );
  border: var(--connect__btn-border-w) solid
    var(--theme__btn-border-c, var(--variant__btn-border-c, var(--connect__surface-null)));
  border-radius: var(
    --theme__btn-border-radius,
    var(--variant__btn-border-radius, var(--connect__border-radius))
  );
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
  color: var(--theme__btn-color, var(--active-color, var(--connect__surface-dark)));
  cursor: var(--connect__state-based-pointer, pointer);
  display: grid;
  // flex-flow: var(--theme__btn-flow, var(--variant__btn-flow, row wrap));
  font-family: var(--connect__font-sans);
  font-size: var(--theme__btn-fs, var(--variant__btn-fs, var(--connect__body-sm)));
  font-weight: var(--theme__btn-fw, var(--variant__btn-fw, var(--connect__fw-regular, initial)));
  gap: var(--theme__btn-gap, var(--variant__btn-gap, var(--connect__spacer-sm)));
  grid-auto-columns: max-content;
  height: var(--connect__btn-h, auto);
  justify-content: var(--theme__btn-justify, var(--variant__btn-justify, space-between));
  line-height: var(--theme__btn-lh, var(--variant__btn-lh, var(--connect__body-sm-lheight)));
  padding: var(--connect__btn-padding-y) var(--connect__btn-padding-x);
  place-items: var(--theme__btn-align, var(--variant__btn-align, center)) center;
  text-transform: var(--connect__btn-text-transform, initial);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow, fill, stroke;
  transition-timing-function: var(--connect__ease-out);
  width: var(--connect__btn-w, auto);

  &:not(:disabled) {
    &:hover {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-4);
    }

    &:active {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
    }

    &:focus-visible:not(:active) {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
    }
  }

  * {
    grid-row: 1;

    &:not(svg):not(span) {
      grid-column: 1 / span 2;
    }
  }

  span {
    grid-column: 1 / span 2;
  }
  svg:first-child:last-child {
    grid-column: 1 / span 2;
  }
  &:has(svg:first-child) {
    svg {
      grid-column: 1;
      justify-self: end;
    }
    span {
      grid-column: 2;
      justify-self: start;
    }
  }
  &:has(svg:last-child) {
    svg {
      grid-column: 2;
      justify-self: start;
    }
    span {
      grid-column: 1;
      justify-self: end;
    }
  }
  .connect__icon {
    --connect__icon-fill-color: var(
      --variant__icon-fill,
      var(--state__based-icon-fill, var(--icon__fill-color))
    );
  }

  &-primary {
    --active-color: var(--connect__surface-white);
    --connect__icon-fill: var(--active-color);

    &.connect__feedback-correct {
      --connect__inner-status-color-state: var(--connect__surface-null);
      --state-based-icon-fill: var(--connect__correct-mid);
    }

    &.connect__feedback-incorrect {
      --connect__inner-status-color-state: var(--connect__surface-null);
    }

    &:disabled {
      --active-color: var(--connect__surface-white);
      --variant__icon-fill: var(--active-color);
      --variant__btn-bg: var(--connect__disabled-light);
    }
  }

  &-secondary {
    --state-based-bg: var(--connect__surface-white);
    --active-color: var(--connect__primary-mid);
    --connect__icon-fill: var(--active-color);
    --connect__inner-status-color: var(--connect__primary-mid);

    &:disabled {
      --variant__btn-bg: var(--connect__surface-white);
      --variant__icon-fill: var(--connect__disabled-light);
      --connect__inner-status-color-state: var(--connect__surface-pale);
    }

    &.connect__feedback-incorrect {
      --state-based-bg: var(--connect__surface-white);
    }

    &.connect__feedback-correct {
      --state-based-bg: var(--connect__surface-white);
      --state-based-icon-fill: var(--connect__correct-mid);
      --connect__inner-status-color: var(--connect__correct-light);
    }
  }

  &-incorrect {
    &:disabled {
      --state-based-bg: var(--color-incorrect-bg);
    }
  }

  &-menu {
    --variant__btn-bg: var(--connect__surface-null);
    --connect__inner-status-color: var(--connect__surface-null);
    --icon__fill-color: var(--variant__icon-fill-color, var(--connect__surface-dark));
    --variant__btn-padding-x: var(--connect__spacer-sm);

    box-shadow: var(--connect__shadow-null);

    &:not(:disabled) {
      &:hover {
        --variant__btn-bg: var(--connect__surface-white);
        --connect__inner-status-color: var(--connect__surface-white);
        box-shadow: var(--connect__shadow-lvl-2);
      }

      &:active {
        box-shadow: var(--connect__shadow-null);
      }
    }

    &:disabled {
      --icon__fill-opacity: var(--connect__state-opacity);
      --variant__icon-fill-color: var(--connect__disabled-mid);
      --connect__state-based-pointer: var(--connect__disabled-cursor);
    }
  }

  &-loading > svg {
    animation: connect-loading 0.85s linear infinite;
  }

  &-media {
    box-shadow: var(--connect__shadow-null);

    &.connect__media-active:not(:disabled) {
      --state-based-bg: var(--connect__error-mid);
    }
  }

  &.connect__feedback-correct,
  &.connect__feedback-incorrect {
    &:hover,
    &:active {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
    }
  }
}

@keyframes connect-loading {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/*
| Property            | Theme                        | Variant/State                  | Fallback / Default                                         |
|---------------------|------------------------------|--------------------------------|------------------------------------------------------------|
| Font size           | --theme__input-fs            | --variant__input-fs            | --connect__body-sm                                         |
| Line height         | --theme__input-lh            | --variant__input-lh            | --connect__body-sm-lheight                                 |
| Background color    | --theme__input-bg            | --state__btn-bg                | --connect__surface-white                                   |
| Border color        | --theme__input-border-c      | --variant__input-border-c      | --connect__surface-null                                    |
| Padding X           | --theme__input-padding-x     | --variant__input-padding-x     | var(--connect__spacer-md) - var(--connect__input-border-w) |
| Padding Y           | --theme__input-padding-y     | --variant__input-padding-y     | var(--connect__spacer-sm) - var(--connect__input-border-w) |
| Border radius       | --theme__input-border-radius | --variant__input-border-radius | --connect__border-radius                                   |
| Width               | --connect__btn-w             | --variant__input-w             | fit-content                                                 |
*/

.connect__input {
  --connect__input-border-w: var(
    --theme__input-border-w,
    var(--variant__input-border-w, var(--connect__spacer-zero))
  );
  --connect__input-padding-y: var(
    --theme__input-padding-y,
    var(
      --variant__input-padding-y,
      calc(var(--connect__spacer-sm) - var(--connect__input-border-w))
    )
  );
  --connect__input-padding-x: var(
    --theme__input-padding-x,
    var(
      --variant__input-padding-x,
      calc(var(--connect__spacer-md) - var(--connect__input-border-w))
    )
  );

  background-color: var(
    --theme__input-bg,
    var(--variant__input-bg, var(--state-based-bg, var(--connect__surface-white)))
  );
  border: var(--connect__input-border-w) solid
    var(--theme__input-border-c, var(--variant__input-border-c, var(--connect__surface-null)));
  border-radius: var(--connect__border-radius);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
  caret-color: var(--connect__primary-mid);
  color: var(--theme__input-color, var(--active-color, var(--connect__surface-dark)));
  cursor: var(--connect__state-based-pointer, text);
  font-family: var(--connect__font-sans);
  font-size: var(--theme__input-fs, var(--variant__input-fs, var(--connect__body-sm)));
  line-height: var(--theme__input-lh, var(--variant__input-lh, var(--connect__body-sm-lheight)));
  padding: calc(var(--connect__input-padding-y) - var(--connect__input-border-w))
    calc(var(--connect__input-padding-x) - var(--connect__input-border-w));
  position: relative;
  resize: var(--resize, none);
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__input-width, var(--connect__full-w));

  &:not(:disabled):not(.connect__selected) {
    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--4);
    }
  }

  &:focus-visible:not(.connect__selected) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  &::placeholder {
    color: var(--connect__surface-mid);
    font-style: var(--connect__style-italic);
  }

  &-resize {
    --resize: vertical;

    &:disabled {
      resize: none;
    }
  }

  &.connect__selected {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);

    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);
    }
  }

  &.connect__input-clear {
    padding-right: calc(var(--connect__spacer-md) * 3);
    + .connect__input-clear-button {
      --connect__input-clear-button-bg: transparent;
      --connect__icon-fill-color: var(--connect__white);

      align-items: center;
      background-color: var(--connect__input-clear-button-bg);
      border: var(--connect__spacer-zero) solid var(--connect__surface-null);
      border-radius: 50%;
      cursor: pointer;
      display: var(--connect__display-flex, flex);
      height: var(--connect__input-clear-button-size, --connect__unset);
      justify-content: center;
      margin-right: var(--connect__spacer-sm);
      margin-top: var(--connect__spacer-sm);
      opacity: var(--connect__input-clear-button-opacity, var(--connect__opacity-zero));
      position: absolute;
      transition: opacity var(--connect__transition-rapid) var(--connect__ease-out);
      width: var(--connect__input-clear-button-size, --connect__unset);

      &.connect__input-clear-button-visible {
        --connect__input-clear-button-bg: var(--connect__gray-c35);
        --connect__input-clear-button-size: calc(var(--connect__spacer-lg) * 1.25);
        --connect__input-clear-button-opacity: var(--connect__opacity-one);

        transition: opacity var(--connect__transition-rapid) var(--connect__ease-out);
      }
    }
  }
}

/* 
.connect__select Component

/*
| Property            | Theme                         | Variant/State                   | Fallback / Default                                         |
|---------------------|-------------------------------|---------------------------------|------------------------------------------------------------|
| Font size           | --theme__select-fs            | --variant__select-fs            | --connect__body-sm                                         |
| Line height         | --theme__select-lh            | --variant__select-lh            | --connect__body-sm-lheight                                 |
| Background color    | --theme__select-bg            | --state__btn-bg                 | --connect__surface-white                                   |
| Border color        | --theme__select-border-c      | --variant__select-border-c      | --connect__surface-null                                    |
| Padding X           | --theme__select-padding-x     | --variant__select-padding-x     | var(--connect__spacer-md) - var(--connect__select-border-w)|
| Padding Y           | --theme__select-padding-y     | --variant__select-padding-y     | var(--connect__spacer-sm) - var(--connect__select-border-w)|
| Border radius       | --theme__select-border-radius | --variant__select-border-radius | --connect__border-radius                                   |
| Width               | --connect__btn-w              | --variant__select-w             | fit-content                                                 |
| Resize              |                               | Resize                          | none                                                       |
*/

.connect__select {
  appearance: none;
  background-color: var(
    --theme__select-bg,
    var(--variant__select-bg, var(--state-based-bg, var(--connect__surface-white)))
  );
  background-image: var(--state__connect-dropdown-icon, var(--connect__dropdown-icon-closed));
  background-position: calc(var(--connect__full-w) - var(--connect__spacer-sm));
  background-repeat: no-repeat;
  background-size: var(--connect__icon-md);
  border: var(--connect__spacer-zero) solid var(--connect__surface-null);
  border-radius: var(--connect__border-radius);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  font-size: var(--theme__select-fs, var(--variant__select-fs, var(--connect__body-sm)));
  font-weight: var(--theme__select-fw, var(--variant__select-fw, var(--connect__fw-regular)));
  line-height: var(--theme__select-lh, var(--variant__select-lh, var(--connect__body-sm-lheight)));
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  padding-right: calc(var(--connect__spacer-sm) + var(--connect__icon-md));
  position: relative;
  width: var(--connect__full-w);

  &:not(:disabled) {
    &:hover,
    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--4);
    }
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  &:active:not(:disabled) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);
  }

  &::-ms-expand {
    display: var(--connect__display-none);
  }
}

/* 
.connect__accordion Component

Variables related to theme/overrides:
  --connect__effects-inner-edge: Inner edge effect size grade banded value used to margin top.
  --connect__details-padding-t/r/b/l: Padding for the details section.
  --connect__details-closed-radius: Border radius when details are closed.
  --connect__details-open-radius: Border radius when details are open.
  --connect__icon-rotate: Rotation for the accordion icon.
  --connect__summary-bg: Background color of the summary.
  --connect__summary-icon-active-ring: Active ring color for the summary icon.
  --connect__summary-padding-y/x: Padding for the summary.
  --connect__align-items: Alignment of summary items.
  --connect__justify-content: Justification of summary items.
*/

.connect__accordion {
  display: flex;
  flex-flow: column wrap;
  gap: var(--connect__effects-inner-edge);
}

.connect__details {
  // border radius for details based on open closed
  --connect__details-closed-radius: var(--connect__border-radius);
  --connect__details-open-radius: var(--connect__border-radius) var(--connect__border-radius) 0 0;

  // Icon for accordion. Changes when open. in the [open]
  --connect__icon-rotate: rotate(0deg);

  padding: var(--theme__details-padding-t, var(--variant__details-padding-t, 0))
    var(--theme__details-padding-r, var(--variant__details-padding-r, 0))
    var(--theme__details-padding-b, var(--variant__details-padding-b, 0))
    var(--theme__details-padding-l, var(--variant__details-padding-l, 0));
  position: relative;

  > *:not(summary) {
    padding: var(--connect__spacer-sm) var(--connect__spacer-sm) var(--connect__spacer-zero)
      var(--connect__spacer-sm);
  }

  &[open] {
    --connect__icon-rotate: rotate(180deg);
    --variant__details-padding-b: var(--connect__spacer-sm);
  }
}

.connect__summary {
  align-items: var(--theme__align-items, var(--variant__align-items, center));
  border-radius: var(--connect__details-open-radius, var(--connect__details-closed-radius));
  cursor: var(--connect__state-based-pointer, pointer);
  display: flex;
  justify-content: var(--theme__justify-content, var(--variant__justify-content, space-between));

  padding: var(
      --theme__summary-padding-y,
      var(--variant__summary-padding-y, var(--connect__spacer-sm))
    )
    var(--theme__summary-padding-x, var(--variant__summary-padding-x, var(--connect__spacer-sm)));

  &::after {
    background-image: var(--connect__dropdown-icon-closed);
    background-position: center center;
    background-repeat: no-repeat;
    background-size: var(--connect__icon-sm) var(--connect__icon-sm);
    border: var(--connect__effects-inner-edge) solid
      var(
        --theme__summary-icon-active-ring,
        var(--variant__summary-icon-active-ring, var(--connect__primary-mid))
      );
    border-radius: 50%;
    content: '';
    flex-shrink: 0;
    height: var(--connect__icon-md);
    margin-left: var(--connect__spacer-md);
    transform: var(--connect__icon-rotate);
    width: var(--connect__icon-md);
  }

  &::before {
    background: var(--connect__surface-white);
    border-radius: var(--connect__border-radius);
    box-shadow: var(--connect__shadow-lvl-2);
    content: '';
    height: var(--connect__full-h);
    left: 0;
    position: absolute;
    top: 0;
    transition-duration: var(--connect__transition-medium);
    transition-property: visibility, opacity, transform, max-height;
    transition-timing-function: var(--connect__ease-out);
    width: var(--connect__full-w);
    z-index: -1;
  }

  &:hover,
  &:active {
    &::before {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-4);
    }
  }

  &:active:not(:disabled) {
    --connect__inner-status-color-state: var(--connect__primary-mid);
  }

  &:focus-visible:not(:active) {
    &::before {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
    }
  }
}

.connect__accordion--divider {
  summary {
    & + * {
      --active-color: var(--connect__primary-mid);
      position: relative;

      &::before {
        background: var(--active-color);
        content: '';
        height: var(--connect__effects-inner-edge);
        left: var(--connect__spacer-md);
        position: absolute;
        top: 0;
        width: calc(var(--connect__full-w) - var(--connect__spacer-xl));
      }
    }
  }
}

/* 
  Blockquote Component
*/
.connect__blockquote {
  font-size: var(--connect__blockquote-fs, var(--connect__body-md));
  font-style: var(--connect__blockquote-font-style, var(--connect__style-normal));
  margin: var(--connect__blockquote-margin, 0);
  padding-bottom: var(--connect__blockquote-padding-bottom, var(--connect__spacer-sm));
  padding-left: var(--connect__blockquote-padding-left, var(--connect__spacer-md));
  padding-right: var(--connect__blockquote-padding-right, var(--connect__spacer-md));
  padding-top: var(--connect__blockquote-padding-top, var(--connect__spacer-sm));
}

/*
.connect__header Component

Variables and Theme Options:

1. Padding:
   --connect__header-padding-t: Top padding (theme: --theme__header-padding-t, default: 0)
   --connect__header-padding-r: Right padding (theme: --theme__header-padding-r, default: 0)
   --connect__header-padding-l: Left padding (theme: --theme__header-padding-l, default: 0)
   --connect__header-padding-b: Bottom padding (theme: --theme__header-padding-b, default: var(--connect__spacer-sm))

2. Margin:
   --connect__header-margin-t: Top margin (theme: --theme__header-margin-t, default: 0)
   --connect__header-margin-r: Right margin (theme: --theme__header-margin-r, default: 0)
   --connect__header-margin-b: Bottom margin (theme: --theme__header-margin-b, default: 0)
   --connect__header-margin-l: Left margin (theme: --theme__header-margin-l, default: 0)

3. Borders:
   --connect__header-border-w: Border width (theme: --theme__connect-header-border-w, default: 0)
   --connect__header-border-c: Border color (theme: --theme__connect-header-border-c, default: var(--connect__surface-null))
   --connect__header-border-r: Border radius (theme: --theme__connect-header-border-r, default: 0)

4. Background:
   --connect__header-bg-color: Background color (theme: --theme__header-bg-color, default: var(--connect__connect-gray-c5))
   --connect__header-bg-image: Background image (theme: --theme__header-bg-image, default: none)
   --connect__header-bg-size: Background size (theme: --theme__header-bg-size, default: cover)
   --connect__header-bg-repeat: Background repeat (theme: --theme__header-bg-repeat, default: no-repeat)

5. Breakout Section (::before pseudo-element):
   --connect__header-breakout-bg: Breakout background color (theme: --theme__header-breakout-bg, default: var(--connect__surface-null))
   --connect__header-breakout-l: Left offset (theme: --theme__header-breakout-l, default: -1)
   --connect__header-breakout-w: Width (theme: --theme__header-breakout-w, default: 2)
   --connect__header-breakout-h: Height (theme: --theme__header-breakout-h, default: 100%)

6. After Section (::after pseudo-element):
   --connect__header-breakout-z-after: Z-index (theme: --theme__header-breakout-z-after, default: 1)
   --connect__header-breakout-t-after: Top offset (theme: --theme__header-breakout-t-after, default: 0)
   --connect__header-breakout-r-after: Right offset (theme: --theme__header-breakout-r-after, default: 0)
   --connect__header-breakout-b-after: Bottom offset (theme: --theme__header-breakout-b-after, default: 0)
   --connect__header-breakout-l-after: Left offset (theme: --theme__header-breakout-l-after, default: -1)
   --connect__header-breakout-w-after: Width (theme: --theme__header-breakout-w-after, default: 2)
   --connect__header-breakout-h-after: Height (theme: --theme__header-breakout-h-after, default: 100%)
   --connect__header-content: Content (default: '')

7. Linear Gradient (when .connect__linear class is applied):
   --connect__header-breakout-gradient-direction: Gradient direction (theme: --theme__header-breakout-gradient-direction, default: to right)
   --connect__header-breakout-gradient-color-one: First gradient color (theme: --theme__header-breakout-gradient-color-one, default: var(--connect__surface-null))
   --connect__header-breakout-gradient-color-two: Second gradient color (theme: --theme__header-breakout-gradient-color-two, default: var(--connect__surface-null))

8. Halftone (when .connect__halftone class is applied):
   --connect__header-halftone-bg: Halftone background color (theme: --theme__header-halftone-bg, default: var(--connect__surface-null))
   --connect__header-halftone-dot-color: Halftone dot color (theme: --theme__header-halftone-dot-color, default: var(--connect__surface-white))
   --connect__header-halftone-dot-size: Halftone dot size (theme: --theme__header-halftone-dot-size, default: 2px)
   --connect__header-halftone-dot-space: Halftone dot spacing (theme: --theme__header-halftone-dot-space, default: 22px)

Usage:
- The header uses flexbox for layout unless the grid class is added in the HTML.
- It has a relative positioning to allow for absolute positioning of pseudo-elements.
- The ::before pseudo-element creates a breakout section that extends beyond the header's.
- The ::after pseudo-element can be used for additional styling or content.
- When the .connect__linear class is applied, a linear gradient background is added to the breakout section.
- When the .connect__halftone class is applied, a halftone pattern is applied to the breakout section.
*/

.connect__header {
  --connect__header-padding-t: var(--theme__connect-header-padding-t, 0);
  --connect__header-padding-r: var(--theme__connect-header-padding-r, 0);
  --connect__header-padding-l: var(--theme__connect-header-padding-l, 0);
  --connect__header-padding-b: var(--theme__connect-header-padding-b, var(--connect__spacer-sm));

  --connect__header-margin-t: var(--theme__connect-header-margin-t, 0);

  --connect__header-border-w: var(--theme__connect-header-border-w, var(--connect__spacer-zero));

  // Individual border widths
  --connect__header-border-w-t: var(
    --theme__connect-header-border-w-t,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-r: var(
    --theme__connect-header-border-w-r,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-b: var(
    --theme__connect-header-border-w-b,
    var(--connect__header-border-w)
  );
  --connect__header-border-w-l: var(
    --theme__connect-header-border-w-l,
    var(--connect__header-border-w)
  );

  --connect__header-border-c: var(--theme__connect-header-border-c, var(--connect__surface-null));

  // Single border radius for all corners
  --connect__header-border-r: var(--theme__connect-header-border-r, 0);

  // Individual corner border radii
  --connect__header-border-r-tl: var(
    --theme__connect-header-border-r-tl,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-tr: var(
    --theme__connect-header-border-r-tr,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-br: var(
    --theme__connect-header-border-r-br,
    var(--connect__header-border-r)
  );
  --connect__header-border-r-bl: var(
    --theme__connect-header-border-r-bl,
    var(--connect__header-border-r)
  );

  --connect__header-bg-color: var(--theme__connect-header-bg-color, var(--connect__surface-pale));
  --connect__header-bg-image: var(--theme__connect-header-bg-image, none);
  --connect__header-bg-size: var(--theme__connect-header-bg-size, cover);
  --connect__header-bg-repeat: var(--theme__connect-header-bg-repeat, no-repeat);

  background-color: var(--connect__header-bg-color);
  background-image: var(--connect__header-bg-image);
  background-repeat: var(--connect__header-bg-repeat);
  background-size: var(--connect__header-bg-size);
  border-color: var(--connect__header-border-c);
  border-radius: var(--connect__header-border-r-tl) var(--connect__header-border-r-tr)
    var(--connect__header-border-r-br) var(--connect__header-border-r-bl);
  border-style: solid;
  border-width: var(--connect__header-border-w-t) var(--connect__header-border-w-r)
    var(--connect__header-border-w-b) var(--connect__header-border-w-l);
  display: flex;

  margin-top: var(--connect__header-margin-t);

  padding: var(--connect__header-padding-t) var(--connect__header-padding-r)
    var(--connect__header-padding-b) var(--connect__header-padding-l);
  position: relative;

  > * {
    z-index: var(--connect__z-1);
  }

  &::before,
  &::after {
    position: absolute;
    z-index: -1;
  }

  // Breakout section (pseudo-element)
  &::before {
    // Breakout section background variables
    --connect__header-breakout-bg: var(
      --theme__connect-header-breakout-bg,
      var(--connect__surface-null)
    );

    // Breakout section dimension variables
    --connect__header-breakout-l: var(--theme__connect-header-breakout-l, -1);
    --connect__header-breakout-w: var(--theme__connect-header-breakout-w, 2);
    --connect__header-breakout-w-multi: var(
      --theme__connect-header-breakout-w-multi,
      var(--gutter-width)
    );

    --connect__header-breakout-h: var(--theme__connect-header-breakout-h, var(--connect__full-w));

    // Single border radius for all corners
    --connect__header-border-r-before: var(
      --theme__connect-header-border-r-before,
      var(--connect__header-border-r, 0)
    );

    // Individual corner border radii
    --connect__header-border-r-tl-before: var(
      --theme__connect-header-border-r-tl-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-tr-before: var(
      --theme__connect-header-border-r-tr-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-br-before: var(
      --theme__connect-header-border-r-br-before,
      var(--connect__header-border-r-before)
    );
    --connect__header-border-r-bl-before: var(
      --theme__connect-header-border-r-bl-before,
      var(--connect__header-border-r-before)
    );

    // Apply border radius
    // border-radius: var(--connect__header-border-r-tl-before)
    //   var(--connect__header-border-r-tr-before) var(--connect__header-border-r-br-before) var(--connect__header-border-r-bl-before);

    background-color: var(--connect__header-breakout-bg);
    content: '';
    height: var(--connect__header-breakout-h);
    left: calc(var(--connect__header-breakout-l) * var(--gutter-width));
    top: 0;
    width: calc(
      var(--connect__full-w) + var(--connect__header-breakout-w) *
        var(--connect__header-breakout-w-multi)
    );
  }

  &:not(.connect__breakout):not(.connect__linear):not(.connect__halftone) {
    &::before,
    &::after {
      // Breakout section background variables
      --connect__header-breakout-bg: var(
        --theme__connect-header-breakout-bg,
        var(--connect__surface-null)
      );

      // Breakout section dimension variables
      --connect__header-breakout-l: var(--theme__connect-header-breakout-l, -1);
      --connect__header-breakout-w: var(--theme__connect-header-breakout-w, 2);
      --connect__header-breakout-w-multi: var(
        --theme__connect-header-breakout-w-multi,
        var(--gutter-width)
      );

      --connect__header-breakout-h: var(--theme__connect-header-breakout-h, var(--connect__full-h));

      // Single border radius for all corners
      --connect__header-border-r-before: var(
        --theme__connect-header-border-r-before,
        var(--connect__header-border-r, 0)
      );

      // Individual corner border radii
      --connect__header-border-r-tl-before: var(
        --theme__connect-header-border-r-tl-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-tr-before: var(
        --theme__connect-header-border-r-tr-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-br-before: var(
        --theme__connect-header-border-r-br-before,
        var(--connect__header-border-r-before)
      );
      --connect__header-border-r-bl-before: var(
        --theme__connect-header-border-r-bl-before,
        var(--connect__header-border-r-before)
      );

      // Apply border radius
      // border-radius: var(--connect__header-border-r-tl-before)
      //   var(--connect__header-border-r-tr-before) var(--connect__header-border-r-br-before) var(--connect__header-border-r-bl-before);

      background-color: var(--connect__header-breakout-bg);
      content: '';
      height: var(--connect__header-breakout-h);
      left: calc(var(--connect__header-breakout-l) * var(--gutter-width));
      top: 0;
      width: calc(
        var(--connect__full-w) + var(--connect__header-breakout-w) *
          var(--connect__header-breakout-w-multi)
      );
    }
  }

  &:not(.connect__halftone) {
    &::after {
      content: unset;
    }
  }
}

/*
.connect__footer Component

This component creates a footer with a breakout section that extends beyond its boundaries.

Variables:
1. Background:
   --connect__footer-breakout-bg: Breakout background color (theme: --theme__footer-breakout-bg, default: var(--connect__surface-mid))

2. Positioning:
   --connect__footer-position: Footer position (theme: --theme__footer-position, default: relative)
   --connect__footer-position-t: Top position (theme: --theme__footer-position, default: 0)

3. Dimensions:
   --connect__footer-h: Footer height (theme: --theme__footer-h, default: var(--connect__spacer-sm))
   --connect__footer-w: Footer width (theme: --theme__footer-w, default: 100vw)

4. Breakout Section:
   --connect__footer-breakout-l: Left offset for breakout (theme: --theme__header-breakout-l, default: -1)
   --connect__footer-breakout-w: Width multiplier for breakout (theme: --theme__header-breakout-w, default: 2)

5. Padding:
   --connect__footer-padding-t: Top padding (theme: --theme__footer-padding-t, default: 0)
   --connect__footer-padding-r: Right padding (theme: --theme__footer-padding-r, default: 0)
   --connect__footer-padding-l: Left padding (theme: --theme__footer-padding-l, default: 0)
   --connect__footer-padding-b: Bottom padding (theme: --theme__footer-padding-b, default: var(--connect__spacer-sm))

6. Margin:
   --connect__footer-margin-t: Top margin (theme: --theme__footer-margin-t, default: 0)

Usage:
- Apply this class to create a footer element with a breakout section.
- The footer has a white background and uses the specified top margin.
- Padding is applied using individual padding variables.
- The footer's position is controlled by --connect__footer-position.
- Width is set to 100% of its container.

Breakout Section:
- Created using the ::after pseudo-element.
- Extends beyond the footer's boundaries.
- Uses the specified background color (--connect__footer-breakout-bg).
- Height is determined by --connect__footer-h.
- Positioned absolutely with top offset of --connect__footer-position-t.
- Width extends beyond the footer using the breakout variables.
*/

.connect__footer {
  --connect__footer-breakout-bg: var(--theme__footer-breakout-bg, var(--connect__surface-mid));

  --connect__footer-position: var(--theme__footer-position, relative);
  --connect__footer-position-t: var(--theme__footer-position, 0);
  --connect__footer-h: var(--theme__footer-h, var(--connect__spacer-sm));
  --connect__footer-w: var(--theme__footer-w, 100vw);

  --connect__footer-breakout-l: var(--theme__header-breakout-l, -1);
  --connect__footer-breakout-w: var(--theme__header-breakout-w, 2);

  // Padding variables
  --connect__footer-padding-t: var(--theme__footer-padding-t, 0);
  --connect__footer-padding-r: var(--theme__footer-padding-r, 0);
  --connect__footer-padding-l: var(--theme__footer-padding-l, 0);
  --connect__footer-padding-b: var(--theme__footer-padding-b, var(--connect__spacer-sm));
  --connect__footer-margin-t: var(--theme__footer-margin-t, 0);

  background-color: var(--connect__surface-white);
  margin-top: var(--connect__footer-margin-t);
  padding: var(--connect__footer-padding-t) var(--connect__footer-padding-r)
    var(--connect__footer-padding-b) var(--connect__footer-padding-l);
  position: var(--connect__footer-position);
  width: var(--connect__full-w);

  &::after {
    background-color: var(--connect__footer-breakout-bg);
    content: '';
    height: var(--connect__footer-h);
    left: calc(var(--connect__footer-breakout-l) * var(--gutter-width));
    position: absolute;
    top: var(--connect__footer-position-t);
    width: calc(var(--connect__full-w) + var(--connect__footer-breakout-w) * var(--gutter-width));
  }
}

/* 
.connect__grid Component

| Property         | Default Value        | Description                              |
|------------------|----------------------|------------------------------------------|
| Gap              | --connect__spacer-xl | Space between grid items                 |
| Columns          | 12                   | Number of grid columns                   |
| Align Content    | start                | Vertical alignment of grid content       |
| Align Items      | start                | Vertical alignment of grid items         |
| Justify Content  | start                | Horizontal alignment of grid content     |
| Justify Items    | start                | Horizontal alignment of grid items       |
| Width            | --connect__full-w    | Grid container width                     |
| Gutter Padding Y | calc(spacer-xl * 2)  | Vertical padding when gutter enabled     |
| Gutter Padding X | --gutter-width       | Horizontal padding when gutter enabled   |

Breakpoint Values:

| Property    | -xs          | -sm          | -md          | -lg          | -xl           |
|-------------|--------------|--------------|--------------|--------------|---------------|
| Start Column| -xs-start-col| -sm-start-col| -md-start-col| -lg-start-col| -xl-start-col |
| Span Column | -xs-span-col | -sm-span-col | -md-span-col | -lg-span-col | -xl-span-col  |
| Row Start   | -xs-row-start| -sm-row-start| -md-row-start| -lg-row-start| -xl-row-start |
| Row Span    | -xs-row-span | -sm-row-span | -md-row-span | -lg-row-span | -xl-row-span  |

*/

.connect__grid {
  --connect__grid-gap: var(--connect__spacer-xl);
  --connect__grid-cols: var(--theme-col-amount, 12);
  align-content: var(--connect__grid-align-content, start);
  display: var(--connect__display-grid);
  gap: var(--connect__grid-gap);
  grid-auto-rows: auto;
  grid-template-columns: repeat(var(--connect__grid-cols), 1fr);
  grid-template-rows: max-content;
  justify-content: var(--connect__grid-justify-content, start);
  place-items: var(--connect__grid-align-items, start) var(--connect__grid-justify-items, start);
  position: relative;
  width: var(--connect__full-w);

  &.connect__grid-xs {
    --connect__grid-align-content: var(--connect__xs-alignContent);
    --connect__grid-align-items: var(--connect__xs-alignItems);
    --connect__grid-justify-content: var(--connect__xs-justifyContent);
    --connect__grid-justify-items: var(--connect__xs-justifyItems);
  }

  @media (min-width: 30rem) {
    &.connect__grid-sm {
      --connect__grid-align-content: var(--connect__sm-alignContent);
      --connect__grid-align-items: var(--connect__sm-alignItems);
      --connect__grid-justify-content: var(--connect__sm-justifyContent);
      --connect__grid-justify-items: var(--connect__sm-justifyItems);
    }
  }

  @media (min-width: 40.625rem) {
    &.connect__grid-md {
      --connect__grid-align-content: var(--connect__md-alignContent);
      --connect__grid-align-items: var(--connect__md-alignItems);
      --connect__grid-justify-content: var(--connect__md-justifyContent);
      --connect__grid-justify-items: var(--connect__md-justifyItems);
    }
  }

  @media (min-width: 55rem) {
    &.connect__grid-lg {
      --connect__grid-align-content: var(--connect__lg-alignContent);
      --connect__grid-align-items: var(--connect__lg-alignItems);
      --connect__grid-justify-content: var(--connect__lg-justifyContent);
      --connect__grid-justify-items: var(--connect__lg-justifyItems);
    }
  }

  @media (min-width: 80rem) {
    &.connect__grid-xl {
      --connect__grid-align-content: var(--connect__xl-alignContent);
      --connect__grid-align-items: var(--connect__xl-alignItems);
      --connect__grid-justify-content: var(--connect__xl-justifyContent);
      --connect__grid-justify-items: var(--connect__xl-justifyItems);
    }
  }

  // Apply margin to all direct children except .connect__grid and section
  > *:not(.connect__grid):not(section):not(.connect__breakout) {
    @media (min-width: 40.625rem) {
      margin-left: var(--connect__spacer-md);
      margin-right: var(--connect__spacer-md);
    }
  }

  &.connect__grid-gutter {
    --connect__gutter-padding-y: var(
      --theme__connect-gutter-padding-y,
      calc(var(--connect__spacer-xl) * 2)
    );
    --connect__gutter-padding-x: var(--theme__connect-gutter-padding-x, var(--gutter-width));
    padding: var(--connect__gutter-padding-y) var(--connect__gutter-padding-x);
  }

  // Make nested .connect__grid elements use subgrid
  .connect__grid {
    display: var(--connect__display-grid);
    grid-column: 1 / -1;
    grid-template-columns: subgrid;
  }
}

/*
.connect__grid-item Component

| Property    | -xs          | -sm          | -md          | -lg          | -xl           |
|-------------|--------------|--------------|--------------|--------------|---------------|
| Start Column| -xs-start-col| -sm-start-col| -md-start-col| -lg-start-col| -xl-start-col |
| Span Column | -xs-span-col | -sm-span-col | -md-span-col | -lg-span-col | -xl-span-col  |
| Row Span    | -xs-row-span | -sm-row-span | -md-row-span | -lg-row-span | -xl-row-span  |

*/

.connect__grid-item {
  grid-column: var(--connect__grid-item-xs-start-col, 1) / span
    var(--connect__grid-item-xs-span-col, 12);
  grid-row: var(--connect__grid-item-xs-row-start, auto) / span
    var(--connect__grid-item-xs-row-span, 1);
  width: var(--connect__full-w);
}

@media (min-width: 30rem) {
  .connect__grid-item-sm {
    grid-column: var(--connect__grid-item-sm-start-col) / span var(--connect__grid-item-sm-span-col);
    grid-row: var(--connect__grid-item-sm-row-span, auto);
  }
}

@media (min-width: 40.625rem) {
  .connect__grid-item-md {
    grid-column: var(--connect__grid-item-md-start-col) / span var(--connect__grid-item-md-span-col);
    grid-row: var(--connect__grid-item-md-row-span, auto);
  }
}

@media (min-width: 55rem) {
  .connect__grid-item-lg {
    grid-column: var(--connect__grid-item-lg-start-col) / span var(--connect__grid-item-lg-span-col);
    grid-row: var(--connect__grid-item-lg-row-span, auto);
  }
}

@media (min-width: 80rem) {
  .connect__grid-item-xl {
    grid-column: var(--connect__grid-item-xl-start-col) / span var(--connect__grid-item-xl-span-col);
    grid-row: var(--connect__grid-item-xl-row-span, auto);
  }
}

/*
.connect__stack Component

The connect stack component is built to set a default set of styles. Rather than variants and themes
these styles are then open to breakpoint changes

| Property        | xl                  | lg                  | md                  | sm                  | xs                  |
|-----------------|---------------------|---------------------|---------------------|---------------------|---------------------|
| align items     | --xl-alignItems     | --lg-alignItems     | --md-alignItems     | --sm-alignItems     | --xs-alignItems     |
| flex flow         | --xl-direction      | --lg-direction      | --md-direction      | --sm-direction      | --xs-direction      |
| flex wrap        | --xl-flexWrap        | --lg-flexWrap        | --md-flexWrap        | --sm-flexWrap        | --xs-flexWrap        |
| justify content | --xl-justifyContent | --lg-justifyContent | --md-justifyContent | --sm-justifyContent | --xs-justifyContent |
| Padding X       | --xl-paddingX       | --lg-paddingX       | --md-paddingX       | --sm-paddingX       | --xs-paddingX       |
| Padding Y       | --xl-paddingY       | --lg-paddingY       | --md-paddingY       | --sm-paddingY       | --xs-paddingY       |
| Spacing         | --xl-spacing        | --lg-spacing        | --md-spacing        | --sm-spacing        | --xs-spacing        |

*/

.connect__stack {
  align-items: var(--connect__stack-align, start);
  align-self: var(--connect__stack-alignSelf, stretch);
  display: flex;
  flex-flow: var(--connect__stack-direction, column) var(--connect__stack-wrap, wrap);
  gap: var(--connect__stack-spacing, 0);
  justify-content: var(--connect__justify-content, start);
  padding: var(--connect__paddingY, 0) var(--connect__paddingX, 0);

  &.connect__stack-xs {
    --connect__stack-spacing: var(--connect__stack-xs-spacing);
    --connect__stack-direction: var(--connect__stack-xs-direction);
    --connect__stack-align: var(--connect__stack-xs-alignItems);
    --connect__stack-alignSelf: var(--connect__stack-xs-alignSelf);
    --connect__stack-wrap: var(--connect__stack-xs-flexWrap);
    --connect__justify-content: var(--connect__stack-xs-justifyContent);
    --connect__paddingX: var(--connect__stack-xs-paddingX);
    --connect__paddingY: var(--connect__stack-xs-paddingY);
    flex: var(--connect__stack-xs-flex, none);
  }

  @media (min-width: 30rem) {
    &.connect__stack-sm {
      --connect__stack-spacing: var(--connect__stack-sm-spacing);
      --connect__stack-direction: var(--connect__stack-sm-direction);
      --connect__stack-align: var(--connect__stack-sm-alignItems);
      --connect__stack-alignSelf: var(--connect__stack-sm-alignSelf);
      --connect__stack-wrap: var(--connect__stack-sm-flexWrap);
      --connect__justify-content: var(--connect__stack-sm-justifyContent);
      --connect__paddingX: var(--connect__stack-sm-paddingX);
      --connect__paddingY: var(--connect__stack-sm-paddingY);
      flex: var(--connect__stack-sm-flex, none);
    }
  }

  @media (min-width: 40.625rem) {
    &.connect__stack-md {
      --connect__stack-spacing: var(--connect__stack-md-spacing);
      --connect__stack-direction: var(--connect__stack-md-direction);
      --connect__stack-align: var(--connect__stack-md-alignItems);
      --connect__stack-alignSelf: var(--connect__stack-md-alignSelf);
      --connect__stack-wrap: var(--connect__stack-md-flexWrap);
      --connect__justify-content: var(--connect__stack-md-justifyContent);
      --connect__paddingX: var(--connect__stack-md-paddingX);
      --connect__paddingY: var(--connect__stack-md-paddingY);
      flex: var(--connect__stack-md-flex, none);
    }
  }

  @media (min-width: 55rem) {
    &.connect__stack-lg {
      --connect__stack-spacing: var(--connect__stack-lg-spacing);
      --connect__stack-direction: var(--connect__stack-lg-direction);
      --connect__stack-align: var(--connect__stack-lg-alignItems);
      --connect__stack-alignSelf: var(--connect__stack-lg-alignSelf);
      --connect__stack-wrap: var(--connect__stack-lg-flexWrap);
      --connect__justify-content: var(--connect__stack-lg-justifyContent);
      --connect__paddingX: var(--connect__stack-lg-paddingX);
      --connect__paddingY: var(--connect__stack-lg-paddingY);
      flex: var(--connect__stack-lg-flex, none);
    }
  }

  @media (min-width: 80rem) {
    &.connect__stack-xl {
      --connect__stack-spacing: var(--connect__stack-xl-spacing);
      --connect__stack-direction: var(--connect__stack-xl-direction);
      --connect__stack-align: var(--connect__stack-xl-alignItems);
      --connect__stack-alignSelf: var(--connect__stack-xl-alignSelf);
      --connect__stack-wrap: var(--connect__stack-xl-flexWrap);
      --connect__justify-content: var(--connect__stack-xl-justifyContent);
      --connect__paddingX: var(--connect__stack-xl-paddingX);
      --connect__paddingY: var(--connect__stack-xl-paddingY);
      flex: var(--connect__stack-xl-flex, none);
    }
  }
}

/*
.connect__chip Component

| Property         | Theme                         | Variant/State              | Fallback / Default                                        |
|------------------|------------------------------ |----------------------------|-----------------------------------------------------------|
| Font size        | --theme__chip-fs              | --variant__chip-fs         | --connect__body-sm                                        |
| Line height      | --theme__chip-lh              | --variant__chip-lh         | --connect__body-sm-lheight                                |
| Background color | --theme__chip-bg              | --variant__chip-bg         | --connect__primary-mid                                    |
| Border color     | --theme__chip-border-c        | --variant__chip-border-c   | --connect__surface-null                                  |
| Border width     | --theme__chip-border-w        | --variant__chip-border-w   | --connect__spacer-zero                                    |
| Padding X        | --theme__chip-padding-x       | --variant__chip-padding-x  | var(--connect__spacer-sm) - var(--connect__chip-border-w) |
| Padding Y        | --theme__chip-padding-y       | --variant__chip-padding-y  | var(--connect__spacer-sm) - var(--connect__chip-border-w) |
| Width            | --theme__chip-radius          | --variant__chip-radius     | --connect__border-radius                                  |
*/

.connect__chip {
  --connect__chip-border-w: var(
    --theme__chip-border-w,
    var(--variant__chip-border-w, var(--connect__spacer-zero))
  );
  --connect__chip-padding-y: var(
    --theme__chip-padding-y,
    var(--variant__chip-padding-y, calc(var(--connect__spacer-xs) - var(--connect__chip-border-w)))
  );
  --connect__chip-padding-x: var(
    --theme__chip-padding-x,
    var(--variant__chip-padding-x, calc(var(--connect__spacer-md) - var(--connect__chip-border-w)))
  );

  background-color: var(--theme__chip-bg, var(--variant__chip-bg, var(--connect__surface-white)));
  border: var(--connect__chip-border-w) solid
    var(--theme__chip-border-c, var(--variant__chip-border-c, var(--connect__surface-null)));
  border-radius: var(
    --theme__chip-border-radius,
    var(--variant__chip-border-radius, var(--connect__border-radius))
  );
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
  color: var(--theme__chip-color, var(--active-color, var(--connect__surface-dark)));
  font-family: var(--connect__font-sans);
  font-size: var(--theme__chip-fs, var(--variant__chip-fs, var(--connect__caption)));
  line-height: var(--theme__chip-lh, var(--variant__chip-lh, var(--connect__caption-lheight)));
  padding: calc(var(--connect__chip-padding-y) - var(--connect__chip-border-w))
    calc(var(--connect__chip-padding-x) - var(--connect__chip-border-w));
  width: var(--connect__chip-w, fit-content);

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
  }
}

/*
.connect__pill Component

| Property         | Theme               | Variant/State         | Fallback / Default            | Props                      |
|------------------|---------------------|---------------------- |-------------------------------|----------------------------|
| Font size        | --theme__pill-fs    | --variant__pill-fs    | --connect__body-sm            |
| Font weight      | --theme__pill-fw    | --variant__pill-fw    | --connect__fw-bold            |
| Line height      | --theme__pill-lh    | --variant__pill-lh    | --connect__body-sm-lheight    |
| Background color | --theme__pill-bg    | --variant__pill-bg    | --connect__cc-purple          | --connect__default-pill-bg |
| Color            | --theme__pill-color | --variant__pill-color | --connect__surface-white      |
| Padding Y        | --theme__pill-py    | --variant__pill-py    | --connect__spacer-xs          |
| Padding L        | --theme__pill-pl    | --variant__pill-pl    | --connect__spacer-md          |
| Padding R        | --theme__pill-pr    | --variant__pill-pr    | --connect__spacer-lg          |

|-------------------border-radius: top-left top-right bottom-right bottom-left ------------------|

| Border Radius TL | --theme__pill-br-tl | --variant__pill-br-tl | --connect__heading-lg-lheight |
| Border Radius TR | --theme__pill-br-tr | --variant__pill-br-tr | --connect__heading-lg-lheight |
| Border Radius BR | --theme__pill-br-br | --variant__pill-br-br | --connect__spacer-zero        |
| Border Radius BL | --theme__pill-br-bl | --variant__pill-br-bl | --connect__spacer-zero        |
*/

.connect__pill {
  align-items: center;
  background-color: var(
    --theme__pill-bg,
    var(--variant__pill-bg, var(--connect__default-pill-bg, var(--connect__cc-purple)))
  );
  border-radius: var(--theme__pill-br-tl, var(--variant__pill-br-tl, var(--connect__spacer-zero)))
    var(--theme__pill-br-tr, var(--variant__pill-br-tr, var(--connect__heading-lg-lheight)))
    var(--theme__pill-br-br, var(--variant__pill-br-br, var(--connect__heading-lg-lheight)))
    var(--theme__pill-br-bl, var(--variant__pill-br-bl, var(--connect__spacer-zero)));
  color: var(--theme__pill-color, var(--variant__pill-color, var(--connect__surface-white)));
  display: inline-flex;
  font-family: var(--connect__font-sans);
  font-size: var(--theme__pill-fs, var(--variant__pill-fs, var(--connect__body-sm)));
  font-weight: var(--theme__pill-fw, var(--variant__pill-fw, var(--connect__fw-bold)));
  justify-content: center;
  line-height: var(--theme__pill-lh, var(--variant__pill-lh, var(--connect__body-sm-lheight)));
  padding: var(--theme__pill-py, var(--variant__pill-py, var(--connect__spacer-xs)))
    var(--theme__pill-pr, var(--variant__pill-pr, var(--connect__spacer-lg)))
    var(--theme__pill-py, var(--variant__pill-py, var(--connect__spacer-xs)))
    var(--theme__pill-pl, var(--variant__pill-pl, var(--connect__spacer-md)));
}

/*
.connect__icon-wrapper Component

  | Property         | Fallback / Default           | States                      | Variants           | Future changes   |
  |------------------|------------------------------|-----------------------------|--------------------|------------------|
  | background-image | state-icon                   | Correct / Incorrect / Shown |                    |                  |
  | height           | connect__icon-md             |                             | connect__icon-size | Liable to change |
  | translateX       | connect__feedback-translateX |                             |                    | Liable to change |
  | translateY       | connect__feedback-translateX |                             |                    |                  |
  | width            | connect__icon-md             |                             | connect__icon-size |                  |        
*/

.connect__icon-wrapper {
  display: inline-flex;
  flex-flow: column wrap;
  position: relative;
  width: var(--connect__full-w);

  &::after {
    background-image: var(--state-icon);
    background-repeat: repeat;
    background-size: contain;
    content: '';
    height: var(--connect__icon-size, var(--connect__icon-md));
    position: absolute;
    right: 0;
    top: 0;
    transform: translate(var(--connect__feedback-translateX), var(--connect__feedback-translateY));
    width: var(--connect__icon-size, var(--connect__icon-md));
  }

  &.connect__input-clear {
    align-items: var(--connect__input-clear-align-items, flex-start);
    flex-direction: var(--connect__input-clear-flex-direction, row);
    justify-content: var(--connect__input-clear-justify-content, flex-end);
  }
}

/*
.connect__icon Component

| Property| Fallback / Default           | Sizes              |
|---------|------------------------------|--------------------|
| Fill    | --connect__icon-fill-color    |
| Stroke  | --connect__icon-stroke-color |
| Color   | --connect__icon-fill-color    |
| Opacity | --connect__icon-opacity      |             
| Sizes   |--connect__icon-size          | xs sm md lg xl xxl |
*/

.connect__icon {
  color: var(--icon-fill);
  height: var(--connect__icon-size);
  opacity: var(--connect__icon-opacity, 1);
  width: var(--connect__icon-size);

  svg {
    fill: var(--connect__icon-fill-color, var(--connect__surface-dark));
    stroke: var(--connect__icon-stroke-color);
  }

  &-xs {
    --connect__icon-size: var(--connect__icon-xs);
  }

  &-sm {
    --connect__icon-size: var(--connect__icon-sm);
  }

  &-md {
    --connect__icon-size: var(--connect__icon-md);
  }

  &-lg {
    --connect__icon-size: var(--connect__icon-lg);
  }

  &-xl {
    --connect__icon-size: var(--connect__icon-xl);
  }

  &-xxl {
    --connect__icon-size: var(--connect__icon-xxl);
  }
}

/*
.connect__choice Component

Padding on MCQ labels is the total border + spacer

| Property            | Theme                        | Variant/State                  | Fallback / Default                                       |
|---------------------|------------------------------|--------------------------------|----------------------------------------------------------|
| Font size           | --theme__label-fs            | --variant__label-fs            | --connect__body-sm                                       |
| Line height         | --theme__label-lh            | --variant__label-lh            | --connect__body-sm-lheight                               |
| Font weight         | --theme__label-fw            | --variant__label-fw            | --connect__fw-regular                                    |
| Radius              | --theme__label-border-radius | --variant__label-border-radius | --connect__border-radius                              |
| Background color    | --theme__label-bg            | --variant__label-bg            | --connect__surface-white                                   |
| Color               | --theme__label-color         | --variant__label-color         | --connect__surface-dark                                |
| Gap                 | --theme__label-gap           | --variant__label-gap             | --connect__spacer-md                                     |
| Cursor              |                              | --connect__state-based-pointer | pointer                                                  |


|---------------------|------------------------------|-------------------------------|----------------------------------------------------------|
|---------------------|-------INPUT VARIABLES--------|-------------------------------|----------------------------------------------------------|
|---------------------|------------------------------|-------------------------------|----------------------------------------------------------|
| Property            | Theme                        | Variant/State                 | Fallback / Default                                       |
|---------------------|------------------------------|-------------------------------|----------------------------------------------------------|
| Radius              | --theme__mcq-border-radius   | --variant__mcq-border-radius  | --connect__inner-radius                              |
| Dimensions          | --theme__input-dimensions    | --variant__input-dimensions   | --connect__caption-lheight                              |

*/

.connect__choice-label-wrapper {
  position: relative;
}

.connect__choice-label {
  --connect__label-padding-y: calc(var(--connect__total-border) + var(--connect__spacer-xs));
  --connect__label-padding-x: calc(var(--connect__total-border) + var(--connect__spacer-sm));

  --connect__input-dimensions: var(
    --theme__input-dimensions,
    var(--variant__input-dimensions, var(--connect__caption-lheight))
  );
  --connect__input-border-w: var(--connect__mcq-border-w);

  align-items: center;
  background-color: var(--theme__label-bg, var(--variant__label-bg, var(--connect__surface-white)));
  border-radius: var(
    --theme__label-border-radius,
    var(--variant__label-border-radius, var(--connect__border-radius))
  );
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);
  color: var(--theme__label-color, var(--active-color, var(--connect__surface-dark)));
  cursor: var(--connect__state-based-pointer, pointer);
  display: inline-flex;
  font-family: var(--connect__font-sans);
  font-size: var(--theme__label-fs, var(--variant__label-fs, var(--connect__body-sm)));
  font-weight: var(
    --theme__label-fw,
    var(--variant__label-fw, var(--connect__fw-regular, initial))
  );
  gap: var(--theme__label-gap, var(--variant__label-gap, var(--connect__spacer-md)));
  justify-content: flex-start;
  line-height: var(--theme__label-lh, var(--variant__label-lh, var(--connect__body-sm-lheight)));
  padding: var(--connect__label-padding-y) var(--connect__label-padding-x);
  position: relative;
  transition-duration: var(--connect__transition-rapid);
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: var(--connect__ease-in-out);
  width: var(--connect__full-w, fit-content);

  &::before {
    border: var(--connect__input-border-w) solid
      var(--checkbox-checked-state-based-border-c, var(--connect__primary-mid));
    border-radius: var(
      --theme__mcq-radius,
      var(--variant__mcq-radius, var(--connect__inner-radius))
    );
    content: '';
    flex-shrink: 0;
    height: var(--connect__input-dimensions);
    padding: var(--connect__spacer-xs);
    width: var(--connect__input-dimensions);
  }

  &:hover {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-4);
  }

  &:active {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
  }

  &:focus-visible:not(:active) {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
  }

  &.connect__label-checked {
    &::before {
      background-color: var(--checkbox-state-based-bg, var(--connect__primary-mid));
      background-image: var(--checked-state-icon, var(--connect__surface-null));
      background-size: contain;
      box-shadow: var(--connect__shadow-reset) var(--connect__input-border-w)
        var(--checkbox-state-based-inner-shadow, var(--connect__surface-white)) inset;
    }

    &.connect__disabled {
      --checkbox-state-based-bg: var(--connect__disabled-light);
    }

    &.connect__feedback-correct {
      --checkbox-state-based-bg: var(--connect__correct-mid);
      --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
      --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
      --checked-state-icon: var(--checked-correct);
    }

    &.connect__feedback-incorrect {
      --checkbox-state-based-bg: var(--checked-incorrect-bg);
      --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
      --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
      --checked-state-icon: var(--checked-incorrect);
    }

    &.connect__input-shown {
      --checkbox-state-based-bg: var(--connect__surface-dark);
      --checkbox-checked-state-based-border-c: var(--checkbox-state-based-bg);
      --checkbox-state-based-inner-shadow: var(--checkbox-state-based-bg);
      --checked-state-icon: var(--checked-correct);
    }
  }

  &.connect__disabled {
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-0);
  }
}

.connect__input-no-shadow {
  box-shadow: var(--connect__shadow-null);

  &:hover {
    box-shadow: var(--connect__shadow-null);
  }
}

/*
.connect__mcq-card Component

Padding on MCQ labels is the total border
Positioning int he pseudos is the total border / 2

  &::after
    background-color of area around the input
    border-radius of this click area

|-----------|-----------------------|-------------------------|
|-----------|-------MCQ Card--------|-------------------------|
|-----------|-------|---------------|-------------------------|
| Property  | Theme | Variant/State | Fallback / Default      |
|-----------|-------|---------------|-------------------------|
| Padding-y |       |               | --connect__total-border |
| Padding-x |       |               | --connect__total-border |
| Margin    |       |               | --connect__spacer-xs    |
*/

.connect__mcq-card {
  --connect__label-padding-y: var(--connect__total-border);
  --connect__label-padding-x: var(--connect__total-border);
  --connect__mcq-input-margin: var(--connect__spacer-xs);

  align-items: flex-start;
  display: var(--connect__display-grid);
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;

  &::before {
    grid-column: 1;
    grid-row: 1;
    left: calc(var(--connect__label-padding-x) / 2);
    position: var(--connect__absolute);
    top: calc(var(--connect__label-padding-y) / 2);
    z-index: var(--connect__z-1);
  }

  &::after {
    background-color: var(--connect__surface-white);
    border-radius: var(--theme__inner-radius, var(--connect__inner-radius))
      var(--connect__spacer-zero);
    content: '';
    height: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
    left: var(--theme__inner-divider-width, var(--connect__inner-divider-width));
    position: absolute;
    top: var(--theme__inner-divider-width, var(--connect__inner-divider-width));
    width: calc(
      var(--connect__input-dimensions) + var(--connect__mcq-input-margin) +
        var(--connect__inner-status)
    );
  }

  .connect__figure {
    grid-column: 1 / -1;
    grid-row: 1 / -1;

    img {
      border-radius: var(--connect__inner-radius);
    }
  }
}

.connect__choice {
  inset: 0;
  opacity: var(--connect__opacity-zero);
  position: absolute;
}

.connect__choice[type='radio'] {
  + label {
    --variant__mcq-radius: var(--connect__half-radius);
  }
}

/*

 .connect__progress Component

 The progress component is made up of three main styling zones

  i: connect__progress (aesthetic container)
  ii: ::-webkit-progress-bar (Bg color of remainder of bar)
  iii: ::-webkit-progress-value (inner bar, radius, color), dynamic part of progress bar

 | Property         | Theme                 | Variant/State           | Fallback / Default      | Props                 |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 | Background color | theme__progress-bg    | variant__progress-bg    | connect__surface-white  | theme__progress-bg    |
 | Border radius    | theme__progress-br    | variant__progress-br    |  1rem                   |                       |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 |-----------------------------------------::-webkit-progress-bar-------------------------------------------------------|
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 | Background color | theme__progress-bg    | variant__progress-bg    | connect__surface-white  | theme__progress-bg    |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 |-----------------------------------------::-webkit-progress-value---|-------------------------|-----------------------|
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|
 | Background color | theme__progress-color | variant__progress-color | --connect__cc-purple    | theme__progress-color |
 | Border radius    | theme__inner-br       | variant__inner-br       |  2.5rem                 |                       |
 |------------------|-----------------------|-------------------------|-------------------------|-----------------------|

*/

.connect__progress-wrapper {
  width: var(--connect__full-w);
}

.connect__progress {
  background: var(--theme__progress-bg, var(--variant__progress-bg, var(--connect__surface-white)));
  border: none;
  border-radius: var(--theme__progress-br, var(--variant__progress-br, 1rem));
  box-shadow: var(--connect__shadow-lvl-0);
  overflow: hidden;
  width: var(--connect__full-w);

  &::-webkit-progress-bar {
    background: var(
      --theme__progress-bg,
      var(--variant__progress-bg, var(--connect__surface-white))
    );
  }

  &::-webkit-progress-value {
    background: var(--theme__progress-color, var(--connect__cc-purple));
    border-radius: var(--theme__inner-br, var(--variant__inner-br, 2.5rem));
    transition:
      inline-size var(--connect__transition-medium) var(--connect__in-out-quad),
      width var(--connect__transition-medium) var(--connect__in-out-quad);
  }

  &::-moz-progress-bar {
    background: var(
      --theme__progress-color,
      var(--variant__progress-color, var(--connect__cc-purple))
    );
    border-radius: var(--theme__progress-br, var(--variant__progress-br, 1rem));
  }
}

/*
.connect__timer Component

| Property    | Theme                 | Variant/State            | Fallback / Default            | Props               |
|-------------|---------------------- |------------------------- |-------------------------------|---------------------|
| Font size   | --theme__timer-fs     | --variant__timer-fs      | --connect__heading-lg         | --connect__timer-fs |
| Line height | --theme__timer-lh     | --variant__timer-lh      | --connect__heading-lg-lheight | --connect__timer-lh |
| Font weight | --theme__timer-fw     | --variant__timer-fw      | --connect__fw-bold            |
| Font Style  | --theme__timer-fstyle | --variant__timer-fstyle  | normal                        |
| Color       | --theme__timer-color  | --variant__timer-color   | --connect__surface-dark       |
*/

.connect__timer {
  color: var(--theme__timer-color, var(--variant__timer-color, var(--connect__surface-dark)));
  font-family: var(--connect__font-sans);
  font-size: var(
    --theme__timer-fs,
    var(--variant__timer-fs, var(--connect__timer-fs, var(--connect__heading-lg)))
  );
  font-style: var(--theme__timer-fstyle, var(--variant__timer-fstyle, var(--connect__fw-style)));
  font-variant-numeric: tabular-nums;
  font-weight: var(--theme__timer-fw, var(--variant__timer-fw, var(--connect__fw-bold)));
  line-height: var(
    --theme__timer-lh,
    var(--variant__timer-lh, var(--connect__timer-lh, var(--connect__heading-lg-lheight)))
  );
}

/* Table
  Table Component
*/
.connect__table-wrapper {
  --connect__table-bg: var(--theme__table-bg, var(--connect__white));
  --connect__thead-bg: var(--theme__thead-bg, var(--connect__gray-c10));
  --connect__table-border-c: var(--theme__table-border-c, rgba(220, 220, 220));
  --connect__tr-hover-bg: var(--theme__tr-hover-bg, var(--connect__gray-c5));
  --connect__table-border-w: var(--theme__table-border-w, 0.0625rem);
  --connect__table-color: var(--theme__table-color, var(--connect__gray-c70));
  --connect__container-type: var(--theme__container-type, inline-size);
  --connect__container-name: var(--theme__container-name, table-container);

  padding: var(--connect__spacer-sm);

  &:not(:has(.connect__table-scrolling)) {
    container-name: var(--connect__container-name);
    container-type: var(--connect__container-type);
  }
}

.connect__table {
  background-color: var(--connect__table-bg);
  border-collapse: collapse;
  border-radius: var(--connect__border-radius);
  border-spacing: 0;
  box-shadow: var(--connect__shadow-lvl-0);
  color: var(--connect__table-color);
  overflow: hidden;
  width: 100%;

  thead {
    border-radius: var(--connect__border-radius) var(--connect__border-radius) 0 0;

    th:first-of-type {
      border-top-left-radius: var(--connect__border-radius);
    }
    th:last-of-type {
      border-top-right-radius: var(--connect__border-radius);
    }
  }

  &.connect__table-scrolling {
    overflow-x: auto;
  }

  &.connect__table-sticky-header {
    &:is(table) {
      overflow: unset;
    }

    thead {
      position: sticky;
      top: -0.0625rem;
      z-index: 1;
    }
  }

  &.connect__table-no-thead {
    thead {
      display: none;
    }

    tr:first-of-type td {
      border-top: unset;
    }
  }

  caption {
    font-size: var(--connect__body-md);
    font-weight: var(--connect__fw-bold);
    margin-bottom: var(--connect__spacer-sm);
    margin-top: var(--connect__spacer-sm);
    text-align: left;
  }

  th,
  td {
    border: var(--connect__table-border-w) solid var(--connect__table-border-c);

    &:first-of-type {
      border-left: unset;
    }
    &:last-of-type {
      border-right: unset;
    }
  }

  th {
    background-color: var(--connect__thead-bg);
    border-top: unset;
    overflow: hidden;
    padding: var(--connect__spacer-sm);
    text-align: left;
    &:is([scope='row']) {
      background-color: var(--connect__tr-hover-bg);
      border-bottom: var(--connect__table-border-w) solid var(--connect__table-border-c);
      border-right: var(--connect__table-border-w) solid var(--connect__table-border-c);
      &:first-of-type {
        border-top: var(--connect__table-border-w) solid var(--connect__table-border-c);
      }
    }
  }

  td {
    border-bottom: unset;
    padding: var(--connect__spacer-sm);
  }

  tr:hover {
    background-color: var(--connect__tr-hover-bg);
  }
}

@container table-container (max-width: 26rem) {
  .connect__table {
    // display: block;
    tr,
    th,
    td {
      display: block;
      width: 100%;
    }

    tr {
      border-bottom: var(--connect__table-border-w) solid var(--connect__table-border-c);
      padding: var(--connect__spacer-sm) 0;
    }

    tr:nth-of-type(odd) {
      background-color: var(--connect__thead-bg);
    }

    // th:is([scope='row']) {
    //   background-color: unset;
    //   border: unset !important;
    // }

    td,
    th {
      background-color: unset;
      border: unset !important;
      position: relative;
      text-align: left;
    }

    thead tr:first-of-type {
      display: none;
    }

    td::before {
      content: attr(data-heading) ': ';
      font-weight: var(--connect__fw-bold);
    }
  }
}

/* 
.connect__character-counter Component

| Property     | Theme                     | Variant/State               | Fallback / Default       |
|--------------|---------------------------|-----------------------------|--------------------------|
| Font size    | theme__character-count-fs | variant__character-count-fs | connect__caption         |
| Line height  | theme__character-count-lh | variant__character-count-lh | connect__caption-lheight | 
| Font weight  | theme__character-fw       | variant__character-fw       | connect__fw-regular      |
| Color        | theme__character-color    | variant__character-color    | connect__surface-mid     |
|--------------|---------------------------|-----------------------------|--------------------------|
|--------------|-------Counter VARIABLES---|-----------------------------|--------------------------|
|--------------|---------------------------|-----------------------------|--------------------------|
| Font weight  | theme__character-fw       | variant__character-fw       | connect__fw-regular      |
|--------------|---------------------------|-----------------------------|--------------------------|


Usage:
  The .connect__character-counter class can be applied to an element that displays
  the character count for an input field.
*/

.connect__character-counter {
  align-items: center;
  color: var(
    --theme__character-color,
    var(--variant__character-color, var(--connect__surface-mid))
  );
  display: flex;
  font-family: var(--connect__font-sans);
  font-size: var(
    --theme__character-count-fs,
    var(--variant__character-color, var(--connect__caption))
  );
  font-weight: var(--theme__character-fw, var(--variant__character-fw, var(--connect__fw-regular)));
  gap: var(--connect__spacer-xs);
  justify-content: flex-end;
  line-height: var(
    --theme__character-count-lh,
    var(--variant__character-color-lh, var(--connect__caption-lheight))
  );

  > em {
    font-style: var(--theme__character-fs, var(--variant__character-fs, var(--connect__fs-normal)));
    font-weight: var(
      --theme__character-fw,
      var(--variant__character-fw, var(--connect__fw-regular))
    );
  }

  &-limit-reached {
    em {
      --variant__character-fs: italic;
      --variant__character-fw: 700;
    }
  }
}

@keyframes shake {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(5deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(-5deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* 
.connect__aside Component

| Property         | Theme                    | Variant                    | Fallback / Default       |
|------------------|--------------------------|----------------------------|--------------------------|
| Background color | --theme__aside-bg        | --variant__aside-bg        | --connect__surface-white |
| Padding X        | --theme__aside-padding-x | --variant__aside-padding-x | --connect__spacer-xs     |
| Padding Y        | --theme__aside-padding-y | --variant__aside-padding-y | --connect__spacer-md     |
| Width            | --theme__aside-w         | --variant__aside-w         | 3.625rem                 |
| Height           | --theme__aside-h         | --variant__aside-h         | 100vh                    |
*/

.connect__aside {
  align-items: center;
  background-color: var(--theme__aside-bg, var(--variant__aside-bg, var(--connect__surface-white)));
  display: flex;
  flex-flow: column wrap;
  height: var(--theme__aside-h, var(--variant__aside-h, 100vh));
  justify-content: space-between;
  margin: 0;
  padding: var(--theme__aside-padding-y, var(--variant__aside-padding-y, var(--connect__spacer-md)))
    var(--theme__aside-padding-x, var(--variant__aside-padding-x, var(--connect__spacer-xs)));
  width: var(--theme__aside-w, var(--variant__aside-w, 3.625rem));

  &:has(> .connect__list:only-child) {
    justify-content: end;
  }

  .connect__selected {
    &:not(:disabled) {
      --variant__btn-bg: var(--connect__brand-pale-magenta);
      --connect__inner-status-color: var(--connect__brand-pale-magenta);
      --variant__icon-fill-color: var(--connect__brand-deep-magenta);

      &:active {
        --connect__inner-status-color: var(--connect__surface-white);
      }
    }

    &:disabled {
      --variant__btn-bg: var(--connect__disabled-pale);
      --variant__icon-fill-color: var(--connect__disabled-mid);
      --connect__state-based-pointer: var(--connect__disabled-cursor);
    }
  }

  .connect__list {
    align-items: center;
    display: flex;
    flex-flow: column wrap;
    gap: var(--connect__spacer-xs);
    width: 100%;
  }

  .connect__stack {
    --connect__stack-spacing: var(--connect__spacer-xs);
  }

  hr {
    --variant__divider-margin-x: var(--connect__spacer-sm);
  }
}

/*
.connect__divider Component

Divider can be vertical or horizontal
[aria-orientation='vertical']

| Property         | Theme                     | Variant                     | Fallback / Default             |
|------------------|---------------------------|-----------------------------|--------------------------------|
| Background color | --theme__divider-bg       | --variant__divider-bg       | --connect__surface-pale        |
| Height           | --theme__divider-h        | --variant__divider-h        | --connect__effects-inner-edge  |
| Width            | --theme__divider-w        | --variant__divider-w        | --connect__full-w              |
| Radius           | --theme__divider-br       | --variant__divider-br       | --connect__border-radius       |         
| Margin x         | --theme__divider-margin-x | --variant__divider-margin-x | --connect__spacer-zero         |      
| Margin y         | --theme__divider-margin-y | --variant__divider-margin-y | --connect__spacer-zero         |       
*/

.connect__divider {
  /* Define horizontal margin variables */
  --connect__divider-margin-x: var(
    --theme__divider-margin-x,
    var(--variant__divider-margin-x, var(--connect__spacer-zero))
  );
  --connect__divider-margin-y: var(
    --theme__divider-margin-y,
    var(--variant__divider-margin-y, var(--connect__spacer-zero))
  );

  --connect__divider-bg: var(
    --theme__divider-bg,
    var(--variant__divider-bg, var(--connect__surface-pale))
  );
  --connect__divider-br: var(
    --theme__divider-br,
    var(--variant__divider-br, var(--connect__border-radius))
  );
  --connect__divider-h: var(
    --theme__divider-h,
    var(--variant__divider-h, var(--connect__effects-inner-edge))
  );
  --connect__divider-w: var(--theme__divider-w, var(--variant__divider-w, var(--connect__full-w)));

  background-color: var(--connect__divider-bg);
  border: 0;
  border-radius: var(--connect__divider-br);
  height: var(--connect__divider-h);
  margin: var(--connect__divider-margin-y) var(--connect__divider-margin-x);
  padding-bottom: var(--connect__spacer-xs);
  position: relative;
  width: calc(var(--connect__divider-w) - (var(--connect__divider-margin-x) * 2));

  &[aria-orientation='vertical'] {
    --variant__divider-margin-x: var(--connect__spacer-zero);
    --variant__divider-h: var(--connect__full-h);
    --variant__divider-w: var(--connect__effects-inner-edge);
  }
}

/*
.connect__list Component

| Property    | Theme            | Variants           | Fallback / Default         |
|-------------|------------------|--------------------|----------------------------|
| Font size   | --theme__list-fs | --variant__list-fs | --connect__body-sm         |
| Line Height | --theme__list-lh | --variant__list-lh | --connect__body-sm-lheight |
|-------------|------------------|--------------------|----------------------------|
| Marker Type |                  | --variant__list-style-type   
*/

.connect__list {
  list-style-type: var(--variant__list-style-type, none);
  padding-inline: inherit;
}

.connect__list-item {
  font-size: var(--theme__list-fs, var(--variant__list-fs, var(--connect__body-sm)));
  line-height: var(--theme__list-lh, var(--variant__list-lh, var(--connect__body-sm-lheight)));

  &::marker {
    color: var(--theme__list-marker-color, var(--variant__marker-color, inherit));
    font-size: var(--theme__connect-list-item-marker-fs, var(--connect__body-sm));
    line-height: var(--theme__connect-list-item-marker-lh, var(--connect__body-sm-lheight));
  }
}

.connect__list-none {
  --variant__marker-color: var(--connect__surface-null);
}

.connect__list-circle {
  --variant__list-style-type: circle;
}

.connect__list-decimal {
  --variant__list-style-type: decimal;
}

.connect__list-disc {
  --variant__list-style-type: disc;
}

.connect__list-roman {
  --variant__list-style-type: lower-roman;
}

.connect__list-square {
  --variant__list-style-type: square;
}

.connect__list-alpha {
  --variant__list-style-type: lower-alpha;
}

.connect__counters {
  counter-reset: orderedlist;

  &::marker {
    content: counters(list-item, '.') ':';
    font-weight: var(--theme__connect-marker-fw, var(--connect__fw-bold));
  }
}

/*
.connect__paper Component

| Property   | Theme                 | Variants                | Fallback / Default         |
|------------|-----------------------|-------------------------|----------------------------|
| Radius     | --theme__paper-radius | --variant__paper-radius | --connect__spacer-zero     |
|------------|-----------------------|-------------------------|----------------------------|
| Elevation-levels 
*/

.connect__paper {
  --connect__paper-bg: var(--theme__paper-bg, var(--connect__white));
  background-color: var(--connect__paper-bg);
}

.connect__paper-outlined {
  padding: var(--connect__effects-inner-edge);
}

.connect__rounded-corners {
  border-radius: var(
    --theme__rounded-radius,
    var(--variant__rounded-radius, var(--connect__border-radius))
  );
}

.connect__rounded-reset {
  --variant__rounded-radius: var(--connect__spacer-zero);
}

.connect__rounded-top-left {
  border-top-left-radius: var(
    --theme__rounded-radius,
    var(--variant__rounded-radius, var(--connect__border-radius))
  );
}

.connect__rounded-top-right {
  border-top-right-radius: var(
    --theme__rounded-radius,
    var(--variant__rounded-radius, var(--connect__border-radius))
  );
}

.connect__rounded-bottom-left {
  border-bottom-left-radius: var(
    --theme__rounded-radius,
    var(--variant__rounded-radius, var(--connect__border-radius))
  );
}

.connect__rounded-bottom-right {
  border-bottom-right-radius: var(
    --theme__rounded-radius,
    var(--variant__rounded-radius, var(--connect__border-radius))
  );
}

.connect__rounded-top {
  border-radius: var(
      --theme__rounded-radius,
      var(--variant__rounded-radius, var(--connect__border-radius))
    )
    var(--theme__rounded-radius, var(--variant__rounded-radius, var(--connect__border-radius))) 0 0;
}

.connect__rounded-bottom {
  border-radius: 0 0
    var(--theme__rounded-radius, var(--variant__rounded-radius, var(--connect__border-radius)))
    var(--theme__rounded-radius, var(--variant__rounded-radius, var(--connect__border-radius)));
}

.connect__elevation--2 {
  box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl--2);
}

.connect__elevation-0 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-0);
}

.connect__elevation-2 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-2);
}

.connect__elevation-4 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-4);
}

.connect__elevation-6 {
  box-shadow: var(--connect__effects-paper), var(--connect__shadow-lvl-6);
}

.connect__figure {
  height: 100%;
  margin-top: var(--theme__fig-mt, var(--variant__fig-mt, var(--connect__spacer-zero)));
}

/*
.connect__dialog Component

| Property   | Theme                  | Variants                 | Fallback / Default         |
|------------|------------------------|--------------------------|----------------------------|
| BG Color   | --theme__dialog-bg     | --variant_dialog-bg      | --connect__white           |
|------------|------------------------|--------------------------|----------------------------|
| Radius     | --theme__dialog-radius | --variant__dialog-radius | --connect__spacer-zero     |
|------------|------------------------|--------------------------|----------------------------|
| Elevation-levels 
*/

.connect__dialog {
  --connect__dialog-bg: var(--theme__dialog-bg, var(--connect__white));
  --connect__horizontal-margin: auto;
  --connect__vertical-margin: auto;

  background-color: var(--connect__dialog-bg);
  border: 0;
  padding: 0;
}

/* 
.connect__figcaption

| Property Type | Theme                      | Variant                     | Default                  |
|---------------|----------------------------|-----------------------------|--------------------------|
| Color         | theme__caption-fs          | variant__caption-fs         | connect__caption         |
| Line Height   | theme__caption-lh          | variant__caption-lh         | connect__caption-lheight |
| Margin        | theme__caption-mt          | variant__caption-mt         | connect__spacer-zero     |
| Padding T     | theme__caption-pt          | variant__caption-pt         | connect__spacer-xs       |
| Padding R     | theme__caption-pr          | variant__caption-pr         | connect__spacer-sm       |
| Padding B     | theme__caption-pb          | variant__caption-pb         | connect__spacer-xs       |
| Padding L     | theme__caption-pl          | variant__caption-pl         | connect__spacer-sm       |
| Text align    | theme__caption-text-align  | variant__caption-text-align | connect__text-left       |
| Text wrap     | variant__caption-text-wrap | variant__caption-text-wrap  | connect__text-balance    |
*/

.connect__figcaption {
  font-size: var(--theme__caption-fs, var(--variant__caption-fs, var(--connect__caption)));
  line-height: var(
    --theme__caption-lh,
    var(--variant__caption-lh, var(--connect__caption-lheight))
  );
  margin-top: var(--theme__caption-mt, var(--variant__caption-mt, var(--connect__spacer-zero)));
  padding: var(--theme__caption-pt, var(--variant__caption-pt, var(--connect__spacer-xs)))
    var(--theme__caption-pr, var(--variant__caption-pr, var(--connect__spacer-sm)))
    var(--theme__caption-pb, var(--variant__caption-pb, var(--connect__spacer-xs)))
    var(--theme__caption-pl, var(--variant__caption-pl, var(--connect__spacer-sm)));
  text-align: var(
    --theme__caption-text-align,
    var(--variant__caption-text-align, var(--connect__text-left))
  );
  text-wrap: var(
    --theme__caption-text-wrap,
    var(--variant__caption-text-wrap, var(--connect__text-balance))
  );
}

.connect__typography {
  font-weight: var(--connect__fw, var(--connect__fw-regular));
  hyphens: auto;
  margin: 0;
}

/* 
These styles apply to elements with classes that include '-correct'.

| Property Type         | Variable                                | Description                                              |
|-----------------------|-----------------------------------------|----------------------------------------------------------|
| Text color            | --active-color                          | Change to --connect__disabled-mid                        |
| Icon Fills            | --connect__icon-fill-color               | Change to --connect__disabled-light                      |
| Bg Colors             | --checkbox-state-based-bg               | Change to --connect__surface-white                       |
| Checkbox border color | --checkbox-checked-state-based-border-c | The border around the checkbox, it's blue before a state |
| Shadow                | --checkbox-state-based-inner-shadow     | Change to --state-based-bg                               |
| Cursors               | --connect__state-based-pointer          | Change to --connect__disabled-cursor                     |
| Dropdown Icon         | --state__connect-dropdown-icon          | Change to --state__variant-connect-dropdown-icon         |
*/

.connect__disabled {
  --active-color: var(--connect__disabled-mid);
  --connect__icon-fill-color: var(--connect__disabled-light);
  --checkbox-state-based-bg: var(--connect__surface-white);
  --checkbox-checked-state-based-border-c: var(--connect__disabled-light);
  --checkbox-state-based-inner-shadow: var(--state-based-bg);
  --connect__state-based-pointer: var(--connect__disabled-cursor);
  --state__connect-dropdown-icon: var(--state__variant-connect-dropdown-icon);
  --state-based-bg: var(--connect__disabled-pale);
}

/* 
These styles apply to elements with classes that include '-correct'.

| Property      | Variable                      | Description                       |
|---------------|-------------------------------|-----------------------------------|
| Inner Status  | --connect__inner-status-color | Change to --connect__correct-mid  |
| BG Color      | --state-based-bg              | Change bg to --color-correct-pale |
| Icon Input    | --state-icon                  | Change to correct icon            |
*/

.connect__feedback-correct {
  --connect__inner-status-color: var(--connect__correct-mid);
  --state-based-bg: var(--connect__correct-pale);
  --state-icon: var(--icon-correct);
}

/* 
These styles apply to elements with classes that include '-incorrect'.

| Property     | Variable                      | Description                        |
|--------------|-------------------------------|------------------------------------|
| Inner Status | --connect__inner-status-color | Change to --connect__incorrect-mid |
| BG Color     | --state-based-bg              | Change bg to --color-incorrect-bg  |
| Icon Input   | --state-icon                  | Change to incorrect icon           |
*/

.connect__feedback-incorrect {
  --connect__inner-status-color: var(--connect__incorrect-mid);
  --state-based-bg: var(--color-incorrect-bg);
  --state-icon: var(--icon-incorrect);
}

/* 
These styles apply to elements with classes that include '-shown'.

| Property     | Variable                      | Description                       |
|--------------|-------------------------------|-----------------------------------|
| Inner Status | --connect__inner-status-color | Change to --connect__surface-mid  |
| BG Color     | --state-based-bg              | Change bg to white                |
| Icon Input   | --state-icon                  | Change to shown icon              |
*/

.connect__feedback-shown {
  --connect__inner-status-color: var(--connect__surface-mid);
  --state-based-bg: var(--connect__surface-white);
  --state-icon: var(--icon-shown);
}

/* 
These styles apply to elements with classes that include '-correct', '-incorrect', or '-shown'.
Cover Text / Cursors / Iconography

| Property Type | Variable                        | Description                    |
|---------------|---------------------------------|--------------------------------|
| Color         | --active-color                  | Change to disabled text mid    |
| Cursor        | --connect__state-based-pointer  | Change to disabled cursor      |
| Iconography   | --state__connect-dropdown-icon  | Change to state dropdown icon  |
*/

.connect__feedback-correct,
.connect__feedback-incorrect,
.connect__feedback-shown {
  --active-color: var(--connect__disabled-mid);
  --connect__state-based-pointer: var(--connect__disabled-cursor);
  --state__connect-dropdown-icon: var(--state__variant-connect-dropdown-icon);
}

.connect__full-width {
  width: var(--connect__full-w);
}

/* 
To be fleshed out / moved
*/

.connect__contain {
  height: auto;
  max-height: 100%;
  max-width: 100%;
  object-fit: contain;
  object-position: center center;
  width: auto;
}

.connect__alert {
  .connect__button-menu {
    --connect__btn-padding-y: var(--connect__spacer-xs);
    --connect__btn-padding-x: var(--connect__spacer-xs);

    &:hover {
      box-shadow: var(--connect__shadow-null);
    }
  }
}

.connect__hint {
  --connect__hint-spacing: calc(-1 * var(--connect__spacer-sm));
  --connect__hint-y-offset: calc(var(--connect__hint-spacing) - var(--connect__hint-size));
  --connect__hint-x-offset: var(--connect__spacer-sm);
  --connect__hint-max-w: calc(var(--connect__dropdown-max-w) - var(--connect__hint-x-offset));

  background-color: var(--connect__surface-white);
  border-radius: var(--connect__inner-radius);
  color: var(--connect__hint-mid);
  display: var(--variant__hint-display, var(--connect__display-block));
  font-family: var(--connect__font-sans);
  font-size: var(--connect__credits);
  font-style: var(--connect__style-italic);
  font-weight: var(--connect__fw-regular);
  left: 0;
  line-height: var(--connect__credits-lheight);
  max-width: var(--connect__hint-max-w);
  overflow: var(--connect__overflow-hidden);
  padding: 0 var(--connect__effects-inner-edge);
  position: var(--connect__absolute);
  text-overflow: var(--connect__text-ellipsis);
  top: 0;
  transform: translateY(var(--connect__hint-y-offset)) translateX(var(--connect__hint-x-offset));
  white-space: var(--connect__white-space-nowrap);
  z-index: 2;
}

.connect__dropdown {
  appearance: none;
  background-color: var(
    --theme__dropdown-bg,
    var(--variant__dropdown-bg, var(--state-based-bg, var(--connect__surface-white)))
  );
  background-image: var(
    --state__connect-dropdown-icon,
    var(--variant__dropdown-icon, var(--connect__dropdown-icon-closed))
  );
  background-position: calc(var(--connect__full-w) - var(--connect__spacer-sm));
  background-repeat: no-repeat;
  background-size: var(--connect__icon-md);
  border: var(--connect__spacer-zero) solid var(--connect__surface-null);
  border-radius: var(--connect__border-radius);
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--1);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  display: var(--connect__display-flex);
  font-size: var(--theme__select-fs, var(--variant__select-fs, var(--connect__body-sm)));
  font-weight: var(--theme__select-fw, var(--variant__select-fw, var(--connect__fw-regular)));
  line-height: var(--theme__select-lh, var(--variant__select-lh, var(--connect__body-sm-lheight)));
  max-width: var(--connect__dropdown-max-w);
  min-width: var(--connect__dropdown-min-w);
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  padding-right: calc(var(--connect__spacer-sm) + var(--connect__icon-md));
  position: var(--connect__relative);
  text-overflow: var(--connect__text-ellipsis);
  width: var(--connect__full-w);

  &:where(:not(.connect__disabled)) {
    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);
    }

    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-active);
    }
  }

  &:where(:focus-visible:not(:active)) {
    box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-focus);
  }

  .connect__feedback-stamp {
    background-image: var(--state-icon);
    background-repeat: repeat;
    background-size: contain;
    display: var(--variant__feedback-display, var(--connect__display-none));
    height: var(--connect__icon-size, var(--connect__icon-md));
    position: var(--connect__absolute);
    right: 0;
    top: 0;
    transform: translate(var(--connect__feedback-translateX), var(--connect__feedback-translateY));
    width: var(--connect__icon-size, var(--connect__icon-md));
  }

  &:where([class*='connect__feedback']) {
    --variant__feedback-display: var(--connect__display-block);
    --variant__hint-display: var(--connect__display-none);
  }

  &.connect__disabled {
    --variant__hint-display: var(--connect__display-none);
  }
}

.connect__dropdown-open {
  --variant-menu-display: var(--connect__display-block);
  --variant__dropdown-icon: var(--connect__dropdown-icon-open);
}

.connect__selected-text {
  color: var(--active-color, var(--connect__surface-dark));
  display: var(--connect__display-block);
  font-family: var(--connect__font-sans);
  font-size: var(--connect__body-sm);
  line-height: var(--connect__body-sm-lheight);
  max-width: var(--connect__dropdown-max-w);
  min-width: var(--connect__dropdown-min-w);
  overflow: var(--connect__overflow-hidden);
  padding: 0 var(--connect__spacer-xs);
  text-overflow: var(--connect__text-ellipsis);
  white-space: var(--connect__white-space-nowrap);
  z-index: 2;
}

.connect__dropdown-menu {
  border-radius: var(--connect__border-radius);
  box-shadow: var(--connect__shadow-lvl-4);
  display: var(--variant-menu-display, var(--connect__display-none));
  left: var(--connect__spacer-zero);
  max-width: var(--connect__dropdown-max-w);
  min-width: var(--connect__full-w);
  overflow: var(--connect__overflow-hidden);
  position: var(--connect__absolute);
  top: calc(100% + var(--connect__spacer-xs));
  width: var(--connect__full-w);
}

.connect__dropdown-list-menu {
  display: var(--connect__display-flex);
  flex-flow: var(--connect__flow-row) var(--connect__flex-wrap);
  font-family: var(--connect__font-sans);
  gap: var(--connect__spacer-xs);
  max-height: var(--connect__dropdown-max-h);
  overflow: var(--connect__overflow-auto);
  padding: var(--connect__spacer-xs);
  width: var(--connect__full-w);
}

.connect__dropdown-item {
  background-color: var(--connect__surface-white);
  border-radius: var(--connect__inner-radius);
  box-shadow: var(--connect__shadow-null);
  color: var(--active-color, var(--connect__surface-dark));
  cursor: var(--connect__state-based-pointer, pointer);
  flex: 1 0 100%;
  font-family: var(--connect__font-sans);
  font-size: var(--connect__body-sm);
  line-height: var(--connect__body-sm-lheight);
  overflow: var(--connect__overflow-hidden);
  padding: var(--connect__spacer-xs) var(--connect__spacer-sm);
  text-overflow: var(--connect__text-ellipsis);
  white-space: var(--connect__white-space-nowrap);

  &:where(:not(.connect__disabled)) {
    &:active {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-0);
    }

    &:hover {
      box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl-2);
    }

    &:focus-visible {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
    }
  }

  &.connect__selected {
    --connect__inner-status-color: var(--connect__primary-mid);
    box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-2);

    &:focus-visible {
      box-shadow: var(--connect__effects-shadow), var(--connect__shadow-lvl-focus);
    }
  }
}

/*
connect__toolbar 
*/

.connect__toolbar {
  background-color: var(--theme__toolbar-bg, var(--variant__toolbar-bg, var(--connect__gray-c10)));
  border: var(--connect__input-border-w) solid
    var(--theme__input-border-c, var(--variant__input-border-c, var(--connect__surface-null)));
  border-radius: var(--connect__border-radius) var(--connect__border-radius) 0 0;
  box-shadow: var(--connect__inner-shadow), var(--connect__shadow-lvl--2);

  + .connect__input-textarea {
    border-radius: 0 0 var(--connect__border-radius) var(--connect__border-radius);
  }
}
