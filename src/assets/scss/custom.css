@import '../css/source.css';
/*! Variables and gradeband values */
:root {
  --shadow-outline: 0 0 0 0.0625rem rgba(0, 0, 0, 0.1);
  --shadow-flat: 0 0 0 0 rgba(0, 0, 0, 0), 0 0 0 0 rgba(0, 0, 0, 0), 0 0 0 0 rgba(0, 0, 0, 0);
  --shadow-default: 0 0.0625rem 0.5rem 0 rgba(0, 0, 0, 0.12),
    0 0.1875rem 0.25rem 0 rgba(0, 0, 0, 0.14), 0 0.1875rem 0.1875rem -0.125rem rgba(0, 0, 0, 0.2);
  --shadow-hover: 0 0.1875rem 0.875rem 0.125rem rgba(0, 0, 0, 0.12),
    0 0.5rem 0.625rem 0.0625rem rgba(0, 0, 0, 0.14),
    0 0.3125rem 0.3125rem -0.1875rem rgba(0, 0, 0, 0.2);
  --shadow-hover-button: 0 0.1875rem 0.1875rem -0.125rem rgba(0, 0, 0, 0.2),
    0 0.1875rem 0.25rem 0 rgba(0, 0, 0, 0.14), 0 0.0625rem 0.5rem 0 rgba(0, 0, 0, 0.12);
  --shadow-selected: 0 0 0 0.125rem var(--color-selected) inset;
  --shadow-correct: 0 0 0 0.125rem var(--color-correct) inset;
  --shadow-incorrect: 0 0 0 0.125rem var(--color-incorrect) inset;
  --shadow-selected-trans: 0 0 0 0.125rem rgba(0, 105, 254, 0) inset;
  --shadow-focus: 0 0.125rem 0 0.0625rem rgba(255, 46, 171, 1),
    0 0 0 0.0625rem rgba(255, 46, 171, 1), 0 0.0625rem 0 0.1875rem rgba(255, 255, 255, 1),
    0 0 0 0.125rem rgba(255, 255, 255, 1);
  --shadow-inner-gray: 0.1875rem 0.25rem 0.1875rem 0.0625rem rgba(0, 0, 0, 0.15) inset,
    0 0.1875rem 0.125rem 0 rgba(0, 0, 0, 0.3) inset;
  --shadow-inner-blue: 0.1875rem 0.25rem 0.1875rem 0.0625rem rgba(0, 105, 254, 0.15) inset,
    0 0.1875rem 0.125rem 0 rgba(0, 105, 254, 0.3) inset;
  --shadow-input-hover: 0 0.125rem 0.375rem 0.125rem rgba(0, 0, 0, 0.15),
    0 0.0625rem 0.125rem 0 rgba(0, 0, 0, 0.3);
  --color-action-default: var(--connect__blue-s50);
  --color-action-active: var(--connect__blue-c55);
  --color-action-disabled: var(--connect__gray-c10);
  --color-text-disabled: var(--connect__gray-c55);
  --color-action-bg: var(--connect__blue-c5);
  --color-selected: rgba(0, 105, 254, 1);
  --color-correct: var(--feedback-green);
  --color-incorrect: var(--feedback-red);
  --color-text: var(--connect__text-color);
  --icon-correct: url(../images/correct-912.svg);
  --icon-incorrect: url(../images/incorrect-912.svg);
  --icon-correct: url(../images/correct-912.svg);
  --icon-incorrect: url(../images/incorrect-912.svg);
  --icon-height: 1.5rem;
  --icon-width: 1.5rem;
  --icon-arrow: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" title="arrow-down" width="20" height="20" fill="none" viewBox="0 0 20 20"><path fill=" %23000000 " d="M4.707 7.293a1 1 0 0 0-1.414 1.414l6 6a1 1 0 0 0 1.414 0l6-6a1 1 0 0 0-1.414-1.414L10 12.586 4.707 7.293Z"/></svg>');
  --feedback-green: rgb(0, 161, 0);
  --feedback-green-bg: rgb(210, 247, 174);
  --feedback-green-border: rgb(0, 161, 0);
  --feedback-red: rgb(243, 0, 0);
  --feedback-red-bg: rgba(255, 214, 212, 1);
}

.connect__g23,
.connect__g45 {
  --shadow-correct: 0 0 0 0.125rem var(--color-correct) inset;
  --shadow-incorrect: 0 0 0 0.125rem var(--color-incorrect) inset;
  --icon-correct: url(../images/correct-35.svg);
  --icon-incorrect: url(../images/incorrect-35.svg);
  --icon-height: 2rem;
  --icon-width: 2rem;
}

.connect__g68 {
  --icon-height: 1.75rem;
  --icon-width: 1.75rem;
}

.connect__button,
button.connect__button {
  --shadow-outer: var(--shadow-flat);
  --shadow-inner: var(--shadow-selected-trans);
  --active-color: var(--color-action-default);
  --icon-correct: url(../images/circle-tick-green.svg);
  --icon-incorrect: url(../images/circle-cross-grey.svg);
  background-color: var(--active-color);
  box-shadow: var(--shadow-outline), var(--shadow-outer), var(--shadow-inner);
  border-radius: var(--border-radius);
  border: 0.125rem solid white;
  color: white;
  cursor: pointer;
  font-family: var(--connect__font-sans);
  font-size: var(--caption);
  line-height: var(--caption-lheight);
  padding: calc(var(--connect-spacer-sm) - var(--border-width)) calc(var(--connect-spacer-md) - var(--border-width));
  width: -moz-fit-content;
  width: fit-content;
}
.connect__button:not(:disabled):hover,
button.connect__button:not(:disabled):hover {
  --shadow-outer: var(--shadow-hover-button);
}
.connect__button:not(:disabled):active,
button.connect__button:not(:disabled):active {
  --shadow-outer: var(--shadow-flat);
}
.connect__button:focus-visible,
button.connect__button:focus-visible {
  --shadow-outer: var(--shadow-focus);
  outline: unset;
}
.connect__button-secondary,
button.connect__button-secondary {
  --shadow-inner: var(--shadow-selected);
  background-color: white;
  color: var(--active-color);
}
.connect__button-secondary.connect__button-correct, .connect__button-secondary.connect__button-incorrect,
button.connect__button-secondary.connect__button-correct,
button.connect__button-secondary.connect__button-incorrect {
  background-color: white;
}
.connect__button-correct,
button.connect__button-correct {
  --shadow-inner: var(--shadow-correct);
  background-color: var(--color-correct-bg);
  color: var(--color-text);
}
.connect__button-correct::after,
button.connect__button-correct::after {
  background: var(--icon-correct) no-repeat 0 0;
  background-size: contain;
  content: "";
  display: inline-block;
  height: calc(var(--icon-height) / 1.5);
  transform: translate(calc(var(--connect-spacer-sm) / 2), calc(var(--connect-spacer-sm) / 2));
  width: calc(var(--icon-width) / 1.5);
}
.connect__button-incorrect,
button.connect__button-incorrect {
  --shadow-inner: var(--shadow-incorrect);
  background-color: var(--color-incorrect-bg);
  color: var(--color-text);
}
.connect__button-incorrect::after,
button.connect__button-incorrect::after {
  background: var(--icon-incorrect) no-repeat 0 0;
  background-size: contain;
  content: "";
  display: inline-block;
  height: calc(var(--icon-height) / 1.5);
  transform: translate(calc(var(--connect-spacer-sm) / 2), calc(var(--connect-spacer-sm) / 2));
  width: calc(var(--icon-width) / 1.5);
}
.connect__button:disabled,
button.connect__button:disabled {
  --active-color: var(--color-action-disabled);
  color: var(--color-text-disabled);
  cursor: unset;
}

.connect__button-split {
  --shadow-outer: var(--shadow-flat);
  --shadow-inner: var(--shadow-selected-trans);
  border-radius: var(--border-radius);
  border: 0.125rem solid white;
  box-shadow: var(--shadow-outline), var(--shadow-outer), var(--shadow-inner);
  position: relative;
  width: -moz-fit-content;
  width: fit-content;
}
.connect__button-split:not(:disabled):hover {
  --shadow-outer: var(--shadow-hover-button);
}
.connect__button-split:not(:disabled):active {
  --shadow-outer: var(--shadow-flat);
}
.connect__button-split:focus-visible, .connect__button-split:focus-within {
  --shadow-outer: var(--shadow-focus);
  outline: unset;
}
.connect__button-split button {
  --active-color: var(--color-action-default);
  --icon-correct: url(../images/circle-tick-green.svg);
  --icon-incorrect: url(../images/circle-cross-grey.svg);
  background-color: var(--active-color);
  border-radius: var(--border-radius) 0 0 var(--border-radius);
  color: white;
  cursor: pointer;
  border: unset;
  font-family: var(--connect__font-sans);
  font-size: var(--caption);
  line-height: var(--caption-lheight);
  padding: calc(var(--connect-spacer-sm) - var(--border-width)) calc(var(--connect-spacer-md) - var(--border-width));
}
.connect__button-split button:nth-child(2) {
  background-color: var(--active-color);
  border-left: 0.125rem solid white;
  border-radius: 0 var(--border-radius) var(--border-radius) 0;
}
.connect__button-split button:nth-child(2) svg {
  height: 1rem;
  width: 1.25rem;
}
.connect__button-split button + ul {
  background-color: white;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-outline), var(--shadow-outer), var(--shadow-inner);
  color: var(--color-text);
  display: block;
  font-family: var(--connect__font-sans);
  font-size: var(--caption);
  line-height: var(--caption-lheight);
  list-style-type: none;
  margin-top: calc(var(--border-width) * 2);
  padding: var(--connect-spacer-sm);
  position: absolute;
  width: calc(100% - var(--connect-spacer-md) + var(--border-width));
  z-index: 1;
}
.connect__button-split button + ul li {
  padding-bottom: var(--connect-spacer-sm);
}
.connect__button-split button + ul li:last-child {
  padding-bottom: unset;
}
.connect__button-split button:disabled {
  --active-color: var(--color-action-disabled);
  color: var(--color-text-disabled);
  cursor: unset;
}
.connect__button-split button:focus-visible {
  outline: unset;
}

input[type=text].connect__input,
input[type=number].connect__input {
  --color-correct-bg: var(--feedback-green-bg);
  --color-incorrect-bg: var(--feedback-red-bg);
  --shadow-inner: var(--shadow-inner-gray);
  --shadow-outer: 0 0 0 0 rgba(0, 0, 0, 0), 0 0 0 0 rgba(0, 0, 0, 0), 0 0 0 0 rgba(0, 0, 0, 0);
  --white-border: 0px 0px 0px 2px #fff;
  --shadow-inner: 3px 4px 3px 1px rgba(0, 0, 0, 0.15) inset,
    0px 3px 2px 0px rgba(0, 0, 0, 0.3) inset;
  background-color: var(--color-action-disabled);
  box-shadow: var(--shadow-inner), var(--white-border), var(--shadow-outer);
  border-radius: var(--border-radius);
  border: 0.125rem solid rgba(41, 30, 30, 0);
  font-family: var(--connect__font-sans);
  font-size: var(--body-md);
  line-height: var(--body-md-lheight);
  padding: calc(var(--connect-spacer-sm) - var(--border-width)) calc(var(--connect-spacer-md) - var(--border-width));
}
input[type=text].connect__input:not(:disabled):not(:focus):hover,
input[type=number].connect__input:not(:disabled):not(:focus):hover {
  --shadow-outer: var(--shadow-hover-button);
}
input[type=text].connect__input:focus-visible,
input[type=number].connect__input:focus-visible {
  box-shadow: var(--shadow-focus), var(--shadow-inner);
  outline: unset;
}
input[type=text].connect__input:focus, input[type=text].connect__input:active,
input[type=number].connect__input:focus,
input[type=number].connect__input:active {
  outline: unset;
}
input[type=text].connect__input:disabled,
input[type=number].connect__input:disabled {
  --shadow-inner: 0 0 0 0 rgba(0, 0, 0, 0) inset;
}
input[type=text].connect__input-correct,
input[type=number].connect__input-correct {
  background-color: var(--color-correct-bg);
  color: black;
}
input[type=text].connect__input-incorrect,
input[type=number].connect__input-incorrect {
  background-color: var(--color-incorrect-bg-35, var(--color-incorrect-bg));
  color: black;
}

label.status:has(.connect__input-correct),
label.status:has(.connect__input-incorrect) {
  --status-icon: var(--icon-correct);
}
label.status:has(.connect__input-correct)::after,
label.status:has(.connect__input-incorrect)::after {
  background: var(--status-icon) no-repeat center left;
  background-size: contain;
  content: "";
  display: inline-block;
  height: var(--icon-width);
  width: var(--icon-height);
  transform: translate(calc(var(--icon-width) * -0.5), calc(var(--icon-width) * -0.5));
}

label.status:has(.connect__input-incorrect) {
  --status-icon: var(--icon-incorrect);
}

input[type=checkbox].connect__input,
input[type=radio].connect__input {
  position: absolute;
  opacity: 0;
}
input[type=checkbox].connect__input + label,
input[type=radio].connect__input + label {
  --shadow-outer: var(--shadow-default);
  --shadow-inner: 0 0 0 0.125rem rgba(0, 105, 254, 0) inset;
  align-items: center;
  box-shadow: var(--shadow-outline), var(--shadow-outer), var(--shadow-inner);
  background-color: white;
  display: flex;
  font-family: var(--connect__font-sans);
  font-size: var(--body-md);
  line-height: var(--body-md-lheight);
  width: 100%;
  padding: var(--connect-spacer-sm) var(--connect-spacer-md) var(--connect-spacer-sm) var(--connect-spacer-sm);
  border-radius: var(--border-radius);
  position: relative;
  border: 0.125rem solid white;
}
input[type=checkbox].connect__input + label::before,
input[type=radio].connect__input + label::before {
  content: "";
  width: calc(var(--connect-spacer-xl) - var(--border-width) * 2);
  height: calc(var(--connect-spacer-xl) - var(--border-width) * 2);
  background-color: white;
  margin-left: var(--connect-spacer-sm);
  margin-right: var(--connect-spacer-md);
  border-radius: calc(var(--border-radius) - var(--connect-spacer-sm));
  box-shadow: 0 0 0 var(--border-width) white, 0 0 0 calc(var(--border-width) * 2) var(--color-action-default);
  min-width: calc(var(--connect-spacer-xl) - var(--border-width) * 2);
}
input[type=checkbox].connect__input:not(:disabled) + label,
input[type=radio].connect__input:not(:disabled) + label {
  cursor: pointer;
}
input[type=checkbox].connect__input:not(:disabled) + label:hover,
input[type=radio].connect__input:not(:disabled) + label:hover {
  --shadow-outer: var(--shadow-hover);
}
input[type=checkbox].connect__input:not(:disabled) + label:active,
input[type=radio].connect__input:not(:disabled) + label:active {
  --shadow-outer: var(--shadow-flat);
}
input[type=checkbox].connect__input:focus-visible + label,
input[type=radio].connect__input:focus-visible + label {
  box-shadow: var(--shadow-focus), var(--shadow-inner);
  outline: unset;
}
input[type=checkbox].connect__input:checked + label,
input[type=radio].connect__input:checked + label {
  --shadow-inner: var(--shadow-selected);
}
input[type=checkbox].connect__input:checked + label::before,
input[type=radio].connect__input:checked + label::before {
  background-color: var(--color-action-default);
}
input[type=checkbox].connect__input:disabled + label,
input[type=radio].connect__input:disabled + label {
  --shadow-outer: var(--shadow-flat);
}
input[type=checkbox].connect__input.connect__input-correct + label,
input[type=radio].connect__input.connect__input-correct + label {
  --shadow-inner: var(--shadow-correct);
  background-color: var(--color-correct-bg, white);
  --status-icon: var(--icon-correct);
}
input[type=checkbox].connect__input.connect__input-correct + label::after,
input[type=radio].connect__input.connect__input-correct + label::after {
  background: var(--status-icon) no-repeat center left;
  background-size: contain;
  content: "";
  display: inline-block;
  height: var(--icon-width);
  position: absolute;
  width: var(--icon-height);
  top: calc(var(--icon-width) * -0.5 / 2);
  right: calc(var(--icon-width) * -0.5 / 2);
}
input[type=checkbox].connect__input.connect__input-incorrect + label,
input[type=radio].connect__input.connect__input-incorrect + label {
  --shadow-inner: var(--shadow-incorrect);
  background-color: var(--color-incorrect-bg, white);
  --status-icon: var(--icon-incorrect);
}
input[type=checkbox].connect__input.connect__input-incorrect + label::after,
input[type=radio].connect__input.connect__input-incorrect + label::after {
  background: var(--status-icon) no-repeat center left;
  background-size: contain;
  content: "";
  display: inline-block;
  height: var(--icon-width);
  position: absolute;
  width: var(--icon-height);
  top: calc(var(--icon-width) * -0.5 / 2);
  right: calc(var(--icon-width) * -0.5);
}

input[type=radio].connect__input + label {
  border-radius: 9999rem;
}
input[type=radio].connect__input + label::before, input[type=radio].connect__input + label::after {
  border-radius: 50%;
}

.mcq.connect__input + label {
  padding: var(--connect-spacer-sm) var(--connect-spacer-md);
  border-radius: var(--border-radius);
  margin-top: var(--connect-spacer-md);
}
.mcq.connect__input + label::before, .mcq.connect__input + label::after {
  content: unset;
}
.mcq.connect__input + label:has(img) {
  padding: var(--connect-spacer-md);
}
.mcq.connect__input + label:has(img) img {
  border-radius: calc(var(--border-radius) - var(--connect-spacer-sm));
}
.mcq.connect__input + label:has(img)::after {
  content: unset;
}
.mcq.connect__input-correct + label {
  padding-right: var(--connect-spacer-md);
}
.mcq.connect__input-correct + label::after {
  background: var(--icon-correct) no-repeat center left;
  background-size: contain;
  content: "";
  display: inline-block;
  height: var(--icon-width);
  width: var(--icon-height);
  transform: translateX(calc(var(--icon-width) / 4));
}
.mcq.connect__input-incorrect + label {
  padding-right: var(--connect-spacer-md);
}
.mcq.connect__input-incorrect + label::after {
  background: var(--icon-incorrect) no-repeat center left;
  background-size: contain;
  content: "";
  display: inline-block;
  height: var(--icon-width);
  width: var(--icon-height);
  transform: translateX(calc(var(--icon-width) / 4));
}

input[type=radio]:focus,
input[type=checkbox]:focus {
  outline: unset;
}

.connect__card {
  --shadow-outer: var(--shadow-default);
  background: white;
  border: var(--border-width) solid white;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-outline), var(--shadow-outer);
  display: grid;
  font-family: var(--connect__font-sans);
  font-size: var(--body-md);
  grid-template-columns: repeat(12, 1fr);
  gap: var(--connect-spacer-md);
  margin: var(--connect-spacer-md);
  width: auto;
}
.connect__card > * + * {
  margin-top: var(--connect-spacer-md);
}
.connect__card figure,
.connect__card header,
.connect__card .content,
.connect__card footer {
  margin: var(--connect-spacer-md) var(--connect-spacer-sm) 0;
  grid-column: 1/-1;
}
.connect__card figure:empty,
.connect__card header:empty,
.connect__card .content:empty,
.connect__card footer:empty {
  margin: unset;
}
.connect__card figure:last-child,
.connect__card header:last-child,
.connect__card .content:last-child,
.connect__card footer:last-child {
  margin-bottom: var(--connect-spacer-md);
}
.connect__card header h1,
.connect__card header h2,
.connect__card header h3,
.connect__card header h4,
.connect__card header h5,
.connect__card header h6 {
  margin: 0;
}
.connect__card figure + header {
  margin-top: unset;
}
.connect__card .content > * + * {
  margin: 0;
  margin-top: var(--connect-spacer-md);
}
.connect__figure,
figure {
  margin: var(--connect-spacer-sm);
}
.connect__figure img,
figure img {
  height: 100;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.connect__figure figcaption,
figure figcaption {
  font-size: var(--caption);
  margin-top: var(--connect-spacer-sm);
}

.connect__select,
select.connect__select {
  --active-color: var(--color-action-default);
  --icon: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" title="arrow-down" width="20" height="20" fill="none" viewBox="0 0 20 20"><path fill=" %23FFFFFF " d="M4.707 7.293a1 1 0 0 0-1.414 1.414l6 6a1 1 0 0 0 1.414 0l6-6a1 1 0 0 0-1.414-1.414L10 12.586 4.707 7.293Z"/></svg>');
  width: -moz-fit-content;
  width: fit-content;
  border-radius: var(--border-radius);
  border: var(--border-width) solid var(--active-color);
  font-size: var(--caption);
  line-height: var(--caption-lheight);
  padding: calc(var(--connect-spacer-sm) - var(--border-width)) calc(var(--connect-spacer-xl) + var(--connect-spacer-md) + var(--border-width)) calc(var(--connect-spacer-sm) - var(--border-width)) calc(var(--connect-spacer-md) - var(--border-width));
  background: var(--icon), linear-gradient(90deg, rgba(0, 114, 219, 0) 0%, rgba(0, 114, 219, 0) calc(100% - var(--border-width) * 2 - var(--connect-spacer-xl)), var(--active-color) calc(100% - var(--border-width) * 2 - var(--connect-spacer-xl)), var(--active-color) 100%);
  background-size: var(--icon-width) var(--icon-width), 100% 100%;
  background-position: calc(100% - (var(--icon-width) - var(--icon-width)) / 2 - var(--border-width)) center, top left;
  background-repeat: no-repeat;
  box-shadow: var(--shadow-default);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.connect__select:not(:disabled),
select.connect__select:not(:disabled) {
  cursor: pointer;
}
.connect__select:not(:disabled):hover,
select.connect__select:not(:disabled):hover {
  box-shadow: var(--shadow-hover);
}
.connect__select:disabled,
select.connect__select:disabled {
  --active-color: var(--color-action-disabled);
  box-shadow: unset;
  opacity: 1;
  color: var(--color-action-disabled);
}
.connect__select-correct,
select.connect__select-correct {
  --active-color: var(--color-correct);
  --icon: url("data:image/svg+xml,%3Csvg width='20' height='20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M15.828 2 18 4.194c-2.283 2.307-5.216 6.254-8.765 11.818L7.967 18l-1.3-1.967c-1.364-2.065-2.92-3.498-4.667-4.33l1.31-2.807c1.683.802 3.197 2 4.542 3.583C10.982 7.705 13.633 4.217 15.828 2Z' fill='%23fff'/%3E%3C/svg%3E");
  color: var(--color-text);
}
.connect__select-incorrect,
select.connect__select-incorrect {
  --active-color: var(--color-incorrect);
  --icon: url("data:image/svg+xml,%3Csvg width='20' height='20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m14 14.484-2.186 1.75c-.62-.775-1.43-2.042-2.436-3.813L4.98 16.82 3 14.839l4.973-4.973a236.42 236.42 0 0 1-2.889-5.613L7.59 3a249.365 249.365 0 0 0 2.455 4.794l4.689-4.689 1.98 1.98-5.279 5.28c1.11 1.995 1.97 3.373 2.567 4.12Z' fill='%23fff'/%3E%3C/svg%3E");
  color: var(--color-text);
}

section.connect__grid {
  --default-grid-gap: var(--connect-spacer-xl);
  -webkit-font-smoothing: antialiased;
  grid-template-columns: repeat(12, 1fr);
  gap: var(--default-grid-gap);
  display: grid;
  width: 100%;
  grid-template-rows: max-content;
  grid-auto-rows: auto;
  align-content: start;
}
section.connect__grid.connect__grid-gutter {
  padding: calc(var(--connect-spacer-xl) * 2) var(--gutter-width);
}

.connect__grid-item {
  grid-column: var(--start-col, 1)/span var(--span-col, 12);
  grid-row: var(--xs-row-span, auto);
}

@media (min-width: 480px) {
  .connect-sm {
    grid-column: var(--sm-start-col)/span var(--sm-span-col);
    grid-row: var(--sm-row-span, auto);
  }
}
@media (min-width: 650px) {
  .connect-md {
    grid-column: var(--md-start-col)/span var(--md-span-col);
    grid-row: var(--md-row-span, auto);
  }
}
@media (min-width: 880px) {
  .connect-lg {
    grid-column: var(--lg-start-col)/span var(--lg-span-col);
    grid-row: var(--lg-row-span, auto);
  }
}
@media (min-width: 1280px) {
  .connect-xl {
    grid-column: var(--xl-start-col)/span var(--xl-span-col);
    grid-row: var(--xl-row-span, auto);
  }
}
.connect__stack {
  --connect-stack-spacing: var(--xs-spacing);
  --connect-stack-direction: var(--xs-direction);
  --connect-stack-align: var(--xs-alignItems);
  --connect-stack-wrap: var(--xs-flexWrap);
  --connect-justify-content: var(--xs-justifyContent);
  align-items: var(--xs-alignItems, start);
  display: flex;
  flex-flow: var(--connect-stack-direction, column);
  flex-wrap: var(--connect-stack-wrap, wrap);
  gap: var(--connect-spacer-sm, var(--connect-stack-spacing));
  justify-content: var(--connect-justify-content, start);
  width: 100%;
}
@media (min-width: 30rem) {
  .connect__stack.stack-sm {
    --connect-stack-spacing: var(--sm-spacing);
    --connect-stack-direction: var(--sm-direction);
    --connect-stack-align: var(--sm-alignItems);
    --connect-stack-wrap: var(--sm-flexWrap);
    --connect-justify-content: var(--sm-justifyContent);
  }
}
@media (min-width: 40.625rem) {
  .connect__stack.stack-md {
    --connect-stack-spacing: var(--md-spacing);
    --connect-stack-direction: var(--md-direction);
    --connect-stack-align: var(--md-alignItems);
    --connect-stack-wrap: var(--md-flexWrap);
    --connect-justify-content: var(--md-justifyContent);
  }
}
@media (min-width: 55rem) {
  .connect__stack.stack-lg {
    --connect-stack-spacing: var(--lg-spacing);
    --connect-stack-direction: var(--lg-direction);
    --connect-stack-align: var(--lg-alignItems);
    --connect-stack-wrap: var(--lg-flexWrap);
    --connect-justify-content: var(--lg-justifyContent);
  }
}
@media (min-width: 80rem) {
  .connect__stack.stack-xl {
    --connect-stack-spacing: var(--xl-spacing);
    --connect-stack-direction: var(--xl-direction);
    --connect-stack-align: var(--xl-alignItems);
    --connect-stack-wrap: var(--xl-flexWrap);
    --connect-justify-content: var(--xl-justifyContent);
  }
}/*# sourceMappingURL=custom.css.map */